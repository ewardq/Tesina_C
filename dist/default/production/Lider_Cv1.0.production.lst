

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 27 05:37:59 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F886 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0009                     	;# 
   290  000A                     	;# 
   291  000B                     	;# 
   292  000C                     	;# 
   293  000D                     	;# 
   294  000E                     	;# 
   295  000E                     	;# 
   296  000F                     	;# 
   297  0010                     	;# 
   298  0011                     	;# 
   299  0012                     	;# 
   300  0013                     	;# 
   301  0014                     	;# 
   302  0015                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001B                     	;# 
   311  001C                     	;# 
   312  001D                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  0081                     	;# 
   316  0085                     	;# 
   317  0086                     	;# 
   318  0087                     	;# 
   319  0089                     	;# 
   320  008C                     	;# 
   321  008D                     	;# 
   322  008E                     	;# 
   323  008F                     	;# 
   324  0090                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0093                     	;# 
   328  0093                     	;# 
   329  0093                     	;# 
   330  0094                     	;# 
   331  0095                     	;# 
   332  0096                     	;# 
   333  0097                     	;# 
   334  0098                     	;# 
   335  0099                     	;# 
   336  009A                     	;# 
   337  009B                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  009F                     	;# 
   342  0105                     	;# 
   343  0107                     	;# 
   344  0108                     	;# 
   345  0109                     	;# 
   346  010C                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  010F                     	;# 
   351  0185                     	;# 
   352  0187                     	;# 
   353  0188                     	;# 
   354  0189                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  0006                     _PORTBbits	set	6
   358  0007                     _PORTCbits	set	7
   359  0005                     _PORTAbits	set	5
   360  0087                     _TRISC	set	135
   361  0086                     _TRISB	set	134
   362  0085                     _TRISA	set	133
   363  0188                     _ANSEL	set	392
   364                           
   365                           	psect	cinit
   366  07FC                     start_initialization:	
   367                           ; #config settings
   368                           
   369  07FC                     __initialization:
   370  07FC                     end_of_initialization:	
   371                           ;End of C runtime variable initialization code
   372                           
   373  07FC                     __end_of__initialization:
   374  07FC  0183               	clrf	3
   375  07FD  120A  118A  2F1A   	ljmp	_main	;jump to C main() function
   376                           
   377                           	psect	cstackCOMMON
   378  0070                     __pcstackCOMMON:
   379  0070                     ?_vehiculo_adelante:
   380  0070                     ??_vehiculo_adelante:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_vehiculo_derecha:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ??_vehiculo_derecha:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_vehiculo_izquierda:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_vehiculo_izquierda:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_vehiculo_atras:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ??_vehiculo_atras:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_vehiculo_detener:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_vehiculo_detener:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_direccional:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_direccional_apagar:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_direccional_apagar:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     direccional@op:	
   420                           ; 1 bytes @ 0x0
   421                           
   422                           
   423                           ; 2 bytes @ 0x0
   424  0070                     	ds	2
   425  0072                     ??_direccional:
   426  0072                     ??_main:	
   427                           ; 1 bytes @ 0x2
   428                           
   429                           
   430                           ; 1 bytes @ 0x2
   431  0072                     	ds	3
   432  0075                     main@E1_old:
   433                           
   434                           ; 1 bytes @ 0x5
   435  0075                     	ds	1
   436  0076                     main@E2_old:
   437                           
   438                           ; 1 bytes @ 0x6
   439  0076                     	ds	1
   440  0077                     main@Encoder2:
   441                           
   442                           ; 2 bytes @ 0x7
   443  0077                     	ds	2
   444  0079                     main@Encoder1:
   445                           
   446                           ; 2 bytes @ 0x9
   447  0079                     	ds	2
   448  007B                     main@E1:
   449                           
   450                           ; 1 bytes @ 0xB
   451  007B                     	ds	1
   452  007C                     main@E2:
   453                           
   454                           ; 1 bytes @ 0xC
   455  007C                     	ds	1
   456                           
   457                           	psect	maintext
   458  071A                     __pmaintext:	
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   461 ;;
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 31 in file "main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  Encoder1        2    9[COMMON] unsigned int 
   469 ;;  Encoder2        2    7[COMMON] unsigned int 
   470 ;;  E2              1   12[COMMON] _Bool 
   471 ;;  E1              1   11[COMMON] _Bool 
   472 ;;  E2_old          1    6[COMMON] _Bool 
   473 ;;  E1_old          1    5[COMMON] _Bool 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0, pclath, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : B00/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         8       0       0       0       0
   485 ;;      Temps:          3       0       0       0       0
   486 ;;      Totals:        11       0       0       0       0
   487 ;;Total ram usage:       11 bytes
   488 ;; Hardware stack levels required when called: 1
   489 ;; This function calls:
   490 ;;		_direccional
   491 ;;		_direccional_apagar
   492 ;;		_vehiculo_adelante
   493 ;;		_vehiculo_atras
   494 ;;		_vehiculo_derecha
   495 ;;		_vehiculo_detener
   496 ;;		_vehiculo_izquierda
   497 ;; This function is called by:
   498 ;;		Startup code after reset
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502  071A                     _main:	
   503                           ;psect for function _main
   504                           
   505  071A                     l732:	
   506                           ;incstack = 0
   507                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   508                           
   509                           
   510                           ;main.c: 33:     TRISA = 0b00000100;
   511  071A  3004               	movlw	4
   512  071B  1683               	bsf	3,5	;RP0=1, select bank1
   513  071C  1303               	bcf	3,6	;RP1=0, select bank1
   514  071D  0085               	movwf	5	;volatile
   515                           
   516                           ;main.c: 34:     TRISB = 0b00000011;
   517  071E  3003               	movlw	3
   518  071F  0086               	movwf	6	;volatile
   519  0720                     l734:
   520                           
   521                           ;main.c: 35:     ANSEL = 0x00;
   522  0720  1683               	bsf	3,5	;RP0=1, select bank3
   523  0721  1703               	bsf	3,6	;RP1=1, select bank3
   524  0722  0188               	clrf	8	;volatile
   525  0723                     l736:
   526                           
   527                           ;main.c: 36:     TRISC = 0x00;
   528  0723  1683               	bsf	3,5	;RP0=1, select bank1
   529  0724  1303               	bcf	3,6	;RP1=0, select bank1
   530  0725  0187               	clrf	7	;volatile
   531  0726                     l738:
   532                           
   533                           ;main.c: 38:     uint16_t Encoder1 = 0;
   534  0726  01F9               	clrf	main@Encoder1
   535  0727  01FA               	clrf	main@Encoder1+1
   536  0728                     l740:
   537                           
   538                           ;main.c: 39:     uint16_t Encoder2 = 0;
   539  0728  01F7               	clrf	main@Encoder2
   540  0729  01F8               	clrf	main@Encoder2+1
   541  072A                     l742:
   542                           
   543                           ;main.c: 41:     _Bool E1;;main.c: 42:     _Bool E1_old;;main.c: 43:     _Bool E2;;main.
      +                          c: 44:     _Bool E2_old;;main.c: 45:           PORTBbits.RB7 = 0;
   544  072A  1283               	bcf	3,5	;RP0=0, select bank0
   545  072B  1303               	bcf	3,6	;RP1=0, select bank0
   546  072C  1386               	bcf	6,7	;volatile
   547  072D                     l744:
   548                           
   549                           ;main.c: 46:         vehiculo_atras();
   550  072D  120A  118A  26EE  120A  118A  	fcall	_vehiculo_atras
   551  0732                     l746:
   552                           
   553                           ;main.c: 47:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   554  0732  3006               	movlw	6
   555  0733  00F4               	movwf	??_main+2
   556  0734  3013               	movlw	19
   557  0735  00F3               	movwf	??_main+1
   558  0736  30AD               	movlw	173
   559  0737  00F2               	movwf	??_main
   560  0738                     u177:
   561  0738  0BF2               	decfsz	??_main,f
   562  0739  2F38               	goto	u177
   563  073A  0BF3               	decfsz	??_main+1,f
   564  073B  2F38               	goto	u177
   565  073C  0BF4               	decfsz	??_main+2,f
   566  073D  2F38               	goto	u177
   567  073E  2F3F               	nop2
   568                           
   569                           ;main.c: 48:         vehiculo_derecha();
   570  073F  120A  118A  26F5  120A  118A  	fcall	_vehiculo_derecha
   571  0744                     l748:
   572                           
   573                           ;main.c: 49:                 direccional(1);
   574  0744  3001               	movlw	1
   575  0745  00F0               	movwf	direccional@op
   576  0746  3000               	movlw	0
   577  0747  00F1               	movwf	direccional@op+1
   578  0748  120A  118A  270A  120A  118A  	fcall	_direccional
   579                           
   580                           ;main.c: 50:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   581  074D  3006               	movlw	6
   582  074E  00F4               	movwf	??_main+2
   583  074F  3013               	movlw	19
   584  0750  00F3               	movwf	??_main+1
   585  0751  30AD               	movlw	173
   586  0752  00F2               	movwf	??_main
   587  0753                     u187:
   588  0753  0BF2               	decfsz	??_main,f
   589  0754  2F53               	goto	u187
   590  0755  0BF3               	decfsz	??_main+1,f
   591  0756  2F53               	goto	u187
   592  0757  0BF4               	decfsz	??_main+2,f
   593  0758  2F53               	goto	u187
   594  0759  2F5A               	nop2
   595  075A                     l750:
   596                           
   597                           ;main.c: 51:         vehiculo_izquierda();
   598  075A  120A  118A  2703  120A  118A  	fcall	_vehiculo_izquierda
   599                           
   600                           ;main.c: 52:                 direccional(0);
   601  075F  3000               	movlw	0
   602  0760  00F0               	movwf	direccional@op
   603  0761  00F1               	movwf	direccional@op+1
   604  0762  120A  118A  270A  120A  118A  	fcall	_direccional
   605  0767                     l752:
   606                           
   607                           ;main.c: 53:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   608  0767  3006               	movlw	6
   609  0768  00F4               	movwf	??_main+2
   610  0769  3013               	movlw	19
   611  076A  00F3               	movwf	??_main+1
   612  076B  30AD               	movlw	173
   613  076C  00F2               	movwf	??_main
   614  076D                     u197:
   615  076D  0BF2               	decfsz	??_main,f
   616  076E  2F6D               	goto	u197
   617  076F  0BF3               	decfsz	??_main+1,f
   618  0770  2F6D               	goto	u197
   619  0771  0BF4               	decfsz	??_main+2,f
   620  0772  2F6D               	goto	u197
   621  0773  2F74               	nop2
   622                           
   623                           ;main.c: 54:         vehiculo_detener();
   624  0774  120A  118A  26FC  120A  118A  	fcall	_vehiculo_detener
   625  0779                     l754:
   626                           
   627                           ;main.c: 55:        _delay((unsigned long)((1000)*(4000000/4000.0)));
   628  0779  3006               	movlw	6
   629  077A  00F4               	movwf	??_main+2
   630  077B  3013               	movlw	19
   631  077C  00F3               	movwf	??_main+1
   632  077D  30AD               	movlw	173
   633  077E  00F2               	movwf	??_main
   634  077F                     u207:
   635  077F  0BF2               	decfsz	??_main,f
   636  0780  2F7F               	goto	u207
   637  0781  0BF3               	decfsz	??_main+1,f
   638  0782  2F7F               	goto	u207
   639  0783  0BF4               	decfsz	??_main+2,f
   640  0784  2F7F               	goto	u207
   641  0785  2F86               	nop2
   642  0786                     l756:
   643                           
   644                           ;main.c: 56:         vehiculo_adelante();
   645  0786  120A  118A  26E7  120A  118A  	fcall	_vehiculo_adelante
   646  078B                     l758:
   647                           
   648                           ;main.c: 57:         direccional_apagar();
   649  078B  120A  118A  26E2  120A  118A  	fcall	_direccional_apagar
   650  0790                     l760:
   651                           
   652                           ;main.c: 62:         E1 = PORTBbits.RB1;
   653  0790  3000               	movlw	0
   654  0791  1283               	bcf	3,5	;RP0=0, select bank0
   655  0792  1303               	bcf	3,6	;RP1=0, select bank0
   656  0793  1886               	btfsc	6,1	;volatile
   657  0794  3001               	movlw	1
   658  0795  00FB               	movwf	main@E1
   659  0796                     l762:
   660                           
   661                           ;main.c: 63:         if ((E1_old != E1) & (E1 == 1)){
   662  0796  0875               	movf	main@E1_old,w
   663  0797  067B               	xorwf	main@E1,w
   664  0798  1903               	skipnz
   665  0799  2F9B               	goto	u101
   666  079A  2F9C               	goto	u100
   667  079B                     u101:
   668  079B  2FA7               	goto	l46
   669  079C                     u100:
   670  079C                     l764:
   671  079C  037B               	decf	main@E1,w
   672  079D  1D03               	btfss	3,2
   673  079E  2FA0               	goto	u111
   674  079F  2FA1               	goto	u110
   675  07A0                     u111:
   676  07A0  2FA7               	goto	l46
   677  07A1                     u110:
   678  07A1                     l766:
   679                           
   680                           ;main.c: 64:             Encoder1++;}
   681  07A1  3001               	movlw	1
   682  07A2  07F9               	addwf	main@Encoder1,f
   683  07A3  1803               	skipnc
   684  07A4  0AFA               	incf	main@Encoder1+1,f
   685  07A5  3000               	movlw	0
   686  07A6  07FA               	addwf	main@Encoder1+1,f
   687  07A7                     l46:
   688                           
   689                           ;main.c: 65:         E1_old = E1;
   690  07A7  087B               	movf	main@E1,w
   691  07A8  00F2               	movwf	??_main
   692  07A9  0872               	movf	??_main,w
   693  07AA  00F5               	movwf	main@E1_old
   694  07AB                     l768:
   695                           
   696                           ;main.c: 67:         if (Encoder1 == 1050)
   697  07AB  301A               	movlw	26
   698  07AC  0679               	xorwf	main@Encoder1,w
   699  07AD  3004               	movlw	4
   700  07AE  1903               	skipnz
   701  07AF  067A               	xorwf	main@Encoder1+1,w
   702  07B0  1D03               	btfss	3,2
   703  07B1  2FB3               	goto	u121
   704  07B2  2FB4               	goto	u120
   705  07B3                     u121:
   706  07B3  2FB5               	goto	l772
   707  07B4                     u120:
   708  07B4                     l770:
   709                           
   710                           ;main.c: 68:             PORTBbits.RB7 = 1;
   711  07B4  1786               	bsf	6,7	;volatile
   712  07B5                     l772:
   713                           
   714                           ;main.c: 70:         E2 = PORTBbits.RB0;
   715  07B5  3000               	movlw	0
   716  07B6  1806               	btfsc	6,0	;volatile
   717  07B7  3001               	movlw	1
   718  07B8  00FC               	movwf	main@E2
   719  07B9                     l774:
   720                           
   721                           ;main.c: 71:         if ((E2_old != E2) & (E2 == 1)){
   722  07B9  0876               	movf	main@E2_old,w
   723  07BA  067C               	xorwf	main@E2,w
   724  07BB  1903               	skipnz
   725  07BC  2FBE               	goto	u131
   726  07BD  2FBF               	goto	u130
   727  07BE                     u131:
   728  07BE  2FCA               	goto	l48
   729  07BF                     u130:
   730  07BF                     l776:
   731  07BF  037C               	decf	main@E2,w
   732  07C0  1D03               	btfss	3,2
   733  07C1  2FC3               	goto	u141
   734  07C2  2FC4               	goto	u140
   735  07C3                     u141:
   736  07C3  2FCA               	goto	l48
   737  07C4                     u140:
   738  07C4                     l778:
   739                           
   740                           ;main.c: 72:             Encoder2++;}
   741  07C4  3001               	movlw	1
   742  07C5  07F7               	addwf	main@Encoder2,f
   743  07C6  1803               	skipnc
   744  07C7  0AF8               	incf	main@Encoder2+1,f
   745  07C8  3000               	movlw	0
   746  07C9  07F8               	addwf	main@Encoder2+1,f
   747  07CA                     l48:
   748                           
   749                           ;main.c: 73:         E2_old = E2;
   750  07CA  087C               	movf	main@E2,w
   751  07CB  00F2               	movwf	??_main
   752  07CC  0872               	movf	??_main,w
   753  07CD  00F6               	movwf	main@E2_old
   754  07CE                     l780:
   755                           
   756                           ;main.c: 75:         if (Encoder2 == 1050)
   757  07CE  301A               	movlw	26
   758  07CF  0677               	xorwf	main@Encoder2,w
   759  07D0  3004               	movlw	4
   760  07D1  1903               	skipnz
   761  07D2  0678               	xorwf	main@Encoder2+1,w
   762  07D3  1D03               	btfss	3,2
   763  07D4  2FD6               	goto	u151
   764  07D5  2FD7               	goto	u150
   765  07D6                     u151:
   766  07D6  2FD8               	goto	l784
   767  07D7                     u150:
   768  07D7                     l782:
   769                           
   770                           ;main.c: 76:             PORTBbits.RB7 = 1;
   771  07D7  1786               	bsf	6,7	;volatile
   772  07D8                     l784:
   773                           
   774                           ;main.c: 78:     }while(Encoder1 != 2100);
   775  07D8  3034               	movlw	52
   776  07D9  0679               	xorwf	main@Encoder1,w
   777  07DA  3008               	movlw	8
   778  07DB  1903               	skipnz
   779  07DC  067A               	xorwf	main@Encoder1+1,w
   780  07DD  1D03               	btfss	3,2
   781  07DE  2FE0               	goto	u161
   782  07DF  2FE1               	goto	u160
   783  07E0                     u161:
   784  07E0  2F90               	goto	l760
   785  07E1                     u160:
   786  07E1                     l50:
   787                           
   788                           ;main.c: 79:     PORTBbits.RB7 = 0;
   789  07E1  1386               	bcf	6,7	;volatile
   790  07E2                     l786:
   791                           
   792                           ;main.c: 80:     vehiculo_detener();
   793  07E2  120A  118A  26FC  120A  118A  	fcall	_vehiculo_detener
   794  07E7                     l788:
   795                           
   796                           ;main.c: 81:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   797  07E7  3006               	movlw	6
   798  07E8  00F4               	movwf	??_main+2
   799  07E9  3013               	movlw	19
   800  07EA  00F3               	movwf	??_main+1
   801  07EB  30AD               	movlw	173
   802  07EC  00F2               	movwf	??_main
   803  07ED                     u217:
   804  07ED  0BF2               	decfsz	??_main,f
   805  07EE  2FED               	goto	u217
   806  07EF  0BF3               	decfsz	??_main+1,f
   807  07F0  2FED               	goto	u217
   808  07F1  0BF4               	decfsz	??_main+2,f
   809  07F2  2FED               	goto	u217
   810  07F3  2FF4               	nop2
   811  07F4                     l790:
   812                           
   813                           ;main.c: 82:     Encoder1 = 0;
   814  07F4  01F9               	clrf	main@Encoder1
   815  07F5  01FA               	clrf	main@Encoder1+1
   816  07F6                     l792:
   817                           
   818                           ;main.c: 83:     Encoder2 = 0;
   819  07F6  01F7               	clrf	main@Encoder2
   820  07F7  01F8               	clrf	main@Encoder2+1
   821                           
   822                           ;main.c: 84:     }
   823  07F8  2F90               	goto	l760
   824  07F9  120A  118A  2800   	ljmp	start
   825  07FC                     __end_of_main:
   826                           
   827                           	psect	text1
   828  0703                     __ptext1:	
   829 ;; *************** function _vehiculo_izquierda *****************
   830 ;; Defined at:
   831 ;;		line 27 in file "./prototipos.h"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		None
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0
   848 ;;      Totals:         0       0       0       0       0
   849 ;;Total ram usage:        0 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858  0703                     _vehiculo_izquierda:	
   859                           ;psect for function _vehiculo_izquierda
   860                           
   861  0703                     l654:	
   862                           ;incstack = 0
   863                           ; Regs used in _vehiculo_izquierda: []
   864                           
   865                           
   866                           ;./prototipos.h: 28:     PORTAbits.RA7 = 0;
   867  0703  1283               	bcf	3,5	;RP0=0, select bank0
   868  0704  1303               	bcf	3,6	;RP1=0, select bank0
   869  0705  1385               	bcf	5,7	;volatile
   870                           
   871                           ;./prototipos.h: 29:     PORTCbits.RC1 = 0;
   872  0706  1087               	bcf	7,1	;volatile
   873                           
   874                           ;./prototipos.h: 31:     PORTAbits.RA6 = 1;
   875  0707  1705               	bsf	5,6	;volatile
   876                           
   877                           ;./prototipos.h: 32:     PORTCbits.RC2 = 0;
   878  0708  1107               	bcf	7,2	;volatile
   879  0709                     l25:
   880  0709  0008               	return
   881  070A                     __end_of_vehiculo_izquierda:
   882                           
   883                           	psect	text2
   884  06FC                     __ptext2:	
   885 ;; *************** function _vehiculo_detener *****************
   886 ;; Defined at:
   887 ;;		line 43 in file "./prototipos.h"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		None
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0
   904 ;;      Totals:         0       0       0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914  06FC                     _vehiculo_detener:	
   915                           ;psect for function _vehiculo_detener
   916                           
   917  06FC                     l658:	
   918                           ;incstack = 0
   919                           ; Regs used in _vehiculo_detener: []
   920                           
   921                           
   922                           ;./prototipos.h: 44:     PORTAbits.RA7 = 0;
   923  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   924  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   925  06FE  1385               	bcf	5,7	;volatile
   926                           
   927                           ;./prototipos.h: 45:     PORTCbits.RC1 = 0;
   928  06FF  1087               	bcf	7,1	;volatile
   929                           
   930                           ;./prototipos.h: 47:     PORTAbits.RA6 = 0;
   931  0700  1305               	bcf	5,6	;volatile
   932                           
   933                           ;./prototipos.h: 48:     PORTCbits.RC2 = 0;
   934  0701  1107               	bcf	7,2	;volatile
   935  0702                     l31:
   936  0702  0008               	return
   937  0703                     __end_of_vehiculo_detener:
   938                           
   939                           	psect	text3
   940  06F5                     __ptext3:	
   941 ;; *************** function _vehiculo_derecha *****************
   942 ;; Defined at:
   943 ;;		line 19 in file "./prototipos.h"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		None
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970  06F5                     _vehiculo_derecha:	
   971                           ;psect for function _vehiculo_derecha
   972                           
   973  06F5                     l652:	
   974                           ;incstack = 0
   975                           ; Regs used in _vehiculo_derecha: []
   976                           
   977                           
   978                           ;./prototipos.h: 20:     PORTAbits.RA7 = 1;
   979  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   980  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   981  06F7  1785               	bsf	5,7	;volatile
   982                           
   983                           ;./prototipos.h: 21:     PORTCbits.RC1 = 0;
   984  06F8  1087               	bcf	7,1	;volatile
   985                           
   986                           ;./prototipos.h: 23:     PORTAbits.RA6 = 0;
   987  06F9  1305               	bcf	5,6	;volatile
   988                           
   989                           ;./prototipos.h: 24:     PORTCbits.RC2 = 0;
   990  06FA  1107               	bcf	7,2	;volatile
   991  06FB                     l22:
   992  06FB  0008               	return
   993  06FC                     __end_of_vehiculo_derecha:
   994                           
   995                           	psect	text4
   996  06EE                     __ptext4:	
   997 ;; *************** function _vehiculo_atras *****************
   998 ;; Defined at:
   999 ;;		line 35 in file "./prototipos.h"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		None
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0
  1016 ;;      Totals:         0       0       0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026  06EE                     _vehiculo_atras:	
  1027                           ;psect for function _vehiculo_atras
  1028                           
  1029  06EE                     l656:	
  1030                           ;incstack = 0
  1031                           ; Regs used in _vehiculo_atras: []
  1032                           
  1033                           
  1034                           ;./prototipos.h: 36:     PORTAbits.RA7 = 0;
  1035  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1036  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1037  06F0  1385               	bcf	5,7	;volatile
  1038                           
  1039                           ;./prototipos.h: 37:     PORTCbits.RC1 = 1;
  1040  06F1  1487               	bsf	7,1	;volatile
  1041                           
  1042                           ;./prototipos.h: 39:     PORTAbits.RA6 = 0;
  1043  06F2  1305               	bcf	5,6	;volatile
  1044                           
  1045                           ;./prototipos.h: 40:     PORTCbits.RC2 = 1;
  1046  06F3  1507               	bsf	7,2	;volatile
  1047  06F4                     l28:
  1048  06F4  0008               	return
  1049  06F5                     __end_of_vehiculo_atras:
  1050                           
  1051                           	psect	text5
  1052  06E7                     __ptext5:	
  1053 ;; *************** function _vehiculo_adelante *****************
  1054 ;; Defined at:
  1055 ;;		line 11 in file "./prototipos.h"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		None
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082  06E7                     _vehiculo_adelante:	
  1083                           ;psect for function _vehiculo_adelante
  1084                           
  1085  06E7                     l650:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _vehiculo_adelante: []
  1088                           
  1089                           
  1090                           ;./prototipos.h: 12:     PORTAbits.RA7 = 1;
  1091  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1092  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1093  06E9  1785               	bsf	5,7	;volatile
  1094                           
  1095                           ;./prototipos.h: 13:     PORTCbits.RC1 = 0;
  1096  06EA  1087               	bcf	7,1	;volatile
  1097                           
  1098                           ;./prototipos.h: 15:     PORTAbits.RA6 = 1;
  1099  06EB  1705               	bsf	5,6	;volatile
  1100                           
  1101                           ;./prototipos.h: 16:     PORTCbits.RC2 = 0;
  1102  06EC  1107               	bcf	7,2	;volatile
  1103  06ED                     l19:
  1104  06ED  0008               	return
  1105  06EE                     __end_of_vehiculo_adelante:
  1106                           
  1107                           	psect	text6
  1108  06E2                     __ptext6:	
  1109 ;; *************** function _direccional_apagar *****************
  1110 ;; Defined at:
  1111 ;;		line 62 in file "./prototipos.h"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		None
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0
  1128 ;;      Totals:         0       0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138  06E2                     _direccional_apagar:	
  1139                           ;psect for function _direccional_apagar
  1140                           
  1141  06E2                     l664:	
  1142                           ;incstack = 0
  1143                           ; Regs used in _direccional_apagar: []
  1144                           
  1145                           
  1146                           ;./prototipos.h: 63:      PORTAbits.RA0 = 0;
  1147  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1148  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1149  06E4  1005               	bcf	5,0	;volatile
  1150                           
  1151                           ;./prototipos.h: 64:      PORTAbits.RA1 = 0;
  1152  06E5  1085               	bcf	5,1	;volatile
  1153  06E6                     l39:
  1154  06E6  0008               	return
  1155  06E7                     __end_of_direccional_apagar:
  1156                           
  1157                           	psect	text7
  1158  070A                     __ptext7:	
  1159 ;; *************** function _direccional *****************
  1160 ;; Defined at:
  1161 ;;		line 51 in file "./prototipos.h"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  op              2    0[COMMON] unsigned int 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         2       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0
  1178 ;;      Totals:         2       0       0       0       0
  1179 ;;Total ram usage:        2 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188  070A                     _direccional:	
  1189                           ;psect for function _direccional
  1190                           
  1191  070A                     l728:	
  1192                           ;incstack = 0
  1193                           ; Regs used in _direccional: [wreg+status,2+status,0]
  1194                           
  1195                           
  1196                           ;./prototipos.h: 52:     if (op == 1){
  1197  070A  0370               	decf	direccional@op,w
  1198  070B  0471               	iorwf	direccional@op+1,w
  1199  070C  1D03               	btfss	3,2
  1200  070D  2F0F               	goto	u91
  1201  070E  2F10               	goto	u90
  1202  070F                     u91:
  1203  070F  2F15               	goto	l34
  1204  0710                     u90:
  1205  0710                     l730:
  1206                           
  1207                           ;./prototipos.h: 53:         PORTAbits.RA0 = 1;
  1208  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0712  1405               	bsf	5,0	;volatile
  1211                           
  1212                           ;./prototipos.h: 54:         PORTAbits.RA1 = 0;
  1213  0713  1085               	bcf	5,1	;volatile
  1214                           
  1215                           ;./prototipos.h: 55:     }
  1216  0714  2F19               	goto	l36
  1217  0715                     l34:	
  1218                           ;./prototipos.h: 56:     else{
  1219                           
  1220                           
  1221                           ;./prototipos.h: 57:         PORTAbits.RA0 = 0;
  1222  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0717  1005               	bcf	5,0	;volatile
  1225                           
  1226                           ;./prototipos.h: 58:         PORTAbits.RA1 = 1;
  1227  0718  1485               	bsf	5,1	;volatile
  1228  0719                     l36:
  1229  0719  0008               	return
  1230  071A                     __end_of_direccional:
  1231  007E                     btemp	set	126	;btemp
  1232  007E                     wtemp0	set	126
  1233                           
  1234                           	psect	idloc
  1235                           
  1236                           ;Config register IDLOC0 @ 0x2000
  1237                           ;	unspecified, using default values
  1238  2000                     	org	8192
  1239  2000  3FFF               	dw	16383
  1240                           
  1241                           ;Config register IDLOC1 @ 0x2001
  1242                           ;	unspecified, using default values
  1243  2001                     	org	8193
  1244  2001  3FFF               	dw	16383
  1245                           
  1246                           ;Config register IDLOC2 @ 0x2002
  1247                           ;	unspecified, using default values
  1248  2002                     	org	8194
  1249  2002  3FFF               	dw	16383
  1250                           
  1251                           ;Config register IDLOC3 @ 0x2003
  1252                           ;	unspecified, using default values
  1253  2003                     	org	8195
  1254  2003  3FFF               	dw	16383
  1255                           
  1256                           	psect	config
  1257                           
  1258                           ;Config register CONFIG1 @ 0x2007
  1259                           ;	Oscillator Selection bits
  1260                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1261                           ;	Watchdog Timer Enable bit
  1262                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1263                           ;	Power-up Timer Enable bit
  1264                           ;	PWRTE = ON, PWRT enabled
  1265                           ;	RE3/MCLR pin function select bit
  1266                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1267                           ;	Code Protection bit
  1268                           ;	CP = OFF, Program memory code protection is disabled
  1269                           ;	Data Code Protection bit
  1270                           ;	CPD = OFF, Data memory code protection is disabled
  1271                           ;	Brown Out Reset Selection bits
  1272                           ;	BOREN = OFF, BOR disabled
  1273                           ;	Internal External Switchover bit
  1274                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1275                           ;	Fail-Safe Clock Monitor Enabled bit
  1276                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1277                           ;	Low Voltage Programming Enable bit
  1278                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1279                           ;	In-Circuit Debugger Mode bit
  1280                           ;	DEBUG = 0x1, unprogrammed default
  1281  2007                     	org	8199
  1282  2007  28E4               	dw	10468
  1283                           
  1284                           ;Config register CONFIG2 @ 0x2008
  1285                           ;	Brown-out Reset Selection bit
  1286                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1287                           ;	Flash Program Memory Self Write Enable bits
  1288                           ;	WRT = OFF, Write protection off
  1289  2008                     	org	8200
  1290  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_direccional

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     426
                                              2 COMMON    11    11      0
                        _direccional
                 _direccional_apagar
                  _vehiculo_adelante
                     _vehiculo_atras
                   _vehiculo_derecha
                   _vehiculo_detener
                 _vehiculo_izquierda
 ---------------------------------------------------------------------------------
 (1) _vehiculo_izquierda                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vehiculo_detener                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vehiculo_derecha                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vehiculo_atras                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vehiculo_adelante                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _direccional_apagar                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _direccional                                          2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _direccional
   _direccional_apagar
   _vehiculo_adelante
   _vehiculo_atras
   _vehiculo_derecha
   _vehiculo_detener
   _vehiculo_izquierda

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 27 05:37:59 2022

          ??_vehiculo_atras 0070                          l22 06FB                          l31 0702  
                        l25 0709                          l34 0715                          l50 07E1  
                        l19 06ED                          l36 0719                          l28 06F4  
                        l46 07A7                          l39 06E6                          l48 07CA  
                        u90 0710                          u91 070F                main@Encoder1 0079  
              main@Encoder2 0077                         l730 0710                         l650 06E7  
                       l652 06F5                         l740 0728                         l732 071A  
                       l654 0703                         l750 075A                         l742 072A  
                       l734 0720                         l728 070A                         l664 06E2  
                       l656 06EE                         l760 0790                         l752 0767  
                       l744 072D                         l736 0723                         l658 06FC  
                       l770 07B4                         l762 0796                         l754 0779  
                       l746 0732                         l738 0726                         l780 07CE  
                       l772 07B5                         l764 079C                         l756 0786  
                       l748 0744                         l790 07F4                         l782 07D7  
                       l774 07B9                         l766 07A1                         l758 078B  
                       l792 07F6                         l784 07D8                         l776 07BF  
                       l768 07AB                         l786 07E2                         l778 07C4  
                       l788 07E7                         u100 079C                         u101 079B  
                       u110 07A1                         u111 07A0                         u120 07B4  
                       u121 07B3                         u130 07BF                         u131 07BE  
                       u140 07C4                         u141 07C3                         u150 07D7  
                       u151 07D6                         u207 077F                         u160 07E1  
                       u217 07ED                         u161 07E0                         u177 0738  
                       u187 0753                         u197 076D           ?_vehiculo_derecha 0070  
         ?_vehiculo_detener 0070           _vehiculo_adelante 06E7          ??_vehiculo_derecha 0070  
        ??_vehiculo_detener 0070          ?_vehiculo_adelante 0070         ??_vehiculo_adelante 0070  
                      _main 071A                        btemp 007E                        start 0000  
 __end_of_vehiculo_adelante 06EE                       ?_main 0070                       _ANSEL 0188  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     status 0003                       wtemp0 007E             __initialization 07FC  
              __end_of_main 07FC                      ??_main 0072          _vehiculo_izquierda 0703  
       ?_vehiculo_izquierda 0070        ??_vehiculo_izquierda 0070                      main@E1 007B  
                    main@E2 007C  __end_of_direccional_apagar 06E7     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                  __pmaintext 071A                     __ptext1 0703  
                   __ptext2 06FC                     __ptext3 06F5                     __ptext4 06EE  
                   __ptext5 06E7                     __ptext6 06E2                     __ptext7 070A  
      end_of_initialization 07FC                   _PORTAbits 0005                   _PORTBbits 0006  
                 _PORTCbits 0007                  main@E1_old 0075                  main@E2_old 0076  
             ??_direccional 0072            _vehiculo_derecha 06F5            _vehiculo_detener 06FC  
        _direccional_apagar 06E2         ?_direccional_apagar 0070         start_initialization 07FC  
      ??_direccional_apagar 0070         __end_of_direccional 071A                   ___latbits 0002  
            _vehiculo_atras 06EE      __end_of_vehiculo_atras 06F5                 _direccional 070A  
  __end_of_vehiculo_derecha 06FC    __end_of_vehiculo_detener 0703             ?_vehiculo_atras 0070  
__end_of_vehiculo_izquierda 070A               direccional@op 0070                ?_direccional 0070  
