

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 27 04:13:51 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F886 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  008F                     	;# 
   167  0090                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  0105                     	;# 
   186  0107                     	;# 
   187  0108                     	;# 
   188  0109                     	;# 
   189  010C                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  0185                     	;# 
   195  0187                     	;# 
   196  0188                     	;# 
   197  0189                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001D                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  0081                     	;# 
   235  0085                     	;# 
   236  0086                     	;# 
   237  0087                     	;# 
   238  0089                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  008E                     	;# 
   242  008F                     	;# 
   243  0090                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0093                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  0105                     	;# 
   262  0107                     	;# 
   263  0108                     	;# 
   264  0109                     	;# 
   265  010C                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010E                     	;# 
   269  010F                     	;# 
   270  0185                     	;# 
   271  0187                     	;# 
   272  0188                     	;# 
   273  0189                     	;# 
   274  018C                     	;# 
   275  018D                     	;# 
   276  0007                     _PORTCbits	set	7
   277  0006                     _PORTBbits	set	6
   278  0087                     _TRISC	set	135
   279  0086                     _TRISB	set	134
   280  0085                     _TRISA	set	133
   281                           
   282                           	psect	cinit
   283  07FC                     start_initialization:	
   284                           ; #config settings
   285                           
   286  07FC                     __initialization:
   287  07FC                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  07FC                     __end_of__initialization:
   291  07FC  0183               	clrf	3
   292  07FD  120A  118A  2F99   	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	cstackCOMMON
   295  0070                     __pcstackCOMMON:
   296  0070                     ?_vehiculo_adelante:
   297  0070                     ??_vehiculo_adelante:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_vehiculo_detener:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ??_vehiculo_detener:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ??_main:	
   310                           ; 1 bytes @ 0x0
   311                           
   312                           
   313                           ; 1 bytes @ 0x0
   314  0070                     	ds	3
   315  0073                     main@Encoder2:
   316                           
   317                           ; 2 bytes @ 0x3
   318  0073                     	ds	2
   319  0075                     main@Encoder1:
   320                           
   321                           ; 2 bytes @ 0x5
   322  0075                     	ds	2
   323  0077                     main@temp_old:
   324                           
   325                           ; 1 bytes @ 0x7
   326  0077                     	ds	1
   327  0078                     main@temp:
   328                           
   329                           ; 1 bytes @ 0x8
   330  0078                     	ds	1
   331                           
   332                           	psect	maintext
   333  0799                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 32 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;  Encoder1        2    5[COMMON] unsigned int 
   344 ;;  Encoder2        2    3[COMMON] unsigned int 
   345 ;;  temp            1    8[COMMON] _Bool 
   346 ;;  temp_old        1    7[COMMON] _Bool 
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2, status,0, pclath, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : B00/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         6       0       0       0       0
   358 ;;      Temps:          3       0       0       0       0
   359 ;;      Totals:         9       0       0       0       0
   360 ;;Total ram usage:        9 bytes
   361 ;; Hardware stack levels required when called: 1
   362 ;; This function calls:
   363 ;;		_vehiculo_adelante
   364 ;;		_vehiculo_detener
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370  0799                     _main:	
   371                           ;psect for function _main
   372                           
   373  0799                     l643:	
   374                           ;incstack = 0
   375                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   376                           
   377                           
   378                           ;main.c: 34:     TRISA = 0b00000100;
   379  0799  3004               	movlw	4
   380  079A  1683               	bsf	3,5	;RP0=1, select bank1
   381  079B  1303               	bcf	3,6	;RP1=0, select bank1
   382  079C  0085               	movwf	5	;volatile
   383                           
   384                           ;main.c: 35:     TRISB = 0b00000011;
   385  079D  3003               	movlw	3
   386  079E  0086               	movwf	6	;volatile
   387  079F                     l645:
   388                           
   389                           ;main.c: 36:     TRISC = 0x00;
   390  079F  0187               	clrf	7	;volatile
   391  07A0                     l647:
   392                           
   393                           ;main.c: 38:     uint16_t Encoder1 = 0;
   394  07A0  01F5               	clrf	main@Encoder1
   395  07A1  01F6               	clrf	main@Encoder1+1
   396  07A2                     l649:
   397                           
   398                           ;main.c: 39:     uint16_t Encoder2 = 0;
   399  07A2  01F3               	clrf	main@Encoder2
   400  07A3  01F4               	clrf	main@Encoder2+1
   401  07A4                     l651:
   402                           
   403                           ;main.c: 45:         vehiculo_adelante();
   404  07A4  120A  118A  278B  120A  118A  	fcall	_vehiculo_adelante
   405  07A9                     l653:
   406                           
   407                           ;main.c: 48:         temp = PORTBbits.RB1;
   408  07A9  3000               	movlw	0
   409  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   410  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   411  07AC  1886               	btfsc	6,1	;volatile
   412  07AD  3001               	movlw	1
   413  07AE  00F8               	movwf	main@temp
   414  07AF                     l655:
   415                           
   416                           ;main.c: 49:         if ((temp_old != temp) & (temp == 1)){
   417  07AF  0877               	movf	main@temp_old,w
   418  07B0  0678               	xorwf	main@temp,w
   419  07B1  1903               	skipnz
   420  07B2  2FB4               	goto	u11
   421  07B3  2FB5               	goto	u10
   422  07B4                     u11:
   423  07B4  2FC0               	goto	l34
   424  07B5                     u10:
   425  07B5                     l657:
   426  07B5  0378               	decf	main@temp,w
   427  07B6  1D03               	btfss	3,2
   428  07B7  2FB9               	goto	u21
   429  07B8  2FBA               	goto	u20
   430  07B9                     u21:
   431  07B9  2FC0               	goto	l34
   432  07BA                     u20:
   433  07BA                     l659:
   434                           
   435                           ;main.c: 50:             Encoder1++;}
   436  07BA  3001               	movlw	1
   437  07BB  07F5               	addwf	main@Encoder1,f
   438  07BC  1803               	skipnc
   439  07BD  0AF6               	incf	main@Encoder1+1,f
   440  07BE  3000               	movlw	0
   441  07BF  07F6               	addwf	main@Encoder1+1,f
   442  07C0                     l34:
   443                           
   444                           ;main.c: 51:         temp_old = temp;
   445  07C0  0878               	movf	main@temp,w
   446  07C1  00F0               	movwf	??_main
   447  07C2  0870               	movf	??_main,w
   448  07C3  00F7               	movwf	main@temp_old
   449  07C4                     l661:
   450                           
   451                           ;main.c: 53:         temp = PORTBbits.RB0;
   452  07C4  3000               	movlw	0
   453  07C5  1806               	btfsc	6,0	;volatile
   454  07C6  3001               	movlw	1
   455  07C7  00F8               	movwf	main@temp
   456  07C8                     l663:
   457                           
   458                           ;main.c: 54:         if ((temp_old != temp) & (temp == 1)){
   459  07C8  0877               	movf	main@temp_old,w
   460  07C9  0678               	xorwf	main@temp,w
   461  07CA  1903               	skipnz
   462  07CB  2FCD               	goto	u31
   463  07CC  2FCE               	goto	u30
   464  07CD                     u31:
   465  07CD  2FD9               	goto	l35
   466  07CE                     u30:
   467  07CE                     l665:
   468  07CE  0378               	decf	main@temp,w
   469  07CF  1D03               	btfss	3,2
   470  07D0  2FD2               	goto	u41
   471  07D1  2FD3               	goto	u40
   472  07D2                     u41:
   473  07D2  2FD9               	goto	l35
   474  07D3                     u40:
   475  07D3                     l667:
   476                           
   477                           ;main.c: 55:             Encoder2++;}
   478  07D3  3001               	movlw	1
   479  07D4  07F3               	addwf	main@Encoder2,f
   480  07D5  1803               	skipnc
   481  07D6  0AF4               	incf	main@Encoder2+1,f
   482  07D7  3000               	movlw	0
   483  07D8  07F4               	addwf	main@Encoder2+1,f
   484  07D9                     l35:
   485                           
   486                           ;main.c: 56:         temp_old = temp;
   487  07D9  0878               	movf	main@temp,w
   488  07DA  00F0               	movwf	??_main
   489  07DB  0870               	movf	??_main,w
   490  07DC  00F7               	movwf	main@temp_old
   491  07DD                     l669:
   492                           
   493                           ;main.c: 57:     }while(Encoder1 != 2100);
   494  07DD  3034               	movlw	52
   495  07DE  0675               	xorwf	main@Encoder1,w
   496  07DF  3008               	movlw	8
   497  07E0  1903               	skipnz
   498  07E1  0676               	xorwf	main@Encoder1+1,w
   499  07E2  1D03               	btfss	3,2
   500  07E3  2FE5               	goto	u51
   501  07E4  2FE6               	goto	u50
   502  07E5                     u51:
   503  07E5  2FA9               	goto	l653
   504  07E6                     u50:
   505  07E6                     l671:
   506                           
   507                           ;main.c: 60:     vehiculo_detener();
   508  07E6  120A  118A  2792  120A  118A  	fcall	_vehiculo_detener
   509  07EB                     l673:
   510                           
   511                           ;main.c: 61:     _delay((unsigned long)((500)*(4000000/4000.0)));
   512  07EB  3003               	movlw	3
   513  07EC  00F2               	movwf	??_main+2
   514  07ED  308A               	movlw	138
   515  07EE  00F1               	movwf	??_main+1
   516  07EF  3055               	movlw	85
   517  07F0  00F0               	movwf	??_main
   518  07F1                     u67:
   519  07F1  0BF0               	decfsz	??_main,f
   520  07F2  2FF1               	goto	u67
   521  07F3  0BF1               	decfsz	??_main+1,f
   522  07F4  2FF1               	goto	u67
   523  07F5  0BF2               	decfsz	??_main+2,f
   524  07F6  2FF1               	goto	u67
   525  07F7  2FF8               	nop2
   526  07F8  2FA0               	goto	l647
   527  07F9  120A  118A  2800   	ljmp	start
   528  07FC                     __end_of_main:
   529                           
   530                           	psect	text1
   531  0792                     __ptext1:	
   532 ;; *************** function _vehiculo_detener *****************
   533 ;; Defined at:
   534 ;;		line 43 in file "./prototipos.h"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		None
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561  0792                     _vehiculo_detener:	
   562                           ;psect for function _vehiculo_detener
   563                           
   564  0792                     l635:	
   565                           ;incstack = 0
   566                           ; Regs used in _vehiculo_detener: []
   567                           
   568                           
   569                           ;./prototipos.h: 44:     PORTBbits.RB7 = 0;
   570  0792  1283               	bcf	3,5	;RP0=0, select bank0
   571  0793  1303               	bcf	3,6	;RP1=0, select bank0
   572  0794  1386               	bcf	6,7	;volatile
   573                           
   574                           ;./prototipos.h: 45:     PORTCbits.RC1 = 0;
   575  0795  1087               	bcf	7,1	;volatile
   576                           
   577                           ;./prototipos.h: 47:     PORTBbits.RB6 = 0;
   578  0796  1306               	bcf	6,6	;volatile
   579                           
   580                           ;./prototipos.h: 48:     PORTCbits.RC2 = 0;
   581  0797  1107               	bcf	7,2	;volatile
   582  0798                     l27:
   583  0798  0008               	return
   584  0799                     __end_of_vehiculo_detener:
   585                           
   586                           	psect	text2
   587  078B                     __ptext2:	
   588 ;; *************** function _vehiculo_adelante *****************
   589 ;; Defined at:
   590 ;;		line 11 in file "./prototipos.h"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		None
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0
   607 ;;      Totals:         0       0       0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617  078B                     _vehiculo_adelante:	
   618                           ;psect for function _vehiculo_adelante
   619                           
   620  078B                     l633:	
   621                           ;incstack = 0
   622                           ; Regs used in _vehiculo_adelante: []
   623                           
   624                           
   625                           ;./prototipos.h: 12:     PORTBbits.RB7 = 1;
   626  078B  1283               	bcf	3,5	;RP0=0, select bank0
   627  078C  1303               	bcf	3,6	;RP1=0, select bank0
   628  078D  1786               	bsf	6,7	;volatile
   629                           
   630                           ;./prototipos.h: 13:     PORTCbits.RC1 = 0;
   631  078E  1087               	bcf	7,1	;volatile
   632                           
   633                           ;./prototipos.h: 15:     PORTBbits.RB6 = 1;
   634  078F  1706               	bsf	6,6	;volatile
   635                           
   636                           ;./prototipos.h: 16:     PORTCbits.RC2 = 0;
   637  0790  1107               	bcf	7,2	;volatile
   638  0791                     l15:
   639  0791  0008               	return
   640  0792                     __end_of_vehiculo_adelante:
   641  007E                     btemp	set	126	;btemp
   642  007E                     wtemp0	set	126
   643                           
   644                           	psect	idloc
   645                           
   646                           ;Config register IDLOC0 @ 0x2000
   647                           ;	unspecified, using default values
   648  2000                     	org	8192
   649  2000  3FFF               	dw	16383
   650                           
   651                           ;Config register IDLOC1 @ 0x2001
   652                           ;	unspecified, using default values
   653  2001                     	org	8193
   654  2001  3FFF               	dw	16383
   655                           
   656                           ;Config register IDLOC2 @ 0x2002
   657                           ;	unspecified, using default values
   658  2002                     	org	8194
   659  2002  3FFF               	dw	16383
   660                           
   661                           ;Config register IDLOC3 @ 0x2003
   662                           ;	unspecified, using default values
   663  2003                     	org	8195
   664  2003  3FFF               	dw	16383
   665                           
   666                           	psect	config
   667                           
   668                           ;Config register CONFIG1 @ 0x2007
   669                           ;	Oscillator Selection bits
   670                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   671                           ;	Watchdog Timer Enable bit
   672                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   673                           ;	Power-up Timer Enable bit
   674                           ;	PWRTE = ON, PWRT enabled
   675                           ;	RE3/MCLR pin function select bit
   676                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   677                           ;	Code Protection bit
   678                           ;	CP = OFF, Program memory code protection is disabled
   679                           ;	Data Code Protection bit
   680                           ;	CPD = OFF, Data memory code protection is disabled
   681                           ;	Brown Out Reset Selection bits
   682                           ;	BOREN = OFF, BOR disabled
   683                           ;	Internal External Switchover bit
   684                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   685                           ;	Fail-Safe Clock Monitor Enabled bit
   686                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   687                           ;	Low Voltage Programming Enable bit
   688                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   689                           ;	In-Circuit Debugger Mode bit
   690                           ;	DEBUG = 0x1, unprogrammed default
   691  2007                     	org	8199
   692  2007  28E4               	dw	10468
   693                           
   694                           ;Config register CONFIG2 @ 0x2008
   695                           ;	Brown-out Reset Selection bit
   696                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   697                           ;	Flash Program Memory Self Write Enable bits
   698                           ;	WRT = OFF, Write protection off
   699  2008                     	org	8200
   700  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     135
                                              0 COMMON     9     9      0
                  _vehiculo_adelante
                   _vehiculo_detener
 ---------------------------------------------------------------------------------
 (1) _vehiculo_detener                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vehiculo_adelante                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _vehiculo_adelante
   _vehiculo_detener

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 27 04:13:51 2022

                       l15 0791                         l34 07C0                         l27 0798  
                       l35 07D9                         u10 07B5                         u11 07B4  
                       u20 07BA                         u21 07B9                         u30 07CE  
                       u31 07CD                         u40 07D3                         u41 07D2  
                       u50 07E6                         u51 07E5                         u67 07F1  
             main@Encoder1 0075               main@Encoder2 0073                        l633 078B  
                      l635 0792                        l651 07A4                        l643 0799  
                      l661 07C4                        l653 07A9                        l645 079F  
                      l671 07E6                        l663 07C8                        l655 07AF  
                      l647 07A0                        l673 07EB                        l665 07CE  
                      l657 07B5                        l649 07A2                        l667 07D3  
                      l659 07BA                        l669 07DD          ?_vehiculo_detener 0070  
        _vehiculo_adelante 078B         ??_vehiculo_detener 0070         ?_vehiculo_adelante 0070  
      ??_vehiculo_adelante 0070                       _main 0799                       btemp 007E  
                     start 0000  __end_of_vehiculo_adelante 0792                      ?_main 0070  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
             main@temp_old 0077                      status 0003                      wtemp0 007E  
          __initialization 07FC               __end_of_main 07FC                     ??_main 0070  
  __end_of__initialization 07FC             __pcstackCOMMON 0070                 __pmaintext 0799  
                  __ptext1 0792                    __ptext2 078B       end_of_initialization 07FC  
                _PORTBbits 0006                  _PORTCbits 0007           _vehiculo_detener 0792  
      start_initialization 07FC                  ___latbits 0002   __end_of_vehiculo_detener 0799  
                 main@temp 0078  
