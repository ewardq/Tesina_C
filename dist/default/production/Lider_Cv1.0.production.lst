

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Apr 18 17:52:54 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F886 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  008F                     	;# 
   166  0090                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0093                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0097                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  0105                     	;# 
   185  0107                     	;# 
   186  0108                     	;# 
   187  0109                     	;# 
   188  010C                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  0185                     	;# 
   194  0187                     	;# 
   195  0188                     	;# 
   196  0189                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  000E                     	;# 
   214  000F                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0013                     	;# 
   219  0014                     	;# 
   220  0015                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001B                     	;# 
   229  001C                     	;# 
   230  001D                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  0081                     	;# 
   234  0085                     	;# 
   235  0086                     	;# 
   236  0087                     	;# 
   237  0089                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  008E                     	;# 
   241  008F                     	;# 
   242  0090                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0093                     	;# 
   247  0093                     	;# 
   248  0094                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  0105                     	;# 
   261  0107                     	;# 
   262  0108                     	;# 
   263  0109                     	;# 
   264  010C                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  010F                     	;# 
   269  0185                     	;# 
   270  0187                     	;# 
   271  0188                     	;# 
   272  0189                     	;# 
   273  018C                     	;# 
   274  018D                     	;# 
   275  0000                     	;# 
   276  0001                     	;# 
   277  0002                     	;# 
   278  0003                     	;# 
   279  0004                     	;# 
   280  0005                     	;# 
   281  0006                     	;# 
   282  0007                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000D                     	;# 
   288  000E                     	;# 
   289  000E                     	;# 
   290  000F                     	;# 
   291  0010                     	;# 
   292  0011                     	;# 
   293  0012                     	;# 
   294  0013                     	;# 
   295  0014                     	;# 
   296  0015                     	;# 
   297  0015                     	;# 
   298  0016                     	;# 
   299  0017                     	;# 
   300  0018                     	;# 
   301  0019                     	;# 
   302  001A                     	;# 
   303  001B                     	;# 
   304  001B                     	;# 
   305  001C                     	;# 
   306  001D                     	;# 
   307  001E                     	;# 
   308  001F                     	;# 
   309  0081                     	;# 
   310  0085                     	;# 
   311  0086                     	;# 
   312  0087                     	;# 
   313  0089                     	;# 
   314  008C                     	;# 
   315  008D                     	;# 
   316  008E                     	;# 
   317  008F                     	;# 
   318  0090                     	;# 
   319  0091                     	;# 
   320  0092                     	;# 
   321  0093                     	;# 
   322  0093                     	;# 
   323  0093                     	;# 
   324  0094                     	;# 
   325  0095                     	;# 
   326  0096                     	;# 
   327  0097                     	;# 
   328  0098                     	;# 
   329  0099                     	;# 
   330  009A                     	;# 
   331  009B                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  009F                     	;# 
   336  0105                     	;# 
   337  0107                     	;# 
   338  0108                     	;# 
   339  0109                     	;# 
   340  010C                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  010F                     	;# 
   345  0185                     	;# 
   346  0187                     	;# 
   347  0188                     	;# 
   348  0189                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  0007                     _PORTC	set	7
   352  0007                     _PORTCbits	set	7
   353  0006                     _PORTB	set	6
   354  0086                     _TRISB	set	134
   355  0087                     _TRISC	set	135
   356                           
   357                           	psect	cinit
   358  07FC                     start_initialization:	
   359                           ; #config settings
   360                           
   361  07FC                     __initialization:
   362  07FC                     end_of_initialization:	
   363                           ;End of C runtime variable initialization code
   364                           
   365  07FC                     __end_of__initialization:
   366  07FC  0183               	clrf	3
   367  07FD  120A  118A  2F93   	ljmp	_main	;jump to C main() function
   368                           
   369                           	psect	cstackCOMMON
   370  0070                     __pcstackCOMMON:
   371  0070                     ?_motor:
   372  0070                     ??_motor:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_main:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ??_main:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  0070                     	ds	1
   384  0071                     main@A_old:
   385                           
   386                           ; 1 bytes @ 0x1
   387  0071                     	ds	1
   388  0072                     main@Encoder1:
   389                           
   390                           ; 2 bytes @ 0x2
   391  0072                     	ds	2
   392  0074                     main@LED:
   393                           
   394                           ; 1 bytes @ 0x4
   395  0074                     	ds	1
   396                           
   397                           	psect	maintext
   398  0793                     __pmaintext:	
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 28 in file "main.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;  Encoder1        2    2[COMMON] unsigned int 
   409 ;;  Encoder2        2    0        unsigned int 
   410 ;;  LED             1    4[COMMON] char 
   411 ;;  A_old           1    1[COMMON] _Bool 
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : B00/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         4       0       0       0       0
   423 ;;      Temps:          1       0       0       0       0
   424 ;;      Totals:         5       0       0       0       0
   425 ;;Total ram usage:        5 bytes
   426 ;; Hardware stack levels required when called: 1
   427 ;; This function calls:
   428 ;;		_motor
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434  0793                     _main:	
   435                           ;psect for function _main
   436                           
   437  0793                     l631:	
   438                           ;incstack = 0
   439                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   440                           
   441                           
   442                           ;main.c: 29:     int8_t LED = 1;
   443  0793  01F4               	clrf	main@LED
   444  0794  0AF4               	incf	main@LED,f
   445  0795                     l633:
   446                           
   447                           ;main.c: 30:     TRISC = 0b11110000;
   448  0795  30F0               	movlw	240
   449  0796  1683               	bsf	3,5	;RP0=1, select bank1
   450  0797  1303               	bcf	3,6	;RP1=0, select bank1
   451  0798  0087               	movwf	7	;volatile
   452  0799                     l635:
   453                           
   454                           ;main.c: 31:     TRISB = 0x00;
   455  0799  0186               	clrf	6	;volatile
   456  079A                     l637:
   457                           
   458                           ;main.c: 33:     uint16_t Encoder1 = 0;
   459  079A  01F2               	clrf	main@Encoder1
   460  079B  01F3               	clrf	main@Encoder1+1
   461  079C                     l639:
   462  079C                     l641:
   463                           
   464                           ;main.c: 37:     _Bool A_old;;main.c: 39:     PORTB = PORTB | LED;
   465  079C  1283               	bcf	3,5	;RP0=0, select bank0
   466  079D  1303               	bcf	3,6	;RP1=0, select bank0
   467  079E  0806               	movf	6,w	;volatile
   468  079F  3801               	iorlw	1
   469  07A0  0086               	movwf	6	;volatile
   470  07A1                     l643:
   471                           
   472                           ;main.c: 40:     motor();
   473  07A1  120A  118A  278A  120A  118A  	fcall	_motor
   474  07A6                     l645:
   475                           
   476                           ;main.c: 52:     if ((A_old != PORTCbits.RC4) & (PORTCbits.RC4 == 1)){
   477  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   478  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   479  07A8  1A07               	btfsc	7,4	;volatile
   480  07A9  2FAB               	goto	u11
   481  07AA  2FAD               	goto	u10
   482  07AB                     u11:
   483  07AB  3001               	movlw	1
   484  07AC  2FAE               	goto	u12
   485  07AD                     u10:
   486  07AD  3000               	movlw	0
   487  07AE                     u12:
   488  07AE  00F0               	movwf	??_main
   489  07AF  0E07               	swapf	7,w	;volatile
   490  07B0  3901               	andlw	1
   491  07B1  0671               	xorwf	main@A_old,w
   492  07B2  1D03               	skipz
   493  07B3  2FB5               	goto	u21
   494  07B4  2FB7               	goto	u20
   495  07B5                     u21:
   496  07B5  3001               	movlw	1
   497  07B6  2FB8               	goto	u22
   498  07B7                     u20:
   499  07B7  3000               	movlw	0
   500  07B8                     u22:
   501  07B8  0570               	andwf	??_main,w
   502  07B9  3800               	iorlw	0
   503  07BA  1903               	skipnz
   504  07BB  2FBD               	goto	u31
   505  07BC  2FBE               	goto	u30
   506  07BD                     u31:
   507  07BD  2FC4               	goto	l649
   508  07BE                     u30:
   509  07BE                     l647:
   510                           
   511                           ;main.c: 53:         Encoder1++;}
   512  07BE  3001               	movlw	1
   513  07BF  07F2               	addwf	main@Encoder1,f
   514  07C0  1803               	skipnc
   515  07C1  0AF3               	incf	main@Encoder1+1,f
   516  07C2  3000               	movlw	0
   517  07C3  07F3               	addwf	main@Encoder1+1,f
   518  07C4                     l649:
   519                           
   520                           ;main.c: 54:     A_old = PORTCbits.RC4;
   521  07C4  3000               	movlw	0
   522  07C5  1A07               	btfsc	7,4	;volatile
   523  07C6  3001               	movlw	1
   524  07C7  00F1               	movwf	main@A_old
   525  07C8                     l651:
   526                           
   527                           ;main.c: 56:     if(Encoder1 == 100)
   528  07C8  3064               	movlw	100
   529  07C9  0672               	xorwf	main@Encoder1,w
   530  07CA  0473               	iorwf	main@Encoder1+1,w
   531  07CB  1D03               	btfss	3,2
   532  07CC  2FCE               	goto	u41
   533  07CD  2FCF               	goto	u40
   534  07CE                     u41:
   535  07CE  2FD2               	goto	l18
   536  07CF                     u40:
   537  07CF                     l653:
   538                           
   539                           ;main.c: 57:          PORTB = PORTB & ~LED;
   540  07CF  0974               	comf	main@LED,w
   541  07D0  0506               	andwf	6,w	;volatile
   542  07D1  0086               	movwf	6	;volatile
   543  07D2                     l18:
   544                           
   545                           ;main.c: 59:     if(Encoder1 == 1050)
   546  07D2  301A               	movlw	26
   547  07D3  0672               	xorwf	main@Encoder1,w
   548  07D4  3004               	movlw	4
   549  07D5  1903               	skipnz
   550  07D6  0673               	xorwf	main@Encoder1+1,w
   551  07D7  1D03               	btfss	3,2
   552  07D8  2FDA               	goto	u51
   553  07D9  2FDB               	goto	u50
   554  07DA                     u51:
   555  07DA  2FDE               	goto	l19
   556  07DB                     u50:
   557  07DB                     l655:
   558                           
   559                           ;main.c: 60:         PORTB = PORTB | LED;
   560  07DB  0874               	movf	main@LED,w
   561  07DC  0406               	iorwf	6,w	;volatile
   562  07DD  0086               	movwf	6	;volatile
   563  07DE                     l19:
   564                           
   565                           ;main.c: 62:     if(Encoder1 == 1150)
   566  07DE  307E               	movlw	126
   567  07DF  0672               	xorwf	main@Encoder1,w
   568  07E0  3004               	movlw	4
   569  07E1  1903               	skipnz
   570  07E2  0673               	xorwf	main@Encoder1+1,w
   571  07E3  1D03               	btfss	3,2
   572  07E4  2FE6               	goto	u61
   573  07E5  2FE7               	goto	u60
   574  07E6                     u61:
   575  07E6  2FEA               	goto	l20
   576  07E7                     u60:
   577  07E7                     l657:
   578                           
   579                           ;main.c: 63:         PORTB = PORTB & ~LED;
   580  07E7  0974               	comf	main@LED,w
   581  07E8  0506               	andwf	6,w	;volatile
   582  07E9  0086               	movwf	6	;volatile
   583  07EA                     l20:
   584                           
   585                           ;main.c: 65:     }while(Encoder1 != 2100);
   586  07EA  3034               	movlw	52
   587  07EB  0672               	xorwf	main@Encoder1,w
   588  07EC  3008               	movlw	8
   589  07ED  1903               	skipnz
   590  07EE  0673               	xorwf	main@Encoder1+1,w
   591  07EF  1D03               	btfss	3,2
   592  07F0  2FF2               	goto	u71
   593  07F1  2FF3               	goto	u70
   594  07F2                     u71:
   595  07F2  2FA6               	goto	l645
   596  07F3                     u70:
   597  07F3                     l659:
   598                           
   599                           ;main.c: 66:     PORTB = PORTB | LED;
   600  07F3  0874               	movf	main@LED,w
   601  07F4  0406               	iorwf	6,w	;volatile
   602  07F5  0086               	movwf	6	;volatile
   603  07F6                     l661:
   604                           
   605                           ;main.c: 67:     Encoder1 = 0;
   606  07F6  01F2               	clrf	main@Encoder1
   607  07F7  01F3               	clrf	main@Encoder1+1
   608                           
   609                           ;main.c: 68:     }
   610  07F8  2FA6               	goto	l645
   611  07F9  120A  118A  2800   	ljmp	start
   612  07FC                     __end_of_main:
   613                           
   614                           	psect	text1
   615  078A                     __ptext1:	
   616 ;; *************** function _motor *****************
   617 ;; Defined at:
   618 ;;		line 4 in file "motor.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  mask            1    0        char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645  078A                     _motor:	
   646                           ;psect for function _motor
   647                           
   648  078A                     l623:	
   649                           ;incstack = 0
   650                           ; Regs used in _motor: [wreg+status,2+status,0]
   651                           
   652  078A                     l625:
   653                           
   654                           ;motor.c: 6:     PORTC = PORTC | mask;
   655  078A  1283               	bcf	3,5	;RP0=0, select bank0
   656  078B  1303               	bcf	3,6	;RP1=0, select bank0
   657  078C  0807               	movf	7,w	;volatile
   658  078D  3802               	iorlw	2
   659  078E  0087               	movwf	7	;volatile
   660  078F                     l627:
   661  078F                     l629:
   662                           
   663                           ;motor.c: 8:     PORTC = PORTC & ~mask;
   664  078F  0807               	movf	7,w	;volatile
   665  0790  39FE               	andlw	254
   666  0791  0087               	movwf	7	;volatile
   667  0792                     l28:
   668  0792  0008               	return
   669  0793                     __end_of_motor:
   670  007E                     btemp	set	126	;btemp
   671  007E                     wtemp0	set	126
   672                           
   673                           	psect	idloc
   674                           
   675                           ;Config register IDLOC0 @ 0x2000
   676                           ;	unspecified, using default values
   677  2000                     	org	8192
   678  2000  3FFF               	dw	16383
   679                           
   680                           ;Config register IDLOC1 @ 0x2001
   681                           ;	unspecified, using default values
   682  2001                     	org	8193
   683  2001  3FFF               	dw	16383
   684                           
   685                           ;Config register IDLOC2 @ 0x2002
   686                           ;	unspecified, using default values
   687  2002                     	org	8194
   688  2002  3FFF               	dw	16383
   689                           
   690                           ;Config register IDLOC3 @ 0x2003
   691                           ;	unspecified, using default values
   692  2003                     	org	8195
   693  2003  3FFF               	dw	16383
   694                           
   695                           	psect	config
   696                           
   697                           ;Config register CONFIG1 @ 0x2007
   698                           ;	Oscillator Selection bits
   699                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   700                           ;	Watchdog Timer Enable bit
   701                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   702                           ;	Power-up Timer Enable bit
   703                           ;	PWRTE = ON, PWRT enabled
   704                           ;	RE3/MCLR pin function select bit
   705                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   706                           ;	Code Protection bit
   707                           ;	CP = OFF, Program memory code protection is disabled
   708                           ;	Data Code Protection bit
   709                           ;	CPD = OFF, Data memory code protection is disabled
   710                           ;	Brown Out Reset Selection bits
   711                           ;	BOREN = OFF, BOR disabled
   712                           ;	Internal External Switchover bit
   713                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   714                           ;	Fail-Safe Clock Monitor Enabled bit
   715                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   716                           ;	Low Voltage Programming Enable bit
   717                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   718                           ;	In-Circuit Debugger Mode bit
   719                           ;	DEBUG = 0x1, unprogrammed default
   720  2007                     	org	8199
   721  2007  28E4               	dw	10468
   722                           
   723                           ;Config register CONFIG2 @ 0x2008
   724                           ;	Brown-out Reset Selection bit
   725                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   726                           ;	Flash Program Memory Self Write Enable bits
   727                           ;	WRT = OFF, Write protection off
   728  2008                     	org	8200
   729  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     180
                                              0 COMMON     5     5      0
                              _motor
 ---------------------------------------------------------------------------------
 (1) _motor                                                1     1      0      30
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _motor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Apr 18 17:52:54 2022

                     l20 07EA                       l18 07D2                       l19 07DE  
                     l28 0792                       u10 07AD                       u11 07AB  
                     u20 07B7                       u12 07AE                       u21 07B5  
                     u30 07BE                       u22 07B8                       u31 07BD  
                     u40 07CF                       u41 07CE                       u50 07DB  
                     u51 07DA                       u60 07E7                       u61 07E6  
                     u70 07F3                       u71 07F2             main@Encoder1 0072  
                    l623 078A                      l631 0793                      l625 078A  
                    l641 079C                      l633 0795                      l627 078F  
                    l651 07C8                      l643 07A1                      l635 0799  
                    l629 078F                      l661 07F6                      l653 07CF  
                    l645 07A6                      l637 079A                      l655 07DB  
                    l647 07BE                      l639 079C                      l657 07E7  
                    l649 07C4                      l659 07F3                     _main 0793  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087                    _motor 078A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070                   ?_motor 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_motor 0793                  ??_motor 0070  
             __pmaintext 0793                  __ptext1 078A                  main@LED 0074  
   end_of_initialization 07FC                _PORTCbits 0007      start_initialization 07FC  
              ___latbits 0002                main@A_old 0071  
