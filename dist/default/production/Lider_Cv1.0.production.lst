

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 02 20:50:14 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F886 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  008F                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0094                     	;# 
   335  0095                     	;# 
   336  0096                     	;# 
   337  0097                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009A                     	;# 
   341  009B                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009E                     	;# 
   345  009F                     	;# 
   346  0105                     	;# 
   347  0107                     	;# 
   348  0108                     	;# 
   349  0109                     	;# 
   350  010C                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  010F                     	;# 
   355  0185                     	;# 
   356  0187                     	;# 
   357  0188                     	;# 
   358  0189                     	;# 
   359  018C                     	;# 
   360  018D                     	;# 
   361                           
   362                           	psect	strings
   363  0003                     __pstrings:
   364  0003                     stringtab:
   365  0003                     __stringtab:
   366  0003                     stringcode:	
   367                           ;	String table - string pointers are 1 byte each
   368                           
   369  0003                     stringdir:
   370  0003  3000               	movlw	high stringdir
   371  0004  008A               	movwf	10
   372  0005  0804               	movf	4,w
   373  0006  0A84               	incf	4,f
   374  0007  0782               	addwf	2,f
   375  0008                     __stringbase:
   376  0008  3400               	retlw	0
   377  0009                     __end_of__stringtab:
   378  0009                     __180:
   379  0009  34B4               	retlw	180
   380  000A  3400               	retlw	0
   381  000B                     __end_of__180:
   382  000B                     __90:
   383  000B  345A               	retlw	90
   384  000C  3400               	retlw	0
   385  000D                     __end_of__90:
   386  000D                     __0:
   387  000D  3400               	retlw	0
   388  000E  3400               	retlw	0
   389  000F                     __end_of__0:
   390  0006                     _PORTBbits	set	6
   391  0010                     _T1CON	set	16
   392  0013                     _SSPBUF	set	19
   393  0014                     _SSPCON	set	20
   394  000E                     _TMR1L	set	14
   395  000F                     _TMR1H	set	15
   396  0007                     _PORTCbits	set	7
   397  0005                     _PORTAbits	set	5
   398  0080                     _TMR1ON	set	128
   399  002A                     _RA2	set	42
   400  002B                     _RA3	set	43
   401  0087                     _TRISC	set	135
   402  0086                     _TRISB	set	134
   403  0085                     _TRISA	set	133
   404  0094                     _SSPSTAT	set	148
   405  0093                     _SSPADD	set	147
   406  0091                     _SSPCON2	set	145
   407  009A                     _SPBRGH	set	154
   408  0099                     _SPBRG	set	153
   409  048C                     _ACKEN	set	1164
   410  048D                     _ACKDT	set	1165
   411  048B                     _RCEN	set	1163
   412  048A                     _PEN	set	1162
   413  0489                     _RSEN	set	1161
   414  0488                     _SEN	set	1160
   415  043C                     _TRISC4	set	1084
   416  043B                     _TRISC3	set	1083
   417  0188                     _ANSEL	set	392
   418                           
   419                           	psect	cinit
   420  07FC                     start_initialization:	
   421                           ; #config settings
   422                           
   423  07FC                     __initialization:
   424  07FC                     end_of_initialization:	
   425                           ;End of C runtime variable initialization code
   426                           
   427  07FC                     __end_of__initialization:
   428  07FC  0183               	clrf	3
   429  07FD  120A  118A  2F6D   	ljmp	_main	;jump to C main() function
   430                           
   431                           	psect	cstackCOMMON
   432  0070                     __pcstackCOMMON:
   433  0070                     ?_vehiculo:
   434  0070                     ?_direccional:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_probar_motores_mov:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_posicionar_servo:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_probar_servomotor:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_I2C_Master_Wait:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ??_I2C_Master_Wait:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_I2C_Master_Start:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_I2C_Master_Start:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_I2C_Master_Stop:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ??_I2C_Master_Stop:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_I2C_Master_Write:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_main:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     vehiculo@op:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     direccional@op:	
   474                           ; 2 bytes @ 0x0
   475                           
   476  0070                     posicionar_servo@degrees:	
   477                           ; 2 bytes @ 0x0
   478                           
   479  0070                     I2C_Master_Write@d:	
   480                           ; 2 bytes @ 0x0
   481                           
   482                           
   483                           ; 2 bytes @ 0x0
   484  0070                     	ds	2
   485  0072                     ??_vehiculo:
   486  0072                     ??_direccional:	
   487                           ; 1 bytes @ 0x2
   488                           
   489  0072                     ??_probar_motores_mov:	
   490                           ; 1 bytes @ 0x2
   491                           
   492  0072                     ??_posicionar_servo:	
   493                           ; 1 bytes @ 0x2
   494                           
   495  0072                     ??_I2C_Master_Write:	
   496                           ; 1 bytes @ 0x2
   497                           
   498                           
   499                           ; 1 bytes @ 0x2
   500  0072                     	ds	2
   501  0074                     posicionar_servo@i:
   502                           
   503                           ; 2 bytes @ 0x4
   504  0074                     	ds	2
   505  0076                     ??_probar_servomotor:
   506                           
   507                           ; 1 bytes @ 0x6
   508  0076                     	ds	3
   509  0079                     ??_main:
   510                           
   511                           ; 1 bytes @ 0x9
   512  0079                     	ds	3
   513                           
   514                           	psect	cstackBANK0
   515  0020                     __pcstackBANK0:
   516  0020                     main@x1:
   517                           
   518                           ; 2 bytes @ 0x0
   519  0020                     	ds	2
   520  0022                     main@x2:
   521                           
   522                           ; 2 bytes @ 0x2
   523  0022                     	ds	2
   524                           
   525                           	psect	maintext
   526  076D                     __pmaintext:	
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 33 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  x2              2    2[BANK0 ] unsigned int 
   537 ;;  x1              2    0[BANK0 ] unsigned int 
   538 ;;  Encoder2        2    0        unsigned int 
   539 ;;  Encoder1        2    0        unsigned int 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : B00/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   549 ;;      Params:         0       0       0       0       0
   550 ;;      Locals:         0       4       0       0       0
   551 ;;      Temps:          3       0       0       0       0
   552 ;;      Totals:         3       4       0       0       0
   553 ;;Total ram usage:        7 bytes
   554 ;; Hardware stack levels required when called: 2
   555 ;; This function calls:
   556 ;;		_I2C_Master_Start
   557 ;;		_I2C_Master_Stop
   558 ;;		_I2C_Master_Write
   559 ;;		_direccional
   560 ;;		_probar_motores_mov
   561 ;;		_probar_servomotor
   562 ;;		_vehiculo
   563 ;; This function is called by:
   564 ;;		Startup code after reset
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568  076D                     _main:	
   569                           ;psect for function _main
   570                           
   571  076D                     l1109:	
   572                           ;incstack = 0
   573                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   574                           
   575                           
   576                           ;main.c: 35:     TRISA = 0b00000100;
   577  076D  3004               	movlw	4
   578  076E  1683               	bsf	3,5	;RP0=1, select bank1
   579  076F  1303               	bcf	3,6	;RP1=0, select bank1
   580  0770  0085               	movwf	5	;volatile
   581                           
   582                           ;main.c: 36:     TRISB = 0b00000011;
   583  0771  3003               	movlw	3
   584  0772  0086               	movwf	6	;volatile
   585  0773                     l1111:
   586                           
   587                           ;main.c: 37:     ANSEL = 0x00;
   588  0773  1683               	bsf	3,5	;RP0=1, select bank3
   589  0774  1703               	bsf	3,6	;RP1=1, select bank3
   590  0775  0188               	clrf	8	;volatile
   591  0776                     l1113:
   592                           
   593                           ;main.c: 38:     TRISC = 0x00;
   594  0776  1683               	bsf	3,5	;RP0=1, select bank1
   595  0777  1303               	bcf	3,6	;RP1=0, select bank1
   596  0778  0187               	clrf	7	;volatile
   597                           
   598                           ;main.c: 40:     T1CON = 0x10;
   599  0779  3010               	movlw	16
   600  077A  1283               	bcf	3,5	;RP0=0, select bank0
   601  077B  1303               	bcf	3,6	;RP1=0, select bank0
   602  077C  0090               	movwf	16	;volatile
   603  077D                     l1115:
   604                           
   605                           ;main.c: 41:     PORTBbits.RB7 = 0;
   606  077D  1386               	bcf	6,7	;volatile
   607  077E                     l1117:
   608  077E                     l1119:
   609  077E                     l1121:
   610                           
   611                           ;main.c: 46:     direccional(0b00001);
   612  077E  3001               	movlw	1
   613  077F  00F0               	movwf	direccional@op
   614  0780  3000               	movlw	0
   615  0781  00F1               	movwf	direccional@op+1
   616  0782  120A  118A  25EC  120A  118A  	fcall	_direccional
   617  0787                     l1123:
   618                           
   619                           ;main.c: 47:     vehiculo(0b00001);
   620  0787  3001               	movlw	1
   621  0788  00F0               	movwf	vehiculo@op
   622  0789  3000               	movlw	0
   623  078A  00F1               	movwf	vehiculo@op+1
   624  078B  120A  118A  2605  120A  118A  	fcall	_vehiculo
   625  0790                     l1125:
   626                           
   627                           ;main.c: 49:     probar_motores_mov();
   628  0790  120A  118A  26F9  120A  118A  	fcall	_probar_motores_mov
   629  0795                     l1127:
   630                           
   631                           ;main.c: 50:     probar_servomotor();
   632  0795  120A  118A  2638  120A  118A  	fcall	_probar_servomotor
   633  079A                     l1129:
   634                           
   635                           ;main.c: 52:     unsigned x1 = 0xff;
   636  079A  30FF               	movlw	255
   637  079B  1283               	bcf	3,5	;RP0=0, select bank0
   638  079C  1303               	bcf	3,6	;RP1=0, select bank0
   639  079D  00A0               	movwf	main@x1
   640  079E  3000               	movlw	0
   641  079F  00A1               	movwf	main@x1+1
   642  07A0                     l1131:
   643                           
   644                           ;main.c: 53:     unsigned x2 = 0x00;
   645  07A0  01A2               	clrf	main@x2
   646  07A1  01A3               	clrf	main@x2+1
   647  07A2                     l1133:
   648                           
   649                           ;main.c: 56:         I2C_Master_Start();
   650  07A2  120A  118A  25C3  120A  118A  	fcall	_I2C_Master_Start
   651  07A7                     l1135:
   652                           
   653                           ;main.c: 57:         I2C_Master_Write(0x30);
   654  07A7  3030               	movlw	48
   655  07A8  00F0               	movwf	I2C_Master_Write@d
   656  07A9  3000               	movlw	0
   657  07AA  00F1               	movwf	I2C_Master_Write@d+1
   658  07AB  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Write
   659  07B0                     l1137:
   660                           
   661                           ;main.c: 58:         I2C_Master_Write(x1);
   662  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   663  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   664  07B2  0821               	movf	main@x1+1,w
   665  07B3  00F1               	movwf	I2C_Master_Write@d+1
   666  07B4  0820               	movf	main@x1,w
   667  07B5  00F0               	movwf	I2C_Master_Write@d
   668  07B6  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Write
   669  07BB                     l1139:
   670                           
   671                           ;main.c: 59:         I2C_Master_Stop();
   672  07BB  120A  118A  25CC  120A  118A  	fcall	_I2C_Master_Stop
   673  07C0                     l1141:
   674                           
   675                           ;main.c: 60:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   676  07C0  3006               	movlw	6
   677  07C1  00FB               	movwf	??_main+2
   678  07C2  3013               	movlw	19
   679  07C3  00FA               	movwf	??_main+1
   680  07C4  30AD               	movlw	173
   681  07C5  00F9               	movwf	??_main
   682  07C6                     u307:
   683  07C6  0BF9               	decfsz	??_main,f
   684  07C7  2FC6               	goto	u307
   685  07C8  0BFA               	decfsz	??_main+1,f
   686  07C9  2FC6               	goto	u307
   687  07CA  0BFB               	decfsz	??_main+2,f
   688  07CB  2FC6               	goto	u307
   689  07CC  2FCD               	nop2
   690  07CD                     l1143:
   691                           
   692                           ;main.c: 62:         I2C_Master_Start();
   693  07CD  120A  118A  25C3  120A  118A  	fcall	_I2C_Master_Start
   694  07D2                     l1145:
   695                           
   696                           ;main.c: 63:         I2C_Master_Write(0x30);
   697  07D2  3030               	movlw	48
   698  07D3  00F0               	movwf	I2C_Master_Write@d
   699  07D4  3000               	movlw	0
   700  07D5  00F1               	movwf	I2C_Master_Write@d+1
   701  07D6  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Write
   702  07DB                     l1147:
   703                           
   704                           ;main.c: 64:         I2C_Master_Write(x2);
   705  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   706  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   707  07DD  0823               	movf	main@x2+1,w
   708  07DE  00F1               	movwf	I2C_Master_Write@d+1
   709  07DF  0822               	movf	main@x2,w
   710  07E0  00F0               	movwf	I2C_Master_Write@d
   711  07E1  120A  118A  25D5  120A  118A  	fcall	_I2C_Master_Write
   712  07E6                     l1149:
   713                           
   714                           ;main.c: 65:         I2C_Master_Stop();
   715  07E6  120A  118A  25CC  120A  118A  	fcall	_I2C_Master_Stop
   716  07EB                     l1151:
   717                           
   718                           ;main.c: 66:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   719  07EB  3006               	movlw	6
   720  07EC  00FB               	movwf	??_main+2
   721  07ED  3013               	movlw	19
   722  07EE  00FA               	movwf	??_main+1
   723  07EF  30AD               	movlw	173
   724  07F0  00F9               	movwf	??_main
   725  07F1                     u317:
   726  07F1  0BF9               	decfsz	??_main,f
   727  07F2  2FF1               	goto	u317
   728  07F3  0BFA               	decfsz	??_main+1,f
   729  07F4  2FF1               	goto	u317
   730  07F5  0BFB               	decfsz	??_main+2,f
   731  07F6  2FF1               	goto	u317
   732  07F7  2FF8               	nop2
   733  07F8  2FA2               	goto	l1133
   734  07F9  120A  118A  2800   	ljmp	start
   735  07FC                     __end_of_main:
   736                           
   737                           	psect	text1
   738  0638                     __ptext1:	
   739 ;; *************** function _probar_servomotor *****************
   740 ;; Defined at:
   741 ;;		line 129 in file "./prototipos.h"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0
   757 ;;      Temps:          3       0       0       0       0
   758 ;;      Totals:         3       0       0       0       0
   759 ;;Total ram usage:        3 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 1
   762 ;; This function calls:
   763 ;;		_posicionar_servo
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769  0638                     _probar_servomotor:	
   770                           ;psect for function _probar_servomotor
   771                           
   772  0638                     l1067:	
   773                           ;incstack = 0
   774                           ; Regs used in _probar_servomotor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   775                           
   776                           
   777                           ;./prototipos.h: 130:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   778  0638  3006               	movlw	6
   779  0639  00F8               	movwf	??_probar_servomotor+2
   780  063A  3013               	movlw	19
   781  063B  00F7               	movwf	??_probar_servomotor+1
   782  063C  30AD               	movlw	173
   783  063D  00F6               	movwf	??_probar_servomotor
   784  063E                     u327:
   785  063E  0BF6               	decfsz	??_probar_servomotor,f
   786  063F  2E3E               	goto	u327
   787  0640  0BF7               	decfsz	??_probar_servomotor+1,f
   788  0641  2E3E               	goto	u327
   789  0642  0BF8               	decfsz	??_probar_servomotor+2,f
   790  0643  2E3E               	goto	u327
   791  0644  2E45               	nop2
   792  0645                     l1069:
   793                           
   794                           ;./prototipos.h: 131:      posicionar_servo(_0);
   795  0645  3000               	movlw	0
   796  0646  00F0               	movwf	posicionar_servo@degrees
   797  0647  00F1               	movwf	posicionar_servo@degrees+1
   798  0648  120A  118A  2690  120A  118A  	fcall	_posicionar_servo
   799  064D                     l1071:
   800                           
   801                           ;./prototipos.h: 133:      _delay((unsigned long)((1000)*(4000000/4000.0)));
   802  064D  3006               	movlw	6
   803  064E  00F8               	movwf	??_probar_servomotor+2
   804  064F  3013               	movlw	19
   805  0650  00F7               	movwf	??_probar_servomotor+1
   806  0651  30AD               	movlw	173
   807  0652  00F6               	movwf	??_probar_servomotor
   808  0653                     u337:
   809  0653  0BF6               	decfsz	??_probar_servomotor,f
   810  0654  2E53               	goto	u337
   811  0655  0BF7               	decfsz	??_probar_servomotor+1,f
   812  0656  2E53               	goto	u337
   813  0657  0BF8               	decfsz	??_probar_servomotor+2,f
   814  0658  2E53               	goto	u337
   815  0659  2E5A               	nop2
   816                           
   817                           ;./prototipos.h: 134:      posicionar_servo(_90);
   818  065A  305A               	movlw	90
   819  065B  00F0               	movwf	posicionar_servo@degrees
   820  065C  3000               	movlw	0
   821  065D  00F1               	movwf	posicionar_servo@degrees+1
   822  065E  120A  118A  2690  120A  118A  	fcall	_posicionar_servo
   823  0663                     l1073:
   824                           
   825                           ;./prototipos.h: 136:      _delay((unsigned long)((1000)*(4000000/4000.0)));
   826  0663  3006               	movlw	6
   827  0664  00F8               	movwf	??_probar_servomotor+2
   828  0665  3013               	movlw	19
   829  0666  00F7               	movwf	??_probar_servomotor+1
   830  0667  30AD               	movlw	173
   831  0668  00F6               	movwf	??_probar_servomotor
   832  0669                     u347:
   833  0669  0BF6               	decfsz	??_probar_servomotor,f
   834  066A  2E69               	goto	u347
   835  066B  0BF7               	decfsz	??_probar_servomotor+1,f
   836  066C  2E69               	goto	u347
   837  066D  0BF8               	decfsz	??_probar_servomotor+2,f
   838  066E  2E69               	goto	u347
   839  066F  2E70               	nop2
   840  0670                     l1075:
   841                           
   842                           ;./prototipos.h: 137:      posicionar_servo(_180);
   843  0670  30B4               	movlw	180
   844  0671  00F0               	movwf	posicionar_servo@degrees
   845  0672  3000               	movlw	0
   846  0673  00F1               	movwf	posicionar_servo@degrees+1
   847  0674  120A  118A  2690  120A  118A  	fcall	_posicionar_servo
   848                           
   849                           ;./prototipos.h: 139:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   850  0679  3006               	movlw	6
   851  067A  00F8               	movwf	??_probar_servomotor+2
   852  067B  3013               	movlw	19
   853  067C  00F7               	movwf	??_probar_servomotor+1
   854  067D  30AD               	movlw	173
   855  067E  00F6               	movwf	??_probar_servomotor
   856  067F                     u357:
   857  067F  0BF6               	decfsz	??_probar_servomotor,f
   858  0680  2E7F               	goto	u357
   859  0681  0BF7               	decfsz	??_probar_servomotor+1,f
   860  0682  2E7F               	goto	u357
   861  0683  0BF8               	decfsz	??_probar_servomotor+2,f
   862  0684  2E7F               	goto	u357
   863  0685  2E86               	nop2
   864  0686                     l1077:
   865                           
   866                           ;./prototipos.h: 140:      posicionar_servo(_90);
   867  0686  305A               	movlw	90
   868  0687  00F0               	movwf	posicionar_servo@degrees
   869  0688  3000               	movlw	0
   870  0689  00F1               	movwf	posicionar_servo@degrees+1
   871  068A  120A  118A  2690  120A  118A  	fcall	_posicionar_servo
   872  068F                     l101:
   873  068F  0008               	return
   874  0690                     __end_of_probar_servomotor:
   875                           
   876                           	psect	text2
   877  0690                     __ptext2:	
   878 ;; *************** function _posicionar_servo *****************
   879 ;; Defined at:
   880 ;;		line 100 in file "./prototipos.h"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  degrees         2    0[COMMON] unsigned int 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  i               2    4[COMMON] int 
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         2       0       0       0       0
   895 ;;      Locals:         2       0       0       0       0
   896 ;;      Temps:          2       0       0       0       0
   897 ;;      Totals:         6       0       0       0       0
   898 ;;Total ram usage:        6 bytes
   899 ;; Hardware stack levels used: 1
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_probar_servomotor
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907  0690                     _posicionar_servo:	
   908                           ;psect for function _posicionar_servo
   909                           
   910  0690                     l1009:	
   911                           ;incstack = 0
   912                           ; Regs used in _posicionar_servo: [wreg-fsr0h+status,2+status,0+btemp+1]
   913                           
   914                           
   915                           ;./prototipos.h: 101:     for(int i = 0; i < 6; i++){
   916  0690  01F4               	clrf	posicionar_servo@i
   917  0691  01F5               	clrf	posicionar_servo@i+1
   918  0692                     l84:
   919                           
   920                           ;./prototipos.h: 102:      PORTCbits.RC0 = 1;
   921  0692  1283               	bcf	3,5	;RP0=0, select bank0
   922  0693  1303               	bcf	3,6	;RP1=0, select bank0
   923  0694  1407               	bsf	7,0	;volatile
   924  0695                     l1015:
   925                           
   926                           ;./prototipos.h: 103:         _delay((unsigned long)((1000)*(4000000/4000000.0)));
   927  0695  30C7               	movlw	199
   928  0696  00F2               	movwf	??_posicionar_servo
   929  0697                     u367:
   930  0697  2E98               	nop2
   931  0698  0BF2               	decfsz	??_posicionar_servo,f
   932  0699  2E97               	goto	u367
   933  069A  2E9B               	nop2
   934  069B  2E9C               	nop2
   935                           
   936                           ;./prototipos.h: 104:         switch(degrees){
   937  069C  2EAB               	goto	l1023
   938  069D                     l1017:
   939  069D  30A6               	movlw	166
   940  069E  00F2               	movwf	??_posicionar_servo
   941  069F                     u377:
   942  069F  0BF2               	decfsz	??_posicionar_servo,f
   943  06A0  2E9F               	goto	u377
   944  06A1  0000               	nop
   945                           
   946                           ;./prototipos.h: 108:              break;
   947  06A2  2EBB               	goto	l88
   948  06A3                     l1019:
   949  06A3  30C7               	movlw	199
   950  06A4  00F2               	movwf	??_posicionar_servo
   951  06A5                     u387:
   952  06A5  2EA6               	nop2
   953  06A6  0BF2               	decfsz	??_posicionar_servo,f
   954  06A7  2EA5               	goto	u387
   955  06A8  2EA9               	nop2
   956  06A9  2EAA               	nop2
   957                           
   958                           ;./prototipos.h: 110:              break;
   959  06AA  2EBB               	goto	l88
   960  06AB                     l1023:
   961                           
   962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   963                           ; Switch size 1, requested type "simple"
   964                           ; Number of cases is 1, Range of values is 0 to 0
   965                           ; switch strategies available:
   966                           ; Name         Instructions Cycles
   967                           ; simple_byte            4     3 (average)
   968                           ; direct_byte           11     8 (fixed)
   969                           ; jumptable            260     6 (fixed)
   970                           ;	Chosen strategy is simple_byte
   971  06AB  0871               	movf	posicionar_servo@degrees+1,w
   972  06AC  3A00               	xorlw	0	; case 0
   973  06AD  1903               	skipnz
   974  06AE  2EB0               	goto	l1193
   975  06AF  2E9D               	goto	l1017
   976  06B0                     l1193:
   977                           
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 3, Range of values is 0 to 180
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte           10     6 (average)
   983                           ; jumptable            260     6 (fixed)
   984                           ;	Chosen strategy is simple_byte
   985  06B0  0870               	movf	posicionar_servo@degrees,w
   986  06B1  3A00               	xorlw	0	; case 0
   987  06B2  1903               	skipnz
   988  06B3  2EBB               	goto	l88
   989  06B4  3A5A               	xorlw	90	; case 90
   990  06B5  1903               	skipnz
   991  06B6  2E9D               	goto	l1017
   992  06B7  3AEE               	xorlw	238	; case 180
   993  06B8  1903               	skipnz
   994  06B9  2EA3               	goto	l1019
   995  06BA  2E9D               	goto	l1017
   996  06BB                     l88:
   997                           
   998                           ;./prototipos.h: 113:      PORTCbits.RC0 = 0;
   999  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1000  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1001  06BD  1007               	bcf	7,0	;volatile
  1002                           
  1003                           ;./prototipos.h: 114:         switch(degrees){
  1004  06BE  2ECD               	goto	l1031
  1005  06BF                     l1025:
  1006  06BF  30C7               	movlw	199
  1007  06C0  00F2               	movwf	??_posicionar_servo
  1008  06C1                     u397:
  1009  06C1  2EC2               	nop2
  1010  06C2  0BF2               	decfsz	??_posicionar_servo,f
  1011  06C3  2EC1               	goto	u397
  1012  06C4  2EC5               	nop2
  1013  06C5  2EC6               	nop2
  1014                           
  1015                           ;./prototipos.h: 116:              break;
  1016  06C6  2EDD               	goto	l1033
  1017  06C7                     l1027:
  1018  06C7  30A6               	movlw	166
  1019  06C8  00F2               	movwf	??_posicionar_servo
  1020  06C9                     u407:
  1021  06C9  0BF2               	decfsz	??_posicionar_servo,f
  1022  06CA  2EC9               	goto	u407
  1023  06CB  0000               	nop
  1024                           
  1025                           ;./prototipos.h: 118:              break;
  1026  06CC  2EDD               	goto	l1033
  1027  06CD                     l1031:
  1028                           
  1029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1030                           ; Switch size 1, requested type "simple"
  1031                           ; Number of cases is 1, Range of values is 0 to 0
  1032                           ; switch strategies available:
  1033                           ; Name         Instructions Cycles
  1034                           ; simple_byte            4     3 (average)
  1035                           ; direct_byte           11     8 (fixed)
  1036                           ; jumptable            260     6 (fixed)
  1037                           ;	Chosen strategy is simple_byte
  1038  06CD  0871               	movf	posicionar_servo@degrees+1,w
  1039  06CE  3A00               	xorlw	0	; case 0
  1040  06CF  1903               	skipnz
  1041  06D0  2ED2               	goto	l1195
  1042  06D1  2EC7               	goto	l1027
  1043  06D2                     l1195:
  1044                           
  1045                           ; Switch size 1, requested type "simple"
  1046                           ; Number of cases is 3, Range of values is 0 to 180
  1047                           ; switch strategies available:
  1048                           ; Name         Instructions Cycles
  1049                           ; simple_byte           10     6 (average)
  1050                           ; jumptable            260     6 (fixed)
  1051                           ;	Chosen strategy is simple_byte
  1052  06D2  0870               	movf	posicionar_servo@degrees,w
  1053  06D3  3A00               	xorlw	0	; case 0
  1054  06D4  1903               	skipnz
  1055  06D5  2EBF               	goto	l1025
  1056  06D6  3A5A               	xorlw	90	; case 90
  1057  06D7  1903               	skipnz
  1058  06D8  2EC7               	goto	l1027
  1059  06D9  3AEE               	xorlw	238	; case 180
  1060  06DA  1903               	skipnz
  1061  06DB  2EDD               	goto	l1033
  1062  06DC  2EC7               	goto	l1027
  1063  06DD                     l1033:
  1064                           
  1065                           ;./prototipos.h: 123:         _delay((unsigned long)((18000)*(4000000/4000000.0)));
  1066  06DD  3018               	movlw	24
  1067  06DE  00F3               	movwf	??_posicionar_servo+1
  1068  06DF  305F               	movlw	95
  1069  06E0  00F2               	movwf	??_posicionar_servo
  1070  06E1                     u417:
  1071  06E1  0BF2               	decfsz	??_posicionar_servo,f
  1072  06E2  2EE1               	goto	u417
  1073  06E3  0BF3               	decfsz	??_posicionar_servo+1,f
  1074  06E4  2EE1               	goto	u417
  1075                           
  1076                           ;./prototipos.h: 124:      }
  1077  06E5  3001               	movlw	1
  1078  06E6  07F4               	addwf	posicionar_servo@i,f
  1079  06E7  1803               	skipnc
  1080  06E8  0AF5               	incf	posicionar_servo@i+1,f
  1081  06E9  3000               	movlw	0
  1082  06EA  07F5               	addwf	posicionar_servo@i+1,f
  1083  06EB                     l1035:
  1084  06EB  0875               	movf	posicionar_servo@i+1,w
  1085  06EC  3A80               	xorlw	128
  1086  06ED  00FF               	movwf	btemp+1
  1087  06EE  3080               	movlw	128
  1088  06EF  027F               	subwf	btemp+1,w
  1089  06F0  1D03               	skipz
  1090  06F1  2EF4               	goto	u255
  1091  06F2  3006               	movlw	6
  1092  06F3  0274               	subwf	posicionar_servo@i,w
  1093  06F4                     u255:
  1094  06F4  1C03               	skipc
  1095  06F5  2EF7               	goto	u251
  1096  06F6  2EF8               	goto	u250
  1097  06F7                     u251:
  1098  06F7  2E92               	goto	l84
  1099  06F8                     u250:
  1100  06F8                     l98:
  1101  06F8  0008               	return
  1102  06F9                     __end_of_posicionar_servo:
  1103                           
  1104                           	psect	text3
  1105  06F9                     __ptext3:	
  1106 ;; *************** function _probar_motores_mov *****************
  1107 ;; Defined at:
  1108 ;;		line 73 in file "./prototipos.h"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0, pclath, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0
  1124 ;;      Temps:          3       0       0       0       0
  1125 ;;      Totals:         3       0       0       0       0
  1126 ;;Total ram usage:        3 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 1
  1129 ;; This function calls:
  1130 ;;		_direccional
  1131 ;;		_vehiculo
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137  06F9                     _probar_motores_mov:	
  1138                           ;psect for function _probar_motores_mov
  1139                           
  1140  06F9                     l1049:	
  1141                           ;incstack = 0
  1142                           ; Regs used in _probar_motores_mov: [wreg+status,2+status,0+pclath+cstack]
  1143                           
  1144                           
  1145                           ;./prototipos.h: 75:     vehiculo(0b10000);
  1146  06F9  3010               	movlw	16
  1147  06FA  00F0               	movwf	vehiculo@op
  1148  06FB  3000               	movlw	0
  1149  06FC  00F1               	movwf	vehiculo@op+1
  1150  06FD  120A  118A  2605  120A  118A  	fcall	_vehiculo
  1151  0702                     l1051:
  1152                           
  1153                           ;./prototipos.h: 76:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1154  0702  3006               	movlw	6
  1155  0703  00F4               	movwf	??_probar_motores_mov+2
  1156  0704  3013               	movlw	19
  1157  0705  00F3               	movwf	??_probar_motores_mov+1
  1158  0706  30AD               	movlw	173
  1159  0707  00F2               	movwf	??_probar_motores_mov
  1160  0708                     u427:
  1161  0708  0BF2               	decfsz	??_probar_motores_mov,f
  1162  0709  2F08               	goto	u427
  1163  070A  0BF3               	decfsz	??_probar_motores_mov+1,f
  1164  070B  2F08               	goto	u427
  1165  070C  0BF4               	decfsz	??_probar_motores_mov+2,f
  1166  070D  2F08               	goto	u427
  1167  070E  2F0F               	nop2
  1168  070F                     l1053:
  1169                           
  1170                           ;./prototipos.h: 78:     vehiculo(0b00010);
  1171  070F  3002               	movlw	2
  1172  0710  00F0               	movwf	vehiculo@op
  1173  0711  3000               	movlw	0
  1174  0712  00F1               	movwf	vehiculo@op+1
  1175  0713  120A  118A  2605  120A  118A  	fcall	_vehiculo
  1176  0718                     l1055:
  1177                           
  1178                           ;./prototipos.h: 79:     direccional(0b00010);
  1179  0718  3002               	movlw	2
  1180  0719  00F0               	movwf	direccional@op
  1181  071A  3000               	movlw	0
  1182  071B  00F1               	movwf	direccional@op+1
  1183  071C  120A  118A  25EC  120A  118A  	fcall	_direccional
  1184  0721                     l1057:
  1185                           
  1186                           ;./prototipos.h: 80:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1187  0721  3006               	movlw	6
  1188  0722  00F4               	movwf	??_probar_motores_mov+2
  1189  0723  3013               	movlw	19
  1190  0724  00F3               	movwf	??_probar_motores_mov+1
  1191  0725  30AD               	movlw	173
  1192  0726  00F2               	movwf	??_probar_motores_mov
  1193  0727                     u437:
  1194  0727  0BF2               	decfsz	??_probar_motores_mov,f
  1195  0728  2F27               	goto	u437
  1196  0729  0BF3               	decfsz	??_probar_motores_mov+1,f
  1197  072A  2F27               	goto	u437
  1198  072B  0BF4               	decfsz	??_probar_motores_mov+2,f
  1199  072C  2F27               	goto	u437
  1200  072D  2F2E               	nop2
  1201                           
  1202                           ;./prototipos.h: 82:     vehiculo(0b00100);
  1203  072E  3004               	movlw	4
  1204  072F  00F0               	movwf	vehiculo@op
  1205  0730  3000               	movlw	0
  1206  0731  00F1               	movwf	vehiculo@op+1
  1207  0732  120A  118A  2605  120A  118A  	fcall	_vehiculo
  1208                           
  1209                           ;./prototipos.h: 83:     direccional(0b00100);
  1210  0737  3004               	movlw	4
  1211  0738  00F0               	movwf	direccional@op
  1212  0739  3000               	movlw	0
  1213  073A  00F1               	movwf	direccional@op+1
  1214  073B  120A  118A  25EC  120A  118A  	fcall	_direccional
  1215  0740                     l1059:
  1216                           
  1217                           ;./prototipos.h: 84:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1218  0740  3006               	movlw	6
  1219  0741  00F4               	movwf	??_probar_motores_mov+2
  1220  0742  3013               	movlw	19
  1221  0743  00F3               	movwf	??_probar_motores_mov+1
  1222  0744  30AD               	movlw	173
  1223  0745  00F2               	movwf	??_probar_motores_mov
  1224  0746                     u447:
  1225  0746  0BF2               	decfsz	??_probar_motores_mov,f
  1226  0747  2F46               	goto	u447
  1227  0748  0BF3               	decfsz	??_probar_motores_mov+1,f
  1228  0749  2F46               	goto	u447
  1229  074A  0BF4               	decfsz	??_probar_motores_mov+2,f
  1230  074B  2F46               	goto	u447
  1231  074C  2F4D               	nop2
  1232  074D                     l1061:
  1233                           
  1234                           ;./prototipos.h: 86:     vehiculo(0b00001);
  1235  074D  3001               	movlw	1
  1236  074E  00F0               	movwf	vehiculo@op
  1237  074F  3000               	movlw	0
  1238  0750  00F1               	movwf	vehiculo@op+1
  1239  0751  120A  118A  2605  120A  118A  	fcall	_vehiculo
  1240  0756                     l1063:
  1241                           
  1242                           ;./prototipos.h: 87:     direccional(0b00001);
  1243  0756  3001               	movlw	1
  1244  0757  00F0               	movwf	direccional@op
  1245  0758  3000               	movlw	0
  1246  0759  00F1               	movwf	direccional@op+1
  1247  075A  120A  118A  25EC  120A  118A  	fcall	_direccional
  1248  075F                     l1065:
  1249                           
  1250                           ;./prototipos.h: 88:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1251  075F  3006               	movlw	6
  1252  0760  00F4               	movwf	??_probar_motores_mov+2
  1253  0761  3013               	movlw	19
  1254  0762  00F3               	movwf	??_probar_motores_mov+1
  1255  0763  30AD               	movlw	173
  1256  0764  00F2               	movwf	??_probar_motores_mov
  1257  0765                     u457:
  1258  0765  0BF2               	decfsz	??_probar_motores_mov,f
  1259  0766  2F65               	goto	u457
  1260  0767  0BF3               	decfsz	??_probar_motores_mov+1,f
  1261  0768  2F65               	goto	u457
  1262  0769  0BF4               	decfsz	??_probar_motores_mov+2,f
  1263  076A  2F65               	goto	u457
  1264  076B  2F6C               	nop2
  1265  076C                     l75:
  1266  076C  0008               	return
  1267  076D                     __end_of_probar_motores_mov:
  1268                           
  1269                           	psect	text4
  1270  0605                     __ptext4:	
  1271 ;; *************** function _vehiculo *****************
  1272 ;; Defined at:
  1273 ;;		line 18 in file "./prototipos.h"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  op              2    0[COMMON] unsigned int 
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		None
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         2       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0
  1290 ;;      Totals:         2       0       0       0       0
  1291 ;;Total ram usage:        2 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_probar_motores_mov
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301  0605                     _vehiculo:	
  1302                           ;psect for function _vehiculo
  1303                           
  1304  0605                     l989:	
  1305                           ;incstack = 0
  1306                           ; Regs used in _vehiculo: []
  1307                           
  1308                           
  1309                           ;./prototipos.h: 19:     if (op & 0b00001){
  1310  0605  1C70               	btfss	vehiculo@op,0
  1311  0606  2E08               	goto	u171
  1312  0607  2E09               	goto	u170
  1313  0608                     u171:
  1314  0608  2E0F               	goto	l61
  1315  0609                     u170:
  1316  0609                     l991:
  1317                           
  1318                           ;./prototipos.h: 20:         PORTAbits.RA7 = 0;
  1319  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1320  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1321  060B  1385               	bcf	5,7	;volatile
  1322                           
  1323                           ;./prototipos.h: 21:         PORTCbits.RC1 = 0;
  1324  060C  1087               	bcf	7,1	;volatile
  1325                           
  1326                           ;./prototipos.h: 23:         PORTAbits.RA6 = 0;
  1327  060D  1305               	bcf	5,6	;volatile
  1328                           
  1329                           ;./prototipos.h: 24:         PORTCbits.RC2 = 0;
  1330  060E  1107               	bcf	7,2	;volatile
  1331  060F                     l61:	
  1332                           ;./prototipos.h: 25:     }
  1333                           
  1334                           
  1335                           ;./prototipos.h: 26:     if (op & 0b00010){
  1336  060F  1CF0               	btfss	vehiculo@op,1
  1337  0610  2E12               	goto	u181
  1338  0611  2E13               	goto	u180
  1339  0612                     u181:
  1340  0612  2E19               	goto	l62
  1341  0613                     u180:
  1342  0613                     l993:
  1343                           
  1344                           ;./prototipos.h: 27:         PORTAbits.RA7 = 1;
  1345  0613  1283               	bcf	3,5	;RP0=0, select bank0
  1346  0614  1303               	bcf	3,6	;RP1=0, select bank0
  1347  0615  1785               	bsf	5,7	;volatile
  1348                           
  1349                           ;./prototipos.h: 28:         PORTCbits.RC1 = 0;
  1350  0616  1087               	bcf	7,1	;volatile
  1351                           
  1352                           ;./prototipos.h: 30:         PORTAbits.RA6 = 0;
  1353  0617  1305               	bcf	5,6	;volatile
  1354                           
  1355                           ;./prototipos.h: 31:         PORTCbits.RC2 = 0;
  1356  0618  1107               	bcf	7,2	;volatile
  1357  0619                     l62:	
  1358                           ;./prototipos.h: 32:     }
  1359                           
  1360                           
  1361                           ;./prototipos.h: 33:     if (op & 0b00100){
  1362  0619  1D70               	btfss	vehiculo@op,2
  1363  061A  2E1C               	goto	u191
  1364  061B  2E1D               	goto	u190
  1365  061C                     u191:
  1366  061C  2E23               	goto	l63
  1367  061D                     u190:
  1368  061D                     l995:
  1369                           
  1370                           ;./prototipos.h: 34:         PORTAbits.RA7 = 0;
  1371  061D  1283               	bcf	3,5	;RP0=0, select bank0
  1372  061E  1303               	bcf	3,6	;RP1=0, select bank0
  1373  061F  1385               	bcf	5,7	;volatile
  1374                           
  1375                           ;./prototipos.h: 35:         PORTCbits.RC1 = 0;
  1376  0620  1087               	bcf	7,1	;volatile
  1377                           
  1378                           ;./prototipos.h: 37:         PORTAbits.RA6 = 1;
  1379  0621  1705               	bsf	5,6	;volatile
  1380                           
  1381                           ;./prototipos.h: 38:         PORTCbits.RC2 = 0;
  1382  0622  1107               	bcf	7,2	;volatile
  1383  0623                     l63:	
  1384                           ;./prototipos.h: 39:     }
  1385                           
  1386                           
  1387                           ;./prototipos.h: 40:     if (op & 0b01000){
  1388  0623  1DF0               	btfss	vehiculo@op,3
  1389  0624  2E26               	goto	u201
  1390  0625  2E27               	goto	u200
  1391  0626                     u201:
  1392  0626  2E2D               	goto	l64
  1393  0627                     u200:
  1394  0627                     l997:
  1395                           
  1396                           ;./prototipos.h: 41:         PORTAbits.RA7 = 1;
  1397  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0629  1785               	bsf	5,7	;volatile
  1400                           
  1401                           ;./prototipos.h: 42:         PORTCbits.RC1 = 0;
  1402  062A  1087               	bcf	7,1	;volatile
  1403                           
  1404                           ;./prototipos.h: 44:         PORTAbits.RA6 = 1;
  1405  062B  1705               	bsf	5,6	;volatile
  1406                           
  1407                           ;./prototipos.h: 45:         PORTCbits.RC2 = 0;
  1408  062C  1107               	bcf	7,2	;volatile
  1409  062D                     l64:	
  1410                           ;./prototipos.h: 46:     }
  1411                           
  1412                           
  1413                           ;./prototipos.h: 47:     if (op & 0b10000){
  1414  062D  1E70               	btfss	vehiculo@op,4
  1415  062E  2E30               	goto	u211
  1416  062F  2E31               	goto	u210
  1417  0630                     u211:
  1418  0630  2E37               	goto	l66
  1419  0631                     u210:
  1420  0631                     l999:
  1421                           
  1422                           ;./prototipos.h: 48:         PORTAbits.RA7 = 0;
  1423  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0633  1385               	bcf	5,7	;volatile
  1426                           
  1427                           ;./prototipos.h: 49:         PORTCbits.RC1 = 1;
  1428  0634  1487               	bsf	7,1	;volatile
  1429                           
  1430                           ;./prototipos.h: 51:         PORTAbits.RA6 = 0;
  1431  0635  1305               	bcf	5,6	;volatile
  1432                           
  1433                           ;./prototipos.h: 52:         PORTCbits.RC2 = 1;
  1434  0636  1507               	bsf	7,2	;volatile
  1435  0637                     l66:
  1436  0637  0008               	return
  1437  0638                     __end_of_vehiculo:
  1438                           
  1439                           	psect	text5
  1440  05EC                     __ptext5:	
  1441 ;; *************** function _direccional *****************
  1442 ;; Defined at:
  1443 ;;		line 56 in file "./prototipos.h"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  op              2    0[COMMON] unsigned int 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		None
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         2       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0
  1460 ;;      Totals:         2       0       0       0       0
  1461 ;;Total ram usage:        2 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_probar_motores_mov
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471  05EC                     _direccional:	
  1472                           ;psect for function _direccional
  1473                           
  1474  05EC                     l1001:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _direccional: []
  1477                           
  1478                           
  1479                           ;./prototipos.h: 57:     if (op & 0b00010){
  1480  05EC  1CF0               	btfss	direccional@op,1
  1481  05ED  2DEF               	goto	u221
  1482  05EE  2DF0               	goto	u220
  1483  05EF                     u221:
  1484  05EF  2DF4               	goto	l69
  1485  05F0                     u220:
  1486  05F0                     l1003:
  1487                           
  1488                           ;./prototipos.h: 58:         PORTAbits.RA0 = 1;
  1489  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1490  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1491  05F2  1405               	bsf	5,0	;volatile
  1492                           
  1493                           ;./prototipos.h: 59:         PORTAbits.RA1 = 0;
  1494  05F3  1085               	bcf	5,1	;volatile
  1495  05F4                     l69:	
  1496                           ;./prototipos.h: 60:     }
  1497                           
  1498                           
  1499                           ;./prototipos.h: 61:     if (op & 0b00100){
  1500  05F4  1D70               	btfss	direccional@op,2
  1501  05F5  2DF7               	goto	u231
  1502  05F6  2DF8               	goto	u230
  1503  05F7                     u231:
  1504  05F7  2DFC               	goto	l70
  1505  05F8                     u230:
  1506  05F8                     l1005:
  1507                           
  1508                           ;./prototipos.h: 62:         PORTAbits.RA0 = 0;
  1509  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1510  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1511  05FA  1005               	bcf	5,0	;volatile
  1512                           
  1513                           ;./prototipos.h: 63:         PORTAbits.RA1 = 1;
  1514  05FB  1485               	bsf	5,1	;volatile
  1515  05FC                     l70:	
  1516                           ;./prototipos.h: 64:     }
  1517                           
  1518                           
  1519                           ;./prototipos.h: 65:     if (op & 0b00001){
  1520  05FC  1C70               	btfss	direccional@op,0
  1521  05FD  2DFF               	goto	u241
  1522  05FE  2E00               	goto	u240
  1523  05FF                     u241:
  1524  05FF  2E04               	goto	l72
  1525  0600                     u240:
  1526  0600                     l1007:
  1527                           
  1528                           ;./prototipos.h: 66:         PORTAbits.RA0 = 0;
  1529  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0602  1005               	bcf	5,0	;volatile
  1532                           
  1533                           ;./prototipos.h: 67:         PORTAbits.RA1 = 0;
  1534  0603  1085               	bcf	5,1	;volatile
  1535  0604                     l72:
  1536  0604  0008               	return
  1537  0605                     __end_of_direccional:
  1538                           
  1539                           	psect	text6
  1540  05D5                     __ptext6:	
  1541 ;; *************** function _I2C_Master_Write *****************
  1542 ;; Defined at:
  1543 ;;		line 261 in file "./prototipos.h"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  d               2    0[COMMON] unsigned int 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0, pclath, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         2       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0
  1560 ;;      Totals:         2       0       0       0       0
  1561 ;;Total ram usage:        2 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 1
  1564 ;; This function calls:
  1565 ;;		_I2C_Master_Wait
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571  05D5                     _I2C_Master_Write:	
  1572                           ;psect for function _I2C_Master_Write
  1573                           
  1574  05D5                     l1087:	
  1575                           ;incstack = 0
  1576                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1577                           
  1578                           
  1579                           ;./prototipos.h: 262:   I2C_Master_Wait();
  1580  05D5  120A  118A  25DF  120A  118A  	fcall	_I2C_Master_Wait
  1581  05DA                     l1089:
  1582                           
  1583                           ;./prototipos.h: 263:   SSPBUF = d;
  1584  05DA  0870               	movf	I2C_Master_Write@d,w
  1585  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1586  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1587  05DD  0093               	movwf	19	;volatile
  1588  05DE                     l136:
  1589  05DE  0008               	return
  1590  05DF                     __end_of_I2C_Master_Write:
  1591                           
  1592                           	psect	text7
  1593  05CC                     __ptext7:	
  1594 ;; *************** function _I2C_Master_Stop *****************
  1595 ;; Defined at:
  1596 ;;		line 256 in file "./prototipos.h"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0, pclath, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1610 ;;      Params:         0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 1
  1617 ;; This function calls:
  1618 ;;		_I2C_Master_Wait
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624  05CC                     _I2C_Master_Stop:	
  1625                           ;psect for function _I2C_Master_Stop
  1626                           
  1627  05CC                     l1083:	
  1628                           ;incstack = 0
  1629                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1630                           
  1631                           
  1632                           ;./prototipos.h: 257:   I2C_Master_Wait();
  1633  05CC  120A  118A  25DF  120A  118A  	fcall	_I2C_Master_Wait
  1634  05D1                     l1085:
  1635                           
  1636                           ;./prototipos.h: 258:   PEN = 1;
  1637  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  1638  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  1639  05D3  1511               	bsf	17,2	;volatile
  1640  05D4                     l133:
  1641  05D4  0008               	return
  1642  05D5                     __end_of_I2C_Master_Stop:
  1643                           
  1644                           	psect	text8
  1645  05C3                     __ptext8:	
  1646 ;; *************** function _I2C_Master_Start *****************
  1647 ;; Defined at:
  1648 ;;		line 246 in file "./prototipos.h"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0, pclath, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1662 ;;      Params:         0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0
  1665 ;;      Totals:         0       0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 1
  1669 ;; This function calls:
  1670 ;;		_I2C_Master_Wait
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676  05C3                     _I2C_Master_Start:	
  1677                           ;psect for function _I2C_Master_Start
  1678                           
  1679  05C3                     l1079:	
  1680                           ;incstack = 0
  1681                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1682                           
  1683                           
  1684                           ;./prototipos.h: 247:   I2C_Master_Wait();
  1685  05C3  120A  118A  25DF  120A  118A  	fcall	_I2C_Master_Wait
  1686  05C8                     l1081:
  1687                           
  1688                           ;./prototipos.h: 248:   SEN = 1;
  1689  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  1690  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  1691  05CA  1411               	bsf	17,0	;volatile
  1692  05CB                     l127:
  1693  05CB  0008               	return
  1694  05CC                     __end_of_I2C_Master_Start:
  1695                           
  1696                           	psect	text9
  1697  05DF                     __ptext9:	
  1698 ;; *************** function _I2C_Master_Wait *****************
  1699 ;; Defined at:
  1700 ;;		line 242 in file "./prototipos.h"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         0       0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_I2C_Master_Start
  1724 ;;		_I2C_Master_Stop
  1725 ;;		_I2C_Master_Write
  1726 ;;		_I2C_Master_RepeatedStart
  1727 ;;		_I2C_Master_Read
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731  05DF                     _I2C_Master_Wait:	
  1732                           ;psect for function _I2C_Master_Wait
  1733                           
  1734  05DF                     l1045:	
  1735                           ;incstack = 0
  1736                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1737                           
  1738  05DF                     l121:	
  1739                           ;./prototipos.h: 243:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1740                           
  1741  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  1742  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  1743  05E1  1914               	btfsc	20,2	;volatile
  1744  05E2  2DE4               	goto	u261
  1745  05E3  2DE5               	goto	u260
  1746  05E4                     u261:
  1747  05E4  2DDF               	goto	l121
  1748  05E5                     u260:
  1749  05E5                     l1047:
  1750  05E5  0811               	movf	17,w	;volatile
  1751  05E6  391F               	andlw	31
  1752  05E7  1D03               	btfss	3,2
  1753  05E8  2DEA               	goto	u271
  1754  05E9  2DEB               	goto	u270
  1755  05EA                     u271:
  1756  05EA  2DDF               	goto	l121
  1757  05EB                     u270:
  1758  05EB                     l124:
  1759  05EB  0008               	return
  1760  05EC                     __end_of_I2C_Master_Wait:
  1761  007E                     btemp	set	126	;btemp
  1762  007E                     wtemp0	set	126
  1763                           
  1764                           	psect	idloc
  1765                           
  1766                           ;Config register IDLOC0 @ 0x2000
  1767                           ;	unspecified, using default values
  1768  2000                     	org	8192
  1769  2000  3FFF               	dw	16383
  1770                           
  1771                           ;Config register IDLOC1 @ 0x2001
  1772                           ;	unspecified, using default values
  1773  2001                     	org	8193
  1774  2001  3FFF               	dw	16383
  1775                           
  1776                           ;Config register IDLOC2 @ 0x2002
  1777                           ;	unspecified, using default values
  1778  2002                     	org	8194
  1779  2002  3FFF               	dw	16383
  1780                           
  1781                           ;Config register IDLOC3 @ 0x2003
  1782                           ;	unspecified, using default values
  1783  2003                     	org	8195
  1784  2003  3FFF               	dw	16383
  1785                           
  1786                           	psect	config
  1787                           
  1788                           ;Config register CONFIG1 @ 0x2007
  1789                           ;	Oscillator Selection bits
  1790                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1791                           ;	Watchdog Timer Enable bit
  1792                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1793                           ;	Power-up Timer Enable bit
  1794                           ;	PWRTE = ON, PWRT enabled
  1795                           ;	RE3/MCLR pin function select bit
  1796                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1797                           ;	Code Protection bit
  1798                           ;	CP = OFF, Program memory code protection is disabled
  1799                           ;	Data Code Protection bit
  1800                           ;	CPD = OFF, Data memory code protection is disabled
  1801                           ;	Brown Out Reset Selection bits
  1802                           ;	BOREN = OFF, BOR disabled
  1803                           ;	Internal External Switchover bit
  1804                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1805                           ;	Fail-Safe Clock Monitor Enabled bit
  1806                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1807                           ;	Low Voltage Programming Enable bit
  1808                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1809                           ;	In-Circuit Debugger Mode bit
  1810                           ;	DEBUG = 0x1, unprogrammed default
  1811  2007                     	org	8199
  1812  2007  28E4               	dw	10468
  1813                           
  1814                           ;Config register CONFIG2 @ 0x2008
  1815                           ;	Brown-out Reset Selection bit
  1816                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1817                           ;	Flash Program Memory Self Write Enable bits
  1818                           ;	WRT = OFF, Write protection off
  1819  2008                     	org	8200
  1820  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    6
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_probar_servomotor
    _probar_servomotor->_posicionar_servo
    _probar_motores_mov->_direccional
    _probar_motores_mov->_vehiculo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    2488
                                              9 COMMON     3     3      0
                                              0 BANK0      4     4      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                        _direccional
                 _probar_motores_mov
                  _probar_servomotor
                           _vehiculo
 ---------------------------------------------------------------------------------
 (1) _probar_servomotor                                    3     3      0     394
                                              6 COMMON     3     3      0
                   _posicionar_servo
 ---------------------------------------------------------------------------------
 (2) _posicionar_servo                                     6     4      2     394
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _probar_motores_mov                                   3     3      0     860
                                              2 COMMON     3     3      0
                        _direccional
                           _vehiculo
 ---------------------------------------------------------------------------------
 (1) _vehiculo                                             2     0      2     490
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _direccional                                          2     0      2     370
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     326
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _direccional
   _probar_motores_mov
     _direccional
     _vehiculo
   _probar_servomotor
     _posicionar_servo
   _vehiculo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 02 20:50:14 2022

                         pc 0002                          l61 060F                          l70 05FC  
                        l62 0619                          l63 0623                          l72 0604  
                        l64 062D                          l66 0637                          l75 076C  
                        l84 0692                          l69 05F4                          l88 06BB  
                        l98 06F8                          __0 000D                          fsr 0004  
                       l101 068F                         l121 05DF                         l124 05EB  
                       l133 05D4                         l127 05CB                         l136 05DE  
                       l991 0609                         l993 0613                         l995 061D  
                       l997 0627                         l989 0605                         l999 0631  
                       _RA2 002A                         _RA3 002B                         u200 0627  
                       u201 0626                         u210 0631                         u211 0630  
                       u220 05F0                         u221 05EF                         u230 05F8  
                       u231 05F7                         u240 0600                         u241 05FF  
                       u170 0609                         u250 06F8                         u171 0608  
                       u251 06F7                         u307 07C6                         u260 05E5  
                       u180 0613                         u261 05E4                         u181 0612  
                       u317 07F1                         u270 05EB                         u190 061D  
                       u271 05EA                         u191 061C                         u255 06F4  
                       u407 06C9                         u327 063E                         _PEN 048A  
                       u417 06E1                         u337 0653                         u427 0708  
                       u347 0669                         u437 0727                         u357 067F  
                       __90 000B                         u447 0746                         u367 0697  
                       u457 0765                         u377 069F                         u387 06A5  
                       _SEN 0488                         u397 06C1                        l1001 05EC  
                      l1003 05F0                        l1005 05F8                        l1007 0600  
                      l1031 06CD                        l1023 06AB                        l1015 0695  
                      l1111 0773                        l1033 06DD                        l1025 06BF  
                      l1017 069D                        l1009 0690                        l1121 077E  
                      l1113 0776                        l1051 0702                        l1035 06EB  
                      l1027 06C7                        l1019 06A3                        l1131 07A0  
                      l1123 0787                        l1115 077D                        l1045 05DF  
                      l1061 074D                        l1053 070F                        l1141 07C0  
                      l1133 07A2                        l1125 0790                        l1117 077E  
                      l1109 076D                        l1047 05E5                        l1063 0756  
                      l1055 0718                        l1071 064D                        l1151 07EB  
                      l1143 07CD                        l1135 07A7                        l1127 0795  
                      l1119 077E                        l1081 05C8                        l1065 075F  
                      l1057 0721                        l1049 06F9                        l1073 0663  
                      l1145 07D2                        l1137 07B0                        l1129 079A  
                      l1083 05CC                        l1059 0740                        l1075 0670  
                      l1067 0638                        l1147 07DB                        l1139 07BB  
                      l1085 05D1                        l1077 0686                        l1069 0645  
                      l1149 07E6                        l1079 05C3                        l1087 05D5  
                      l1089 05DA                        l1193 06B0                        l1195 06D2  
                      __180 0009  __end_of_probar_motores_mov 076D                        _RCEN 048B  
                      _RSEN 0489                        _main 076D                        btemp 007E  
                      start 0000            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
                     _ANSEL 0188                       _T1CON 0010                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       pclath 000A  
                     status 0003                       wtemp0 007E                __end_of__180 000B  
           __initialization 07FC     posicionar_servo@degrees 0070                __end_of_main 07FC  
                    ??_main 0079           ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0070  
        ??_I2C_Master_Start 0070          ??_I2C_Master_Write 0072           _probar_servomotor 0638  
                    _SPBRGH 009A                      _TMR1ON 0080                      _SSPADD 0093  
                    _TRISC3 043B                      _TRISC4 043C                      _SSPCON 0014  
                    _SSPBUF 0013          ?_probar_servomotor 0070         ??_probar_servomotor 0076  
                    main@x1 0020                      main@x2 0022            __end_of_vehiculo 0638  
 __end_of_probar_servomotor 0690     __end_of__initialization 07FC              __pcstackCOMMON 0070  
                __end_of__0 000F            _posicionar_servo 0690                  __pmaintext 076D  
        _probar_motores_mov 06F9         ?_probar_motores_mov 0070                     _SSPCON2 0091  
                   _SSPSTAT 0094                  __stringtab 0003        ??_probar_motores_mov 0072  
                 ?_vehiculo 0070                     __ptext1 0638                     __ptext2 0690  
                   __ptext3 06F9                     __ptext4 0605                     __ptext5 05EC  
                   __ptext6 05D5                     __ptext7 05CC                     __ptext8 05C3  
                   __ptext9 05DF        end_of_initialization 07FC                  ??_vehiculo 0072  
                 _PORTAbits 0005                   _PORTBbits 0006                   _PORTCbits 0007  
             ??_direccional 0072           posicionar_servo@i 0074    __end_of_posicionar_servo 06F9  
       start_initialization 07FC                 __end_of__90 000D           ??_I2C_Master_Wait 0070  
         ??_I2C_Master_Stop 0070         __end_of_direccional 0605                   ___latbits 0002  
             __pcstackBANK0 0020            _I2C_Master_Start 05C3            _I2C_Master_Write 05D5  
                 __pstrings 0003                 _direccional 05EC                  vehiculo@op 0070  
               __stringbase 0008           ?_posicionar_servo 0070          ??_posicionar_servo 0072  
        __end_of__stringtab 0009             _I2C_Master_Wait 05DF             _I2C_Master_Stop 05CC  
                  _vehiculo 0605    __end_of_I2C_Master_Start 05CC    __end_of_I2C_Master_Write 05DF  
             direccional@op 0070                   stringcode 0003     __end_of_I2C_Master_Wait 05EC  
   __end_of_I2C_Master_Stop 05D5           I2C_Master_Write@d 0070                    stringdir 0003  
                  stringtab 0003                ?_direccional 0070  
