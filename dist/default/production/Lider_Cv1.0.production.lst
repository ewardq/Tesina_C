

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 02 18:53:09 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F886 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0089                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  008F                     	;# 
   247  0090                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0095                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009B                     	;# 
   261  009C                     	;# 
   262  009D                     	;# 
   263  009E                     	;# 
   264  009F                     	;# 
   265  0105                     	;# 
   266  0107                     	;# 
   267  0108                     	;# 
   268  0109                     	;# 
   269  010C                     	;# 
   270  010C                     	;# 
   271  010D                     	;# 
   272  010E                     	;# 
   273  010F                     	;# 
   274  0185                     	;# 
   275  0187                     	;# 
   276  0188                     	;# 
   277  0189                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  0000                     	;# 
   281  0001                     	;# 
   282  0002                     	;# 
   283  0003                     	;# 
   284  0004                     	;# 
   285  0005                     	;# 
   286  0006                     	;# 
   287  0007                     	;# 
   288  0009                     	;# 
   289  000A                     	;# 
   290  000B                     	;# 
   291  000C                     	;# 
   292  000D                     	;# 
   293  000E                     	;# 
   294  000E                     	;# 
   295  000F                     	;# 
   296  0010                     	;# 
   297  0011                     	;# 
   298  0012                     	;# 
   299  0013                     	;# 
   300  0014                     	;# 
   301  0015                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0017                     	;# 
   305  0018                     	;# 
   306  0019                     	;# 
   307  001A                     	;# 
   308  001B                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  001D                     	;# 
   312  001E                     	;# 
   313  001F                     	;# 
   314  0081                     	;# 
   315  0085                     	;# 
   316  0086                     	;# 
   317  0087                     	;# 
   318  0089                     	;# 
   319  008C                     	;# 
   320  008D                     	;# 
   321  008E                     	;# 
   322  008F                     	;# 
   323  0090                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0093                     	;# 
   327  0093                     	;# 
   328  0093                     	;# 
   329  0094                     	;# 
   330  0095                     	;# 
   331  0096                     	;# 
   332  0097                     	;# 
   333  0098                     	;# 
   334  0099                     	;# 
   335  009A                     	;# 
   336  009B                     	;# 
   337  009C                     	;# 
   338  009D                     	;# 
   339  009E                     	;# 
   340  009F                     	;# 
   341  0105                     	;# 
   342  0107                     	;# 
   343  0108                     	;# 
   344  0109                     	;# 
   345  010C                     	;# 
   346  010C                     	;# 
   347  010D                     	;# 
   348  010E                     	;# 
   349  010F                     	;# 
   350  0185                     	;# 
   351  0187                     	;# 
   352  0188                     	;# 
   353  0189                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356                           
   357                           	psect	strings
   358  0003                     __pstrings:
   359  0003                     stringtab:
   360  0003                     __stringtab:
   361  0003                     stringcode:	
   362                           ;	String table - string pointers are 1 byte each
   363                           
   364  0003                     stringdir:
   365  0003  3000               	movlw	high stringdir
   366  0004  008A               	movwf	10
   367  0005  0804               	movf	4,w
   368  0006  0A84               	incf	4,f
   369  0007  0782               	addwf	2,f
   370  0008                     __stringbase:
   371  0008  3400               	retlw	0
   372  0009                     __end_of__stringtab:
   373  0009                     __180:
   374  0009  34B4               	retlw	180
   375  000A  3400               	retlw	0
   376  000B                     __end_of__180:
   377  000B                     __90:
   378  000B  345A               	retlw	90
   379  000C  3400               	retlw	0
   380  000D                     __end_of__90:
   381  000D                     __0:
   382  000D  3400               	retlw	0
   383  000E  3400               	retlw	0
   384  000F                     __end_of__0:
   385  0006                     _PORTBbits	set	6
   386  0010                     _T1CON	set	16
   387  000E                     _TMR1L	set	14
   388  000F                     _TMR1H	set	15
   389  0007                     _PORTCbits	set	7
   390  0005                     _PORTAbits	set	5
   391  0080                     _TMR1ON	set	128
   392  002A                     _RA2	set	42
   393  002B                     _RA3	set	43
   394  0087                     _TRISC	set	135
   395  0086                     _TRISB	set	134
   396  0085                     _TRISA	set	133
   397  0188                     _ANSEL	set	392
   398                           
   399                           	psect	cinit
   400  07FC                     start_initialization:	
   401                           ; #config settings
   402                           
   403  07FC                     __initialization:
   404  07FC                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  07FC                     __end_of__initialization:
   408  07FC  0183               	clrf	3
   409  07FD  120A  118A  2E63   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	cstackCOMMON
   412  0070                     __pcstackCOMMON:
   413  0070                     ?_vehiculo:
   414  0070                     ?_direccional:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_probar_motores_mov:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_posicionar_servo:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_probar_servomotor:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     vehiculo@op:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     direccional@op:	
   433                           ; 2 bytes @ 0x0
   434                           
   435  0070                     posicionar_servo@degrees:	
   436                           ; 2 bytes @ 0x0
   437                           
   438                           
   439                           ; 2 bytes @ 0x0
   440  0070                     	ds	2
   441  0072                     ??_vehiculo:
   442  0072                     ??_direccional:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     ??_probar_motores_mov:	
   446                           ; 1 bytes @ 0x2
   447                           
   448  0072                     ??_posicionar_servo:	
   449                           ; 1 bytes @ 0x2
   450                           
   451                           
   452                           ; 1 bytes @ 0x2
   453  0072                     	ds	2
   454  0074                     posicionar_servo@i:
   455                           
   456                           ; 2 bytes @ 0x4
   457  0074                     	ds	2
   458  0076                     ??_probar_servomotor:
   459                           
   460                           ; 1 bytes @ 0x6
   461  0076                     	ds	3
   462  0079                     ??_main:
   463                           
   464                           	psect	maintext
   465  0663                     __pmaintext:	
   466                           ; 1 bytes @ 0x9
   467 ;;
   468 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   469 ;;
   470 ;; *************** function _main *****************
   471 ;; Defined at:
   472 ;;		line 29 in file "main.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  Encoder2        2    0        unsigned int 
   477 ;;  Encoder1        2    0        unsigned int 
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : B00/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels required when called: 2
   493 ;; This function calls:
   494 ;;		_direccional
   495 ;;		_probar_motores_mov
   496 ;;		_probar_servomotor
   497 ;;		_vehiculo
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503  0663                     _main:	
   504                           ;psect for function _main
   505                           
   506  0663                     l942:	
   507                           ;incstack = 0
   508                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   509                           
   510                           
   511                           ;main.c: 31:     TRISA = 0b00000100;
   512  0663  3004               	movlw	4
   513  0664  1683               	bsf	3,5	;RP0=1, select bank1
   514  0665  1303               	bcf	3,6	;RP1=0, select bank1
   515  0666  0085               	movwf	5	;volatile
   516                           
   517                           ;main.c: 32:     TRISB = 0b00000011;
   518  0667  3003               	movlw	3
   519  0668  0086               	movwf	6	;volatile
   520  0669                     l944:
   521                           
   522                           ;main.c: 33:     ANSEL = 0x00;
   523  0669  1683               	bsf	3,5	;RP0=1, select bank3
   524  066A  1703               	bsf	3,6	;RP1=1, select bank3
   525  066B  0188               	clrf	8	;volatile
   526  066C                     l946:
   527                           
   528                           ;main.c: 34:     TRISC = 0x00;
   529  066C  1683               	bsf	3,5	;RP0=1, select bank1
   530  066D  1303               	bcf	3,6	;RP1=0, select bank1
   531  066E  0187               	clrf	7	;volatile
   532                           
   533                           ;main.c: 36:     T1CON = 0x10;
   534  066F  3010               	movlw	16
   535  0670  1283               	bcf	3,5	;RP0=0, select bank0
   536  0671  1303               	bcf	3,6	;RP1=0, select bank0
   537  0672  0090               	movwf	16	;volatile
   538  0673                     l948:
   539                           
   540                           ;main.c: 37:     PORTBbits.RB7 = 0;
   541  0673  1386               	bcf	6,7	;volatile
   542  0674                     l950:
   543  0674                     l952:
   544  0674                     l954:
   545                           
   546                           ;main.c: 42:     direccional(0b00001);
   547  0674  3001               	movlw	1
   548  0675  00F0               	movwf	direccional@op
   549  0676  3000               	movlw	0
   550  0677  00F1               	movwf	direccional@op+1
   551  0678  120A  118A  264A  120A  118A  	fcall	_direccional
   552  067D                     l956:
   553                           
   554                           ;main.c: 43:     vehiculo(0b00001);
   555  067D  3001               	movlw	1
   556  067E  00F0               	movwf	vehiculo@op
   557  067F  3000               	movlw	0
   558  0680  00F1               	movwf	vehiculo@op+1
   559  0681  120A  118A  2694  120A  118A  	fcall	_vehiculo
   560  0686                     l958:
   561                           
   562                           ;main.c: 45:     probar_motores_mov();
   563  0686  120A  118A  2788  120A  118A  	fcall	_probar_motores_mov
   564  068B                     l960:
   565                           
   566                           ;main.c: 46:     probar_servomotor();
   567  068B  120A  118A  26C7  120A  118A  	fcall	_probar_servomotor
   568  0690                     l87:	
   569                           ;main.c: 48:     while(1){
   570                           
   571  0690                     l88:	
   572                           ;main.c: 50:     }
   573                           
   574  0690  2E90               	goto	l87
   575  0691  120A  118A  2800   	ljmp	start
   576  0694                     __end_of_main:
   577                           
   578                           	psect	text1
   579  06C7                     __ptext1:	
   580 ;; *************** function _probar_servomotor *****************
   581 ;; Defined at:
   582 ;;		line 129 in file "./prototipos.h"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          3       0       0       0       0
   599 ;;      Totals:         3       0       0       0       0
   600 ;;Total ram usage:        3 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 1
   603 ;; This function calls:
   604 ;;		_posicionar_servo
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610  06C7                     _probar_servomotor:	
   611                           ;psect for function _probar_servomotor
   612                           
   613  06C7                     l930:	
   614                           ;incstack = 0
   615                           ; Regs used in _probar_servomotor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   616                           
   617                           
   618                           ;./prototipos.h: 130:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   619  06C7  3006               	movlw	6
   620  06C8  00F8               	movwf	??_probar_servomotor+2
   621  06C9  3013               	movlw	19
   622  06CA  00F7               	movwf	??_probar_servomotor+1
   623  06CB  30AD               	movlw	173
   624  06CC  00F6               	movwf	??_probar_servomotor
   625  06CD                     u217:
   626  06CD  0BF6               	decfsz	??_probar_servomotor,f
   627  06CE  2ECD               	goto	u217
   628  06CF  0BF7               	decfsz	??_probar_servomotor+1,f
   629  06D0  2ECD               	goto	u217
   630  06D1  0BF8               	decfsz	??_probar_servomotor+2,f
   631  06D2  2ECD               	goto	u217
   632  06D3  2ED4               	nop2
   633  06D4                     l932:
   634                           
   635                           ;./prototipos.h: 131:      posicionar_servo(_0);
   636  06D4  3000               	movlw	0
   637  06D5  00F0               	movwf	posicionar_servo@degrees
   638  06D6  00F1               	movwf	posicionar_servo@degrees+1
   639  06D7  120A  118A  271F  120A  118A  	fcall	_posicionar_servo
   640  06DC                     l934:
   641                           
   642                           ;./prototipos.h: 133:      _delay((unsigned long)((1000)*(4000000/4000.0)));
   643  06DC  3006               	movlw	6
   644  06DD  00F8               	movwf	??_probar_servomotor+2
   645  06DE  3013               	movlw	19
   646  06DF  00F7               	movwf	??_probar_servomotor+1
   647  06E0  30AD               	movlw	173
   648  06E1  00F6               	movwf	??_probar_servomotor
   649  06E2                     u227:
   650  06E2  0BF6               	decfsz	??_probar_servomotor,f
   651  06E3  2EE2               	goto	u227
   652  06E4  0BF7               	decfsz	??_probar_servomotor+1,f
   653  06E5  2EE2               	goto	u227
   654  06E6  0BF8               	decfsz	??_probar_servomotor+2,f
   655  06E7  2EE2               	goto	u227
   656  06E8  2EE9               	nop2
   657                           
   658                           ;./prototipos.h: 134:      posicionar_servo(_90);
   659  06E9  305A               	movlw	90
   660  06EA  00F0               	movwf	posicionar_servo@degrees
   661  06EB  3000               	movlw	0
   662  06EC  00F1               	movwf	posicionar_servo@degrees+1
   663  06ED  120A  118A  271F  120A  118A  	fcall	_posicionar_servo
   664  06F2                     l936:
   665                           
   666                           ;./prototipos.h: 136:      _delay((unsigned long)((1000)*(4000000/4000.0)));
   667  06F2  3006               	movlw	6
   668  06F3  00F8               	movwf	??_probar_servomotor+2
   669  06F4  3013               	movlw	19
   670  06F5  00F7               	movwf	??_probar_servomotor+1
   671  06F6  30AD               	movlw	173
   672  06F7  00F6               	movwf	??_probar_servomotor
   673  06F8                     u237:
   674  06F8  0BF6               	decfsz	??_probar_servomotor,f
   675  06F9  2EF8               	goto	u237
   676  06FA  0BF7               	decfsz	??_probar_servomotor+1,f
   677  06FB  2EF8               	goto	u237
   678  06FC  0BF8               	decfsz	??_probar_servomotor+2,f
   679  06FD  2EF8               	goto	u237
   680  06FE  2EFF               	nop2
   681  06FF                     l938:
   682                           
   683                           ;./prototipos.h: 137:      posicionar_servo(_180);
   684  06FF  30B4               	movlw	180
   685  0700  00F0               	movwf	posicionar_servo@degrees
   686  0701  3000               	movlw	0
   687  0702  00F1               	movwf	posicionar_servo@degrees+1
   688  0703  120A  118A  271F  120A  118A  	fcall	_posicionar_servo
   689                           
   690                           ;./prototipos.h: 139:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   691  0708  3006               	movlw	6
   692  0709  00F8               	movwf	??_probar_servomotor+2
   693  070A  3013               	movlw	19
   694  070B  00F7               	movwf	??_probar_servomotor+1
   695  070C  30AD               	movlw	173
   696  070D  00F6               	movwf	??_probar_servomotor
   697  070E                     u247:
   698  070E  0BF6               	decfsz	??_probar_servomotor,f
   699  070F  2F0E               	goto	u247
   700  0710  0BF7               	decfsz	??_probar_servomotor+1,f
   701  0711  2F0E               	goto	u247
   702  0712  0BF8               	decfsz	??_probar_servomotor+2,f
   703  0713  2F0E               	goto	u247
   704  0714  2F15               	nop2
   705  0715                     l940:
   706                           
   707                           ;./prototipos.h: 140:      posicionar_servo(_90);
   708  0715  305A               	movlw	90
   709  0716  00F0               	movwf	posicionar_servo@degrees
   710  0717  3000               	movlw	0
   711  0718  00F1               	movwf	posicionar_servo@degrees+1
   712  0719  120A  118A  271F  120A  118A  	fcall	_posicionar_servo
   713  071E                     l71:
   714  071E  0008               	return
   715  071F                     __end_of_probar_servomotor:
   716                           
   717                           	psect	text2
   718  071F                     __ptext2:	
   719 ;; *************** function _posicionar_servo *****************
   720 ;; Defined at:
   721 ;;		line 100 in file "./prototipos.h"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  degrees         2    0[COMMON] unsigned int 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  i               2    4[COMMON] int 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         2       0       0       0       0
   736 ;;      Locals:         2       0       0       0       0
   737 ;;      Temps:          2       0       0       0       0
   738 ;;      Totals:         6       0       0       0       0
   739 ;;Total ram usage:        6 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_probar_servomotor
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748  071F                     _posicionar_servo:	
   749                           ;psect for function _posicionar_servo
   750                           
   751  071F                     l876:	
   752                           ;incstack = 0
   753                           ; Regs used in _posicionar_servo: [wreg-fsr0h+status,2+status,0+btemp+1]
   754                           
   755                           
   756                           ;./prototipos.h: 101:     for(int i = 0; i < 6; i++){
   757  071F  01F4               	clrf	posicionar_servo@i
   758  0720  01F5               	clrf	posicionar_servo@i+1
   759  0721                     l54:
   760                           
   761                           ;./prototipos.h: 102:      PORTCbits.RC0 = 1;
   762  0721  1283               	bcf	3,5	;RP0=0, select bank0
   763  0722  1303               	bcf	3,6	;RP1=0, select bank0
   764  0723  1407               	bsf	7,0	;volatile
   765  0724                     l882:
   766                           
   767                           ;./prototipos.h: 103:         _delay((unsigned long)((1000)*(4000000/4000000.0)));
   768  0724  30C7               	movlw	199
   769  0725  00F2               	movwf	??_posicionar_servo
   770  0726                     u257:
   771  0726  2F27               	nop2
   772  0727  0BF2               	decfsz	??_posicionar_servo,f
   773  0728  2F26               	goto	u257
   774  0729  2F2A               	nop2
   775  072A  2F2B               	nop2
   776                           
   777                           ;./prototipos.h: 104:         switch(degrees){
   778  072B  2F3A               	goto	l890
   779  072C                     l884:
   780  072C  30A6               	movlw	166
   781  072D  00F2               	movwf	??_posicionar_servo
   782  072E                     u267:
   783  072E  0BF2               	decfsz	??_posicionar_servo,f
   784  072F  2F2E               	goto	u267
   785  0730  0000               	nop
   786                           
   787                           ;./prototipos.h: 108:              break;
   788  0731  2F4A               	goto	l58
   789  0732                     l886:
   790  0732  30C7               	movlw	199
   791  0733  00F2               	movwf	??_posicionar_servo
   792  0734                     u277:
   793  0734  2F35               	nop2
   794  0735  0BF2               	decfsz	??_posicionar_servo,f
   795  0736  2F34               	goto	u277
   796  0737  2F38               	nop2
   797  0738  2F39               	nop2
   798                           
   799                           ;./prototipos.h: 110:              break;
   800  0739  2F4A               	goto	l58
   801  073A                     l890:
   802                           
   803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   804                           ; Switch size 1, requested type "simple"
   805                           ; Number of cases is 1, Range of values is 0 to 0
   806                           ; switch strategies available:
   807                           ; Name         Instructions Cycles
   808                           ; simple_byte            4     3 (average)
   809                           ; direct_byte           11     8 (fixed)
   810                           ; jumptable            260     6 (fixed)
   811                           ;	Chosen strategy is simple_byte
   812  073A  0871               	movf	posicionar_servo@degrees+1,w
   813  073B  3A00               	xorlw	0	; case 0
   814  073C  1903               	skipnz
   815  073D  2F3F               	goto	l1002
   816  073E  2F2C               	goto	l884
   817  073F                     l1002:
   818                           
   819                           ; Switch size 1, requested type "simple"
   820                           ; Number of cases is 3, Range of values is 0 to 180
   821                           ; switch strategies available:
   822                           ; Name         Instructions Cycles
   823                           ; simple_byte           10     6 (average)
   824                           ; jumptable            260     6 (fixed)
   825                           ;	Chosen strategy is simple_byte
   826  073F  0870               	movf	posicionar_servo@degrees,w
   827  0740  3A00               	xorlw	0	; case 0
   828  0741  1903               	skipnz
   829  0742  2F4A               	goto	l58
   830  0743  3A5A               	xorlw	90	; case 90
   831  0744  1903               	skipnz
   832  0745  2F2C               	goto	l884
   833  0746  3AEE               	xorlw	238	; case 180
   834  0747  1903               	skipnz
   835  0748  2F32               	goto	l886
   836  0749  2F2C               	goto	l884
   837  074A                     l58:
   838                           
   839                           ;./prototipos.h: 113:      PORTCbits.RC0 = 0;
   840  074A  1283               	bcf	3,5	;RP0=0, select bank0
   841  074B  1303               	bcf	3,6	;RP1=0, select bank0
   842  074C  1007               	bcf	7,0	;volatile
   843                           
   844                           ;./prototipos.h: 114:         switch(degrees){
   845  074D  2F5C               	goto	l898
   846  074E                     l892:
   847  074E  30C7               	movlw	199
   848  074F  00F2               	movwf	??_posicionar_servo
   849  0750                     u287:
   850  0750  2F51               	nop2
   851  0751  0BF2               	decfsz	??_posicionar_servo,f
   852  0752  2F50               	goto	u287
   853  0753  2F54               	nop2
   854  0754  2F55               	nop2
   855                           
   856                           ;./prototipos.h: 116:              break;
   857  0755  2F6C               	goto	l900
   858  0756                     l894:
   859  0756  30A6               	movlw	166
   860  0757  00F2               	movwf	??_posicionar_servo
   861  0758                     u297:
   862  0758  0BF2               	decfsz	??_posicionar_servo,f
   863  0759  2F58               	goto	u297
   864  075A  0000               	nop
   865                           
   866                           ;./prototipos.h: 118:              break;
   867  075B  2F6C               	goto	l900
   868  075C                     l898:
   869                           
   870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   871                           ; Switch size 1, requested type "simple"
   872                           ; Number of cases is 1, Range of values is 0 to 0
   873                           ; switch strategies available:
   874                           ; Name         Instructions Cycles
   875                           ; simple_byte            4     3 (average)
   876                           ; direct_byte           11     8 (fixed)
   877                           ; jumptable            260     6 (fixed)
   878                           ;	Chosen strategy is simple_byte
   879  075C  0871               	movf	posicionar_servo@degrees+1,w
   880  075D  3A00               	xorlw	0	; case 0
   881  075E  1903               	skipnz
   882  075F  2F61               	goto	l1004
   883  0760  2F56               	goto	l894
   884  0761                     l1004:
   885                           
   886                           ; Switch size 1, requested type "simple"
   887                           ; Number of cases is 3, Range of values is 0 to 180
   888                           ; switch strategies available:
   889                           ; Name         Instructions Cycles
   890                           ; simple_byte           10     6 (average)
   891                           ; jumptable            260     6 (fixed)
   892                           ;	Chosen strategy is simple_byte
   893  0761  0870               	movf	posicionar_servo@degrees,w
   894  0762  3A00               	xorlw	0	; case 0
   895  0763  1903               	skipnz
   896  0764  2F4E               	goto	l892
   897  0765  3A5A               	xorlw	90	; case 90
   898  0766  1903               	skipnz
   899  0767  2F56               	goto	l894
   900  0768  3AEE               	xorlw	238	; case 180
   901  0769  1903               	skipnz
   902  076A  2F6C               	goto	l900
   903  076B  2F56               	goto	l894
   904  076C                     l900:
   905                           
   906                           ;./prototipos.h: 123:         _delay((unsigned long)((18000)*(4000000/4000000.0)));
   907  076C  3018               	movlw	24
   908  076D  00F3               	movwf	??_posicionar_servo+1
   909  076E  305F               	movlw	95
   910  076F  00F2               	movwf	??_posicionar_servo
   911  0770                     u307:
   912  0770  0BF2               	decfsz	??_posicionar_servo,f
   913  0771  2F70               	goto	u307
   914  0772  0BF3               	decfsz	??_posicionar_servo+1,f
   915  0773  2F70               	goto	u307
   916                           
   917                           ;./prototipos.h: 124:      }
   918  0774  3001               	movlw	1
   919  0775  07F4               	addwf	posicionar_servo@i,f
   920  0776  1803               	skipnc
   921  0777  0AF5               	incf	posicionar_servo@i+1,f
   922  0778  3000               	movlw	0
   923  0779  07F5               	addwf	posicionar_servo@i+1,f
   924  077A                     l902:
   925  077A  0875               	movf	posicionar_servo@i+1,w
   926  077B  3A80               	xorlw	128
   927  077C  00FF               	movwf	btemp+1
   928  077D  3080               	movlw	128
   929  077E  027F               	subwf	btemp+1,w
   930  077F  1D03               	skipz
   931  0780  2F83               	goto	u205
   932  0781  3006               	movlw	6
   933  0782  0274               	subwf	posicionar_servo@i,w
   934  0783                     u205:
   935  0783  1C03               	skipc
   936  0784  2F86               	goto	u201
   937  0785  2F87               	goto	u200
   938  0786                     u201:
   939  0786  2F21               	goto	l54
   940  0787                     u200:
   941  0787                     l68:
   942  0787  0008               	return
   943  0788                     __end_of_posicionar_servo:
   944                           
   945                           	psect	text3
   946  0788                     __ptext3:	
   947 ;; *************** function _probar_motores_mov *****************
   948 ;; Defined at:
   949 ;;		line 73 in file "./prototipos.h"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          3       0       0       0       0
   966 ;;      Totals:         3       0       0       0       0
   967 ;;Total ram usage:        3 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 1
   970 ;; This function calls:
   971 ;;		_direccional
   972 ;;		_vehiculo
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978  0788                     _probar_motores_mov:	
   979                           ;psect for function _probar_motores_mov
   980                           
   981  0788                     l912:	
   982                           ;incstack = 0
   983                           ; Regs used in _probar_motores_mov: [wreg+status,2+status,0+pclath+cstack]
   984                           
   985                           
   986                           ;./prototipos.h: 75:     vehiculo(0b10000);
   987  0788  3010               	movlw	16
   988  0789  00F0               	movwf	vehiculo@op
   989  078A  3000               	movlw	0
   990  078B  00F1               	movwf	vehiculo@op+1
   991  078C  120A  118A  2694  120A  118A  	fcall	_vehiculo
   992  0791                     l914:
   993                           
   994                           ;./prototipos.h: 76:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   995  0791  3006               	movlw	6
   996  0792  00F4               	movwf	??_probar_motores_mov+2
   997  0793  3013               	movlw	19
   998  0794  00F3               	movwf	??_probar_motores_mov+1
   999  0795  30AD               	movlw	173
  1000  0796  00F2               	movwf	??_probar_motores_mov
  1001  0797                     u317:
  1002  0797  0BF2               	decfsz	??_probar_motores_mov,f
  1003  0798  2F97               	goto	u317
  1004  0799  0BF3               	decfsz	??_probar_motores_mov+1,f
  1005  079A  2F97               	goto	u317
  1006  079B  0BF4               	decfsz	??_probar_motores_mov+2,f
  1007  079C  2F97               	goto	u317
  1008  079D  2F9E               	nop2
  1009  079E                     l916:
  1010                           
  1011                           ;./prototipos.h: 78:     vehiculo(0b00010);
  1012  079E  3002               	movlw	2
  1013  079F  00F0               	movwf	vehiculo@op
  1014  07A0  3000               	movlw	0
  1015  07A1  00F1               	movwf	vehiculo@op+1
  1016  07A2  120A  118A  2694  120A  118A  	fcall	_vehiculo
  1017  07A7                     l918:
  1018                           
  1019                           ;./prototipos.h: 79:     direccional(0b00010);
  1020  07A7  3002               	movlw	2
  1021  07A8  00F0               	movwf	direccional@op
  1022  07A9  3000               	movlw	0
  1023  07AA  00F1               	movwf	direccional@op+1
  1024  07AB  120A  118A  264A  120A  118A  	fcall	_direccional
  1025  07B0                     l920:
  1026                           
  1027                           ;./prototipos.h: 80:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1028  07B0  3006               	movlw	6
  1029  07B1  00F4               	movwf	??_probar_motores_mov+2
  1030  07B2  3013               	movlw	19
  1031  07B3  00F3               	movwf	??_probar_motores_mov+1
  1032  07B4  30AD               	movlw	173
  1033  07B5  00F2               	movwf	??_probar_motores_mov
  1034  07B6                     u327:
  1035  07B6  0BF2               	decfsz	??_probar_motores_mov,f
  1036  07B7  2FB6               	goto	u327
  1037  07B8  0BF3               	decfsz	??_probar_motores_mov+1,f
  1038  07B9  2FB6               	goto	u327
  1039  07BA  0BF4               	decfsz	??_probar_motores_mov+2,f
  1040  07BB  2FB6               	goto	u327
  1041  07BC  2FBD               	nop2
  1042                           
  1043                           ;./prototipos.h: 82:     vehiculo(0b00100);
  1044  07BD  3004               	movlw	4
  1045  07BE  00F0               	movwf	vehiculo@op
  1046  07BF  3000               	movlw	0
  1047  07C0  00F1               	movwf	vehiculo@op+1
  1048  07C1  120A  118A  2694  120A  118A  	fcall	_vehiculo
  1049                           
  1050                           ;./prototipos.h: 83:     direccional(0b00100);
  1051  07C6  3004               	movlw	4
  1052  07C7  00F0               	movwf	direccional@op
  1053  07C8  3000               	movlw	0
  1054  07C9  00F1               	movwf	direccional@op+1
  1055  07CA  120A  118A  264A  120A  118A  	fcall	_direccional
  1056  07CF                     l922:
  1057                           
  1058                           ;./prototipos.h: 84:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1059  07CF  3006               	movlw	6
  1060  07D0  00F4               	movwf	??_probar_motores_mov+2
  1061  07D1  3013               	movlw	19
  1062  07D2  00F3               	movwf	??_probar_motores_mov+1
  1063  07D3  30AD               	movlw	173
  1064  07D4  00F2               	movwf	??_probar_motores_mov
  1065  07D5                     u337:
  1066  07D5  0BF2               	decfsz	??_probar_motores_mov,f
  1067  07D6  2FD5               	goto	u337
  1068  07D7  0BF3               	decfsz	??_probar_motores_mov+1,f
  1069  07D8  2FD5               	goto	u337
  1070  07D9  0BF4               	decfsz	??_probar_motores_mov+2,f
  1071  07DA  2FD5               	goto	u337
  1072  07DB  2FDC               	nop2
  1073  07DC                     l924:
  1074                           
  1075                           ;./prototipos.h: 86:     vehiculo(0b00001);
  1076  07DC  3001               	movlw	1
  1077  07DD  00F0               	movwf	vehiculo@op
  1078  07DE  3000               	movlw	0
  1079  07DF  00F1               	movwf	vehiculo@op+1
  1080  07E0  120A  118A  2694  120A  118A  	fcall	_vehiculo
  1081  07E5                     l926:
  1082                           
  1083                           ;./prototipos.h: 87:     direccional(0b00001);
  1084  07E5  3001               	movlw	1
  1085  07E6  00F0               	movwf	direccional@op
  1086  07E7  3000               	movlw	0
  1087  07E8  00F1               	movwf	direccional@op+1
  1088  07E9  120A  118A  264A  120A  118A  	fcall	_direccional
  1089  07EE                     l928:
  1090                           
  1091                           ;./prototipos.h: 88:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1092  07EE  3006               	movlw	6
  1093  07EF  00F4               	movwf	??_probar_motores_mov+2
  1094  07F0  3013               	movlw	19
  1095  07F1  00F3               	movwf	??_probar_motores_mov+1
  1096  07F2  30AD               	movlw	173
  1097  07F3  00F2               	movwf	??_probar_motores_mov
  1098  07F4                     u347:
  1099  07F4  0BF2               	decfsz	??_probar_motores_mov,f
  1100  07F5  2FF4               	goto	u347
  1101  07F6  0BF3               	decfsz	??_probar_motores_mov+1,f
  1102  07F7  2FF4               	goto	u347
  1103  07F8  0BF4               	decfsz	??_probar_motores_mov+2,f
  1104  07F9  2FF4               	goto	u347
  1105  07FA  2FFB               	nop2
  1106  07FB                     l45:
  1107  07FB  0008               	return
  1108  07FC                     __end_of_probar_motores_mov:
  1109                           
  1110                           	psect	text4
  1111  0694                     __ptext4:	
  1112 ;; *************** function _vehiculo *****************
  1113 ;; Defined at:
  1114 ;;		line 18 in file "./prototipos.h"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  op              2    0[COMMON] unsigned int 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		None
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         2       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0
  1131 ;;      Totals:         2       0       0       0       0
  1132 ;;Total ram usage:        2 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_probar_motores_mov
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142  0694                     _vehiculo:	
  1143                           ;psect for function _vehiculo
  1144                           
  1145  0694                     l856:	
  1146                           ;incstack = 0
  1147                           ; Regs used in _vehiculo: []
  1148                           
  1149                           
  1150                           ;./prototipos.h: 19:     if (op & 0b00001){
  1151  0694  1C70               	btfss	vehiculo@op,0
  1152  0695  2E97               	goto	u121
  1153  0696  2E98               	goto	u120
  1154  0697                     u121:
  1155  0697  2E9E               	goto	l31
  1156  0698                     u120:
  1157  0698                     l858:
  1158                           
  1159                           ;./prototipos.h: 20:         PORTAbits.RA7 = 0;
  1160  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1162  069A  1385               	bcf	5,7	;volatile
  1163                           
  1164                           ;./prototipos.h: 21:         PORTCbits.RC1 = 0;
  1165  069B  1087               	bcf	7,1	;volatile
  1166                           
  1167                           ;./prototipos.h: 23:         PORTAbits.RA6 = 0;
  1168  069C  1305               	bcf	5,6	;volatile
  1169                           
  1170                           ;./prototipos.h: 24:         PORTCbits.RC2 = 0;
  1171  069D  1107               	bcf	7,2	;volatile
  1172  069E                     l31:	
  1173                           ;./prototipos.h: 25:     }
  1174                           
  1175                           
  1176                           ;./prototipos.h: 26:     if (op & 0b00010){
  1177  069E  1CF0               	btfss	vehiculo@op,1
  1178  069F  2EA1               	goto	u131
  1179  06A0  2EA2               	goto	u130
  1180  06A1                     u131:
  1181  06A1  2EA8               	goto	l32
  1182  06A2                     u130:
  1183  06A2                     l860:
  1184                           
  1185                           ;./prototipos.h: 27:         PORTAbits.RA7 = 1;
  1186  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1187  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1188  06A4  1785               	bsf	5,7	;volatile
  1189                           
  1190                           ;./prototipos.h: 28:         PORTCbits.RC1 = 0;
  1191  06A5  1087               	bcf	7,1	;volatile
  1192                           
  1193                           ;./prototipos.h: 30:         PORTAbits.RA6 = 0;
  1194  06A6  1305               	bcf	5,6	;volatile
  1195                           
  1196                           ;./prototipos.h: 31:         PORTCbits.RC2 = 0;
  1197  06A7  1107               	bcf	7,2	;volatile
  1198  06A8                     l32:	
  1199                           ;./prototipos.h: 32:     }
  1200                           
  1201                           
  1202                           ;./prototipos.h: 33:     if (op & 0b00100){
  1203  06A8  1D70               	btfss	vehiculo@op,2
  1204  06A9  2EAB               	goto	u141
  1205  06AA  2EAC               	goto	u140
  1206  06AB                     u141:
  1207  06AB  2EB2               	goto	l33
  1208  06AC                     u140:
  1209  06AC                     l862:
  1210                           
  1211                           ;./prototipos.h: 34:         PORTAbits.RA7 = 0;
  1212  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1213  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1214  06AE  1385               	bcf	5,7	;volatile
  1215                           
  1216                           ;./prototipos.h: 35:         PORTCbits.RC1 = 0;
  1217  06AF  1087               	bcf	7,1	;volatile
  1218                           
  1219                           ;./prototipos.h: 37:         PORTAbits.RA6 = 1;
  1220  06B0  1705               	bsf	5,6	;volatile
  1221                           
  1222                           ;./prototipos.h: 38:         PORTCbits.RC2 = 0;
  1223  06B1  1107               	bcf	7,2	;volatile
  1224  06B2                     l33:	
  1225                           ;./prototipos.h: 39:     }
  1226                           
  1227                           
  1228                           ;./prototipos.h: 40:     if (op & 0b01000){
  1229  06B2  1DF0               	btfss	vehiculo@op,3
  1230  06B3  2EB5               	goto	u151
  1231  06B4  2EB6               	goto	u150
  1232  06B5                     u151:
  1233  06B5  2EBC               	goto	l34
  1234  06B6                     u150:
  1235  06B6                     l864:
  1236                           
  1237                           ;./prototipos.h: 41:         PORTAbits.RA7 = 1;
  1238  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1239  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1240  06B8  1785               	bsf	5,7	;volatile
  1241                           
  1242                           ;./prototipos.h: 42:         PORTCbits.RC1 = 0;
  1243  06B9  1087               	bcf	7,1	;volatile
  1244                           
  1245                           ;./prototipos.h: 44:         PORTAbits.RA6 = 1;
  1246  06BA  1705               	bsf	5,6	;volatile
  1247                           
  1248                           ;./prototipos.h: 45:         PORTCbits.RC2 = 0;
  1249  06BB  1107               	bcf	7,2	;volatile
  1250  06BC                     l34:	
  1251                           ;./prototipos.h: 46:     }
  1252                           
  1253                           
  1254                           ;./prototipos.h: 47:     if (op & 0b10000){
  1255  06BC  1E70               	btfss	vehiculo@op,4
  1256  06BD  2EBF               	goto	u161
  1257  06BE  2EC0               	goto	u160
  1258  06BF                     u161:
  1259  06BF  2EC6               	goto	l36
  1260  06C0                     u160:
  1261  06C0                     l866:
  1262                           
  1263                           ;./prototipos.h: 48:         PORTAbits.RA7 = 0;
  1264  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1265  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1266  06C2  1385               	bcf	5,7	;volatile
  1267                           
  1268                           ;./prototipos.h: 49:         PORTCbits.RC1 = 1;
  1269  06C3  1487               	bsf	7,1	;volatile
  1270                           
  1271                           ;./prototipos.h: 51:         PORTAbits.RA6 = 0;
  1272  06C4  1305               	bcf	5,6	;volatile
  1273                           
  1274                           ;./prototipos.h: 52:         PORTCbits.RC2 = 1;
  1275  06C5  1507               	bsf	7,2	;volatile
  1276  06C6                     l36:
  1277  06C6  0008               	return
  1278  06C7                     __end_of_vehiculo:
  1279                           
  1280                           	psect	text5
  1281  064A                     __ptext5:	
  1282 ;; *************** function _direccional *****************
  1283 ;; Defined at:
  1284 ;;		line 56 in file "./prototipos.h"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  op              2    0[COMMON] unsigned int 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		None
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         2       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0
  1301 ;;      Totals:         2       0       0       0       0
  1302 ;;Total ram usage:        2 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_probar_motores_mov
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312  064A                     _direccional:	
  1313                           ;psect for function _direccional
  1314                           
  1315  064A                     l868:	
  1316                           ;incstack = 0
  1317                           ; Regs used in _direccional: []
  1318                           
  1319                           
  1320                           ;./prototipos.h: 57:     if (op & 0b00010){
  1321  064A  1CF0               	btfss	direccional@op,1
  1322  064B  2E4D               	goto	u171
  1323  064C  2E4E               	goto	u170
  1324  064D                     u171:
  1325  064D  2E52               	goto	l39
  1326  064E                     u170:
  1327  064E                     l870:
  1328                           
  1329                           ;./prototipos.h: 58:         PORTAbits.RA0 = 1;
  1330  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1331  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0650  1405               	bsf	5,0	;volatile
  1333                           
  1334                           ;./prototipos.h: 59:         PORTAbits.RA1 = 0;
  1335  0651  1085               	bcf	5,1	;volatile
  1336  0652                     l39:	
  1337                           ;./prototipos.h: 60:     }
  1338                           
  1339                           
  1340                           ;./prototipos.h: 61:     if (op & 0b00100){
  1341  0652  1D70               	btfss	direccional@op,2
  1342  0653  2E55               	goto	u181
  1343  0654  2E56               	goto	u180
  1344  0655                     u181:
  1345  0655  2E5A               	goto	l40
  1346  0656                     u180:
  1347  0656                     l872:
  1348                           
  1349                           ;./prototipos.h: 62:         PORTAbits.RA0 = 0;
  1350  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0658  1005               	bcf	5,0	;volatile
  1353                           
  1354                           ;./prototipos.h: 63:         PORTAbits.RA1 = 1;
  1355  0659  1485               	bsf	5,1	;volatile
  1356  065A                     l40:	
  1357                           ;./prototipos.h: 64:     }
  1358                           
  1359                           
  1360                           ;./prototipos.h: 65:     if (op & 0b00001){
  1361  065A  1C70               	btfss	direccional@op,0
  1362  065B  2E5D               	goto	u191
  1363  065C  2E5E               	goto	u190
  1364  065D                     u191:
  1365  065D  2E62               	goto	l42
  1366  065E                     u190:
  1367  065E                     l874:
  1368                           
  1369                           ;./prototipos.h: 66:         PORTAbits.RA0 = 0;
  1370  065E  1283               	bcf	3,5	;RP0=0, select bank0
  1371  065F  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0660  1005               	bcf	5,0	;volatile
  1373                           
  1374                           ;./prototipos.h: 67:         PORTAbits.RA1 = 0;
  1375  0661  1085               	bcf	5,1	;volatile
  1376  0662                     l42:
  1377  0662  0008               	return
  1378  0663                     __end_of_direccional:
  1379  007E                     btemp	set	126	;btemp
  1380  007E                     wtemp0	set	126
  1381                           
  1382                           	psect	idloc
  1383                           
  1384                           ;Config register IDLOC0 @ 0x2000
  1385                           ;	unspecified, using default values
  1386  2000                     	org	8192
  1387  2000  3FFF               	dw	16383
  1388                           
  1389                           ;Config register IDLOC1 @ 0x2001
  1390                           ;	unspecified, using default values
  1391  2001                     	org	8193
  1392  2001  3FFF               	dw	16383
  1393                           
  1394                           ;Config register IDLOC2 @ 0x2002
  1395                           ;	unspecified, using default values
  1396  2002                     	org	8194
  1397  2002  3FFF               	dw	16383
  1398                           
  1399                           ;Config register IDLOC3 @ 0x2003
  1400                           ;	unspecified, using default values
  1401  2003                     	org	8195
  1402  2003  3FFF               	dw	16383
  1403                           
  1404                           	psect	config
  1405                           
  1406                           ;Config register CONFIG1 @ 0x2007
  1407                           ;	Oscillator Selection bits
  1408                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1409                           ;	Watchdog Timer Enable bit
  1410                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1411                           ;	Power-up Timer Enable bit
  1412                           ;	PWRTE = ON, PWRT enabled
  1413                           ;	RE3/MCLR pin function select bit
  1414                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1415                           ;	Code Protection bit
  1416                           ;	CP = OFF, Program memory code protection is disabled
  1417                           ;	Data Code Protection bit
  1418                           ;	CPD = OFF, Data memory code protection is disabled
  1419                           ;	Brown Out Reset Selection bits
  1420                           ;	BOREN = OFF, BOR disabled
  1421                           ;	Internal External Switchover bit
  1422                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1423                           ;	Fail-Safe Clock Monitor Enabled bit
  1424                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1425                           ;	Low Voltage Programming Enable bit
  1426                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1427                           ;	In-Circuit Debugger Mode bit
  1428                           ;	DEBUG = 0x1, unprogrammed default
  1429  2007                     	org	8199
  1430  2007  28E4               	dw	10468
  1431                           
  1432                           ;Config register CONFIG2 @ 0x2008
  1433                           ;	Brown-out Reset Selection bit
  1434                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1435                           ;	Flash Program Memory Self Write Enable bits
  1436                           ;	WRT = OFF, Write protection off
  1437  2008                     	org	8200
  1438  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    6
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_probar_servomotor
    _probar_servomotor->_posicionar_servo
    _probar_motores_mov->_direccional
    _probar_motores_mov->_vehiculo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2116
                        _direccional
                 _probar_motores_mov
                  _probar_servomotor
                           _vehiculo
 ---------------------------------------------------------------------------------
 (1) _probar_servomotor                                    3     3      0     394
                                              6 COMMON     3     3      0
                   _posicionar_servo
 ---------------------------------------------------------------------------------
 (2) _posicionar_servo                                     6     4      2     394
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _probar_motores_mov                                   3     3      0     860
                                              2 COMMON     3     3      0
                        _direccional
                           _vehiculo
 ---------------------------------------------------------------------------------
 (1) _vehiculo                                             2     0      2     490
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _direccional                                          2     0      2     370
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _direccional
   _probar_motores_mov
     _direccional
     _vehiculo
   _probar_servomotor
     _posicionar_servo
   _vehiculo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 02 18:53:09 2022

                         pc 0002                          l31 069E                          l40 065A  
                        l32 06A8                          l33 06B2                          l42 0662  
                        l34 06BC                          l36 06C6                          l45 07FB  
                        l54 0721                          l39 0652                          l71 071E  
                        l58 074A                          l68 0787                          l87 0690  
                        l88 0690                          __0 000D                          fsr 0004  
                       l900 076C                         l902 077A                         l920 07B0  
                       l912 0788                         l922 07CF                         l914 0791  
                       l930 06C7                         l860 06A2                         l924 07DC  
                       l916 079E                         l940 0715                         l932 06D4  
                       l870 064E                         l862 06AC                         l926 07E5  
                       l918 07A7                         l934 06DC                         l950 0674  
                       l942 0663                         l872 0656                         l864 06B6  
                       l856 0694                         l928 07EE                         l936 06F2  
                       l960 068B                         l952 0674                         l944 0669  
                       l874 065E                         l866 06C0                         l858 0698  
                       l890 073A                         l882 0724                         l938 06FF  
                       l954 0674                         l946 066C                         l868 064A  
                       l892 074E                         l884 072C                         l876 071F  
                       l956 067D                         l948 0673                         l894 0756  
                       l886 0732                         l958 0686                         l898 075C  
                       _RA2 002A                         _RA3 002B                         u120 0698  
                       u200 0787                         u121 0697                         u201 0786  
                       u130 06A2                         u131 06A1                         u140 06AC  
                       u141 06AB                         u205 0783                         u150 06B6  
                       u151 06B5                         u160 06C0                         u161 06BF  
                       u217 06CD                         u170 064E                         u171 064D  
                       u307 0770                         u227 06E2                         u180 0656  
                       u181 0655                         u317 0797                         u237 06F8  
                       u190 065E                         u191 065D                         u327 07B6  
                       u247 070E                         u337 07D5                         u257 0726  
                       u347 07F4                         u267 072E                         u277 0734  
                       __90 000B                         u287 0750                         u297 0758  
                      l1002 073F                        l1004 0761                        __180 0009  
__end_of_probar_motores_mov 07FC                        _main 0663                        btemp 007E  
                      start 0000                       ?_main 0070                       _ANSEL 0188  
                     _T1CON 0010                       _TMR1H 000F                       _TMR1L 000E  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     pclath 000A                       status 0003                       wtemp0 007E  
              __end_of__180 000B             __initialization 07FC     posicionar_servo@degrees 0070  
              __end_of_main 0694                      ??_main 0079           _probar_servomotor 06C7  
                    _TMR1ON 0080          ?_probar_servomotor 0070         ??_probar_servomotor 0076  
          __end_of_vehiculo 06C7   __end_of_probar_servomotor 071F     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                  __end_of__0 000F            _posicionar_servo 071F  
                __pmaintext 0663          _probar_motores_mov 0788         ?_probar_motores_mov 0070  
                __stringtab 0003        ??_probar_motores_mov 0072                   ?_vehiculo 0070  
                   __ptext1 06C7                     __ptext2 071F                     __ptext3 0788  
                   __ptext4 0694                     __ptext5 064A        end_of_initialization 07FC  
                ??_vehiculo 0072                   _PORTAbits 0005                   _PORTBbits 0006  
                 _PORTCbits 0007               ??_direccional 0072           posicionar_servo@i 0074  
  __end_of_posicionar_servo 0788         start_initialization 07FC                 __end_of__90 000D  
       __end_of_direccional 0663                   ___latbits 0002                   __pstrings 0003  
               _direccional 064A                  vehiculo@op 0070                 __stringbase 0008  
         ?_posicionar_servo 0070          ??_posicionar_servo 0072          __end_of__stringtab 0009  
                  _vehiculo 0694               direccional@op 0070                   stringcode 0003  
                  stringdir 0003                    stringtab 0003                ?_direccional 0070  
