

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 27 05:33:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F886 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0006                     _PORTBbits	set	6
   282  0007                     _PORTCbits	set	7
   283  0005                     _PORTAbits	set	5
   284  0087                     _TRISC	set	135
   285  0086                     _TRISB	set	134
   286  0085                     _TRISA	set	133
   287  0188                     _ANSEL	set	392
   288                           
   289                           	psect	cinit
   290  07FC                     start_initialization:	
   291                           ; #config settings
   292                           
   293  07FC                     __initialization:
   294  07FC                     end_of_initialization:	
   295                           ;End of C runtime variable initialization code
   296                           
   297  07FC                     __end_of__initialization:
   298  07FC  0183               	clrf	3
   299  07FD  120A  118A  2F1A   	ljmp	_main	;jump to C main() function
   300                           
   301                           	psect	cstackCOMMON
   302  0070                     __pcstackCOMMON:
   303  0070                     ?_vehiculo_adelante:
   304  0070                     ??_vehiculo_adelante:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_vehiculo_derecha:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ??_vehiculo_derecha:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_vehiculo_izquierda:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ??_vehiculo_izquierda:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_vehiculo_atras:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ??_vehiculo_atras:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_vehiculo_detener:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_vehiculo_detener:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_direccional:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_direccional_apagar:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_direccional_apagar:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_main:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     direccional@op:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 2 bytes @ 0x0
   348  0070                     	ds	2
   349  0072                     ??_direccional:
   350  0072                     ??_main:	
   351                           ; 1 bytes @ 0x2
   352                           
   353                           
   354                           ; 1 bytes @ 0x2
   355  0072                     	ds	3
   356  0075                     main@E1_old:
   357                           
   358                           ; 1 bytes @ 0x5
   359  0075                     	ds	1
   360  0076                     main@E2_old:
   361                           
   362                           ; 1 bytes @ 0x6
   363  0076                     	ds	1
   364  0077                     main@Encoder2:
   365                           
   366                           ; 2 bytes @ 0x7
   367  0077                     	ds	2
   368  0079                     main@Encoder1:
   369                           
   370                           ; 2 bytes @ 0x9
   371  0079                     	ds	2
   372  007B                     main@E1:
   373                           
   374                           ; 1 bytes @ 0xB
   375  007B                     	ds	1
   376  007C                     main@E2:
   377                           
   378                           ; 1 bytes @ 0xC
   379  007C                     	ds	1
   380                           
   381                           	psect	maintext
   382  071A                     __pmaintext:	
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 32 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;  Encoder1        2    9[COMMON] unsigned int 
   393 ;;  Encoder2        2    7[COMMON] unsigned int 
   394 ;;  E2              1   12[COMMON] _Bool 
   395 ;;  E1              1   11[COMMON] _Bool 
   396 ;;  E2_old          1    6[COMMON] _Bool 
   397 ;;  E1_old          1    5[COMMON] _Bool 
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : B00/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         8       0       0       0       0
   409 ;;      Temps:          3       0       0       0       0
   410 ;;      Totals:        11       0       0       0       0
   411 ;;Total ram usage:       11 bytes
   412 ;; Hardware stack levels required when called: 1
   413 ;; This function calls:
   414 ;;		_direccional
   415 ;;		_direccional_apagar
   416 ;;		_vehiculo_adelante
   417 ;;		_vehiculo_atras
   418 ;;		_vehiculo_derecha
   419 ;;		_vehiculo_detener
   420 ;;		_vehiculo_izquierda
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426  071A                     _main:	
   427                           ;psect for function _main
   428                           
   429  071A                     l729:	
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   432                           
   433                           
   434                           ;main.c: 34:     TRISA = 0b00000100;
   435  071A  3004               	movlw	4
   436  071B  1683               	bsf	3,5	;RP0=1, select bank1
   437  071C  1303               	bcf	3,6	;RP1=0, select bank1
   438  071D  0085               	movwf	5	;volatile
   439                           
   440                           ;main.c: 35:     TRISB = 0b00000011;
   441  071E  3003               	movlw	3
   442  071F  0086               	movwf	6	;volatile
   443  0720                     l731:
   444                           
   445                           ;main.c: 36:     ANSEL = 0x00;
   446  0720  1683               	bsf	3,5	;RP0=1, select bank3
   447  0721  1703               	bsf	3,6	;RP1=1, select bank3
   448  0722  0188               	clrf	8	;volatile
   449  0723                     l733:
   450                           
   451                           ;main.c: 37:     TRISC = 0x00;
   452  0723  1683               	bsf	3,5	;RP0=1, select bank1
   453  0724  1303               	bcf	3,6	;RP1=0, select bank1
   454  0725  0187               	clrf	7	;volatile
   455  0726                     l735:
   456                           
   457                           ;main.c: 39:     uint16_t Encoder1 = 0;
   458  0726  01F9               	clrf	main@Encoder1
   459  0727  01FA               	clrf	main@Encoder1+1
   460  0728                     l737:
   461                           
   462                           ;main.c: 40:     uint16_t Encoder2 = 0;
   463  0728  01F7               	clrf	main@Encoder2
   464  0729  01F8               	clrf	main@Encoder2+1
   465  072A                     l739:
   466                           
   467                           ;main.c: 42:     _Bool E1;;main.c: 43:     _Bool E1_old;;main.c: 44:     _Bool E2;;main.
      +                          c: 45:     _Bool E2_old;;main.c: 46:           PORTBbits.RB7 = 0;
   468  072A  1283               	bcf	3,5	;RP0=0, select bank0
   469  072B  1303               	bcf	3,6	;RP1=0, select bank0
   470  072C  1386               	bcf	6,7	;volatile
   471  072D                     l741:
   472                           
   473                           ;main.c: 47:         vehiculo_atras();
   474  072D  120A  118A  26EE  120A  118A  	fcall	_vehiculo_atras
   475  0732                     l743:
   476                           
   477                           ;main.c: 48:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   478  0732  3006               	movlw	6
   479  0733  00F4               	movwf	??_main+2
   480  0734  3013               	movlw	19
   481  0735  00F3               	movwf	??_main+1
   482  0736  30AD               	movlw	173
   483  0737  00F2               	movwf	??_main
   484  0738                     u177:
   485  0738  0BF2               	decfsz	??_main,f
   486  0739  2F38               	goto	u177
   487  073A  0BF3               	decfsz	??_main+1,f
   488  073B  2F38               	goto	u177
   489  073C  0BF4               	decfsz	??_main+2,f
   490  073D  2F38               	goto	u177
   491  073E  2F3F               	nop2
   492                           
   493                           ;main.c: 49:         vehiculo_derecha();
   494  073F  120A  118A  26F5  120A  118A  	fcall	_vehiculo_derecha
   495  0744                     l745:
   496                           
   497                           ;main.c: 50:                 direccional(1);
   498  0744  3001               	movlw	1
   499  0745  00F0               	movwf	direccional@op
   500  0746  3000               	movlw	0
   501  0747  00F1               	movwf	direccional@op+1
   502  0748  120A  118A  270A  120A  118A  	fcall	_direccional
   503                           
   504                           ;main.c: 51:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   505  074D  3006               	movlw	6
   506  074E  00F4               	movwf	??_main+2
   507  074F  3013               	movlw	19
   508  0750  00F3               	movwf	??_main+1
   509  0751  30AD               	movlw	173
   510  0752  00F2               	movwf	??_main
   511  0753                     u187:
   512  0753  0BF2               	decfsz	??_main,f
   513  0754  2F53               	goto	u187
   514  0755  0BF3               	decfsz	??_main+1,f
   515  0756  2F53               	goto	u187
   516  0757  0BF4               	decfsz	??_main+2,f
   517  0758  2F53               	goto	u187
   518  0759  2F5A               	nop2
   519  075A                     l747:
   520                           
   521                           ;main.c: 52:         vehiculo_izquierda();
   522  075A  120A  118A  2703  120A  118A  	fcall	_vehiculo_izquierda
   523                           
   524                           ;main.c: 53:                 direccional(0);
   525  075F  3000               	movlw	0
   526  0760  00F0               	movwf	direccional@op
   527  0761  00F1               	movwf	direccional@op+1
   528  0762  120A  118A  270A  120A  118A  	fcall	_direccional
   529  0767                     l749:
   530                           
   531                           ;main.c: 54:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   532  0767  3006               	movlw	6
   533  0768  00F4               	movwf	??_main+2
   534  0769  3013               	movlw	19
   535  076A  00F3               	movwf	??_main+1
   536  076B  30AD               	movlw	173
   537  076C  00F2               	movwf	??_main
   538  076D                     u197:
   539  076D  0BF2               	decfsz	??_main,f
   540  076E  2F6D               	goto	u197
   541  076F  0BF3               	decfsz	??_main+1,f
   542  0770  2F6D               	goto	u197
   543  0771  0BF4               	decfsz	??_main+2,f
   544  0772  2F6D               	goto	u197
   545  0773  2F74               	nop2
   546                           
   547                           ;main.c: 55:         vehiculo_detener();
   548  0774  120A  118A  26FC  120A  118A  	fcall	_vehiculo_detener
   549  0779                     l751:
   550                           
   551                           ;main.c: 56:        _delay((unsigned long)((1000)*(4000000/4000.0)));
   552  0779  3006               	movlw	6
   553  077A  00F4               	movwf	??_main+2
   554  077B  3013               	movlw	19
   555  077C  00F3               	movwf	??_main+1
   556  077D  30AD               	movlw	173
   557  077E  00F2               	movwf	??_main
   558  077F                     u207:
   559  077F  0BF2               	decfsz	??_main,f
   560  0780  2F7F               	goto	u207
   561  0781  0BF3               	decfsz	??_main+1,f
   562  0782  2F7F               	goto	u207
   563  0783  0BF4               	decfsz	??_main+2,f
   564  0784  2F7F               	goto	u207
   565  0785  2F86               	nop2
   566  0786                     l753:
   567                           
   568                           ;main.c: 57:         vehiculo_adelante();
   569  0786  120A  118A  26E7  120A  118A  	fcall	_vehiculo_adelante
   570  078B                     l755:
   571                           
   572                           ;main.c: 58:         direccional_apagar();
   573  078B  120A  118A  26E2  120A  118A  	fcall	_direccional_apagar
   574  0790                     l757:
   575                           
   576                           ;main.c: 63:         E1 = PORTBbits.RB1;
   577  0790  3000               	movlw	0
   578  0791  1283               	bcf	3,5	;RP0=0, select bank0
   579  0792  1303               	bcf	3,6	;RP1=0, select bank0
   580  0793  1886               	btfsc	6,1	;volatile
   581  0794  3001               	movlw	1
   582  0795  00FB               	movwf	main@E1
   583  0796                     l759:
   584                           
   585                           ;main.c: 64:         if ((E1_old != E1) & (E1 == 1)){
   586  0796  0875               	movf	main@E1_old,w
   587  0797  067B               	xorwf	main@E1,w
   588  0798  1903               	skipnz
   589  0799  2F9B               	goto	u101
   590  079A  2F9C               	goto	u100
   591  079B                     u101:
   592  079B  2FA7               	goto	l46
   593  079C                     u100:
   594  079C                     l761:
   595  079C  037B               	decf	main@E1,w
   596  079D  1D03               	btfss	3,2
   597  079E  2FA0               	goto	u111
   598  079F  2FA1               	goto	u110
   599  07A0                     u111:
   600  07A0  2FA7               	goto	l46
   601  07A1                     u110:
   602  07A1                     l763:
   603                           
   604                           ;main.c: 65:             Encoder1++;}
   605  07A1  3001               	movlw	1
   606  07A2  07F9               	addwf	main@Encoder1,f
   607  07A3  1803               	skipnc
   608  07A4  0AFA               	incf	main@Encoder1+1,f
   609  07A5  3000               	movlw	0
   610  07A6  07FA               	addwf	main@Encoder1+1,f
   611  07A7                     l46:
   612                           
   613                           ;main.c: 66:         E1_old = E1;
   614  07A7  087B               	movf	main@E1,w
   615  07A8  00F2               	movwf	??_main
   616  07A9  0872               	movf	??_main,w
   617  07AA  00F5               	movwf	main@E1_old
   618  07AB                     l765:
   619                           
   620                           ;main.c: 68:         if (Encoder1 == 1050)
   621  07AB  301A               	movlw	26
   622  07AC  0679               	xorwf	main@Encoder1,w
   623  07AD  3004               	movlw	4
   624  07AE  1903               	skipnz
   625  07AF  067A               	xorwf	main@Encoder1+1,w
   626  07B0  1D03               	btfss	3,2
   627  07B1  2FB3               	goto	u121
   628  07B2  2FB4               	goto	u120
   629  07B3                     u121:
   630  07B3  2FB5               	goto	l769
   631  07B4                     u120:
   632  07B4                     l767:
   633                           
   634                           ;main.c: 69:             PORTBbits.RB7 = 1;
   635  07B4  1786               	bsf	6,7	;volatile
   636  07B5                     l769:
   637                           
   638                           ;main.c: 71:         E2 = PORTBbits.RB0;
   639  07B5  3000               	movlw	0
   640  07B6  1806               	btfsc	6,0	;volatile
   641  07B7  3001               	movlw	1
   642  07B8  00FC               	movwf	main@E2
   643  07B9                     l771:
   644                           
   645                           ;main.c: 72:         if ((E2_old != E2) & (E2 == 1)){
   646  07B9  0876               	movf	main@E2_old,w
   647  07BA  067C               	xorwf	main@E2,w
   648  07BB  1903               	skipnz
   649  07BC  2FBE               	goto	u131
   650  07BD  2FBF               	goto	u130
   651  07BE                     u131:
   652  07BE  2FCA               	goto	l48
   653  07BF                     u130:
   654  07BF                     l773:
   655  07BF  037C               	decf	main@E2,w
   656  07C0  1D03               	btfss	3,2
   657  07C1  2FC3               	goto	u141
   658  07C2  2FC4               	goto	u140
   659  07C3                     u141:
   660  07C3  2FCA               	goto	l48
   661  07C4                     u140:
   662  07C4                     l775:
   663                           
   664                           ;main.c: 73:             Encoder2++;}
   665  07C4  3001               	movlw	1
   666  07C5  07F7               	addwf	main@Encoder2,f
   667  07C6  1803               	skipnc
   668  07C7  0AF8               	incf	main@Encoder2+1,f
   669  07C8  3000               	movlw	0
   670  07C9  07F8               	addwf	main@Encoder2+1,f
   671  07CA                     l48:
   672                           
   673                           ;main.c: 74:         E2_old = E2;
   674  07CA  087C               	movf	main@E2,w
   675  07CB  00F2               	movwf	??_main
   676  07CC  0872               	movf	??_main,w
   677  07CD  00F6               	movwf	main@E2_old
   678  07CE                     l777:
   679                           
   680                           ;main.c: 76:         if (Encoder2 == 1050)
   681  07CE  301A               	movlw	26
   682  07CF  0677               	xorwf	main@Encoder2,w
   683  07D0  3004               	movlw	4
   684  07D1  1903               	skipnz
   685  07D2  0678               	xorwf	main@Encoder2+1,w
   686  07D3  1D03               	btfss	3,2
   687  07D4  2FD6               	goto	u151
   688  07D5  2FD7               	goto	u150
   689  07D6                     u151:
   690  07D6  2FD8               	goto	l781
   691  07D7                     u150:
   692  07D7                     l779:
   693                           
   694                           ;main.c: 77:             PORTBbits.RB7 = 1;
   695  07D7  1786               	bsf	6,7	;volatile
   696  07D8                     l781:
   697                           
   698                           ;main.c: 79:     }while(Encoder1 != 2100);
   699  07D8  3034               	movlw	52
   700  07D9  0679               	xorwf	main@Encoder1,w
   701  07DA  3008               	movlw	8
   702  07DB  1903               	skipnz
   703  07DC  067A               	xorwf	main@Encoder1+1,w
   704  07DD  1D03               	btfss	3,2
   705  07DE  2FE0               	goto	u161
   706  07DF  2FE1               	goto	u160
   707  07E0                     u161:
   708  07E0  2F90               	goto	l757
   709  07E1                     u160:
   710  07E1                     l50:
   711                           
   712                           ;main.c: 80:     PORTBbits.RB7 = 0;
   713  07E1  1386               	bcf	6,7	;volatile
   714  07E2                     l783:
   715                           
   716                           ;main.c: 81:     vehiculo_detener();
   717  07E2  120A  118A  26FC  120A  118A  	fcall	_vehiculo_detener
   718  07E7                     l785:
   719                           
   720                           ;main.c: 82:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   721  07E7  3006               	movlw	6
   722  07E8  00F4               	movwf	??_main+2
   723  07E9  3013               	movlw	19
   724  07EA  00F3               	movwf	??_main+1
   725  07EB  30AD               	movlw	173
   726  07EC  00F2               	movwf	??_main
   727  07ED                     u217:
   728  07ED  0BF2               	decfsz	??_main,f
   729  07EE  2FED               	goto	u217
   730  07EF  0BF3               	decfsz	??_main+1,f
   731  07F0  2FED               	goto	u217
   732  07F1  0BF4               	decfsz	??_main+2,f
   733  07F2  2FED               	goto	u217
   734  07F3  2FF4               	nop2
   735  07F4                     l787:
   736                           
   737                           ;main.c: 83:     Encoder1 = 0;
   738  07F4  01F9               	clrf	main@Encoder1
   739  07F5  01FA               	clrf	main@Encoder1+1
   740  07F6                     l789:
   741                           
   742                           ;main.c: 84:     Encoder2 = 0;
   743  07F6  01F7               	clrf	main@Encoder2
   744  07F7  01F8               	clrf	main@Encoder2+1
   745                           
   746                           ;main.c: 85:     }
   747  07F8  2F90               	goto	l757
   748  07F9  120A  118A  2800   	ljmp	start
   749  07FC                     __end_of_main:
   750                           
   751                           	psect	text1
   752  0703                     __ptext1:	
   753 ;; *************** function _vehiculo_izquierda *****************
   754 ;; Defined at:
   755 ;;		line 27 in file "./prototipos.h"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		None
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0
   772 ;;      Totals:         0       0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used: 1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782  0703                     _vehiculo_izquierda:	
   783                           ;psect for function _vehiculo_izquierda
   784                           
   785  0703                     l651:	
   786                           ;incstack = 0
   787                           ; Regs used in _vehiculo_izquierda: []
   788                           
   789                           
   790                           ;./prototipos.h: 28:     PORTAbits.RA7 = 0;
   791  0703  1283               	bcf	3,5	;RP0=0, select bank0
   792  0704  1303               	bcf	3,6	;RP1=0, select bank0
   793  0705  1385               	bcf	5,7	;volatile
   794                           
   795                           ;./prototipos.h: 29:     PORTCbits.RC1 = 0;
   796  0706  1087               	bcf	7,1	;volatile
   797                           
   798                           ;./prototipos.h: 31:     PORTAbits.RA6 = 1;
   799  0707  1705               	bsf	5,6	;volatile
   800                           
   801                           ;./prototipos.h: 32:     PORTCbits.RC2 = 0;
   802  0708  1107               	bcf	7,2	;volatile
   803  0709                     l25:
   804  0709  0008               	return
   805  070A                     __end_of_vehiculo_izquierda:
   806                           
   807                           	psect	text2
   808  06FC                     __ptext2:	
   809 ;; *************** function _vehiculo_detener *****************
   810 ;; Defined at:
   811 ;;		line 43 in file "./prototipos.h"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		None
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0
   828 ;;      Totals:         0       0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838  06FC                     _vehiculo_detener:	
   839                           ;psect for function _vehiculo_detener
   840                           
   841  06FC                     l655:	
   842                           ;incstack = 0
   843                           ; Regs used in _vehiculo_detener: []
   844                           
   845                           
   846                           ;./prototipos.h: 44:     PORTAbits.RA7 = 0;
   847  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   848  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   849  06FE  1385               	bcf	5,7	;volatile
   850                           
   851                           ;./prototipos.h: 45:     PORTCbits.RC1 = 0;
   852  06FF  1087               	bcf	7,1	;volatile
   853                           
   854                           ;./prototipos.h: 47:     PORTAbits.RA6 = 0;
   855  0700  1305               	bcf	5,6	;volatile
   856                           
   857                           ;./prototipos.h: 48:     PORTCbits.RC2 = 0;
   858  0701  1107               	bcf	7,2	;volatile
   859  0702                     l31:
   860  0702  0008               	return
   861  0703                     __end_of_vehiculo_detener:
   862                           
   863                           	psect	text3
   864  06F5                     __ptext3:	
   865 ;; *************** function _vehiculo_derecha *****************
   866 ;; Defined at:
   867 ;;		line 19 in file "./prototipos.h"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		None
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894  06F5                     _vehiculo_derecha:	
   895                           ;psect for function _vehiculo_derecha
   896                           
   897  06F5                     l649:	
   898                           ;incstack = 0
   899                           ; Regs used in _vehiculo_derecha: []
   900                           
   901                           
   902                           ;./prototipos.h: 20:     PORTAbits.RA7 = 1;
   903  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   904  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   905  06F7  1785               	bsf	5,7	;volatile
   906                           
   907                           ;./prototipos.h: 21:     PORTCbits.RC1 = 0;
   908  06F8  1087               	bcf	7,1	;volatile
   909                           
   910                           ;./prototipos.h: 23:     PORTAbits.RA6 = 0;
   911  06F9  1305               	bcf	5,6	;volatile
   912                           
   913                           ;./prototipos.h: 24:     PORTCbits.RC2 = 0;
   914  06FA  1107               	bcf	7,2	;volatile
   915  06FB                     l22:
   916  06FB  0008               	return
   917  06FC                     __end_of_vehiculo_derecha:
   918                           
   919                           	psect	text4
   920  06EE                     __ptext4:	
   921 ;; *************** function _vehiculo_atras *****************
   922 ;; Defined at:
   923 ;;		line 35 in file "./prototipos.h"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		None
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950  06EE                     _vehiculo_atras:	
   951                           ;psect for function _vehiculo_atras
   952                           
   953  06EE                     l653:	
   954                           ;incstack = 0
   955                           ; Regs used in _vehiculo_atras: []
   956                           
   957                           
   958                           ;./prototipos.h: 36:     PORTAbits.RA7 = 0;
   959  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   960  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   961  06F0  1385               	bcf	5,7	;volatile
   962                           
   963                           ;./prototipos.h: 37:     PORTCbits.RC1 = 1;
   964  06F1  1487               	bsf	7,1	;volatile
   965                           
   966                           ;./prototipos.h: 39:     PORTAbits.RA6 = 0;
   967  06F2  1305               	bcf	5,6	;volatile
   968                           
   969                           ;./prototipos.h: 40:     PORTCbits.RC2 = 1;
   970  06F3  1507               	bsf	7,2	;volatile
   971  06F4                     l28:
   972  06F4  0008               	return
   973  06F5                     __end_of_vehiculo_atras:
   974                           
   975                           	psect	text5
   976  06E7                     __ptext5:	
   977 ;; *************** function _vehiculo_adelante *****************
   978 ;; Defined at:
   979 ;;		line 11 in file "./prototipos.h"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		None
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0
   996 ;;      Totals:         0       0       0       0       0
   997 ;;Total ram usage:        0 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006  06E7                     _vehiculo_adelante:	
  1007                           ;psect for function _vehiculo_adelante
  1008                           
  1009  06E7                     l647:	
  1010                           ;incstack = 0
  1011                           ; Regs used in _vehiculo_adelante: []
  1012                           
  1013                           
  1014                           ;./prototipos.h: 12:     PORTAbits.RA7 = 1;
  1015  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1016  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1017  06E9  1785               	bsf	5,7	;volatile
  1018                           
  1019                           ;./prototipos.h: 13:     PORTCbits.RC1 = 0;
  1020  06EA  1087               	bcf	7,1	;volatile
  1021                           
  1022                           ;./prototipos.h: 15:     PORTAbits.RA6 = 1;
  1023  06EB  1705               	bsf	5,6	;volatile
  1024                           
  1025                           ;./prototipos.h: 16:     PORTCbits.RC2 = 0;
  1026  06EC  1107               	bcf	7,2	;volatile
  1027  06ED                     l19:
  1028  06ED  0008               	return
  1029  06EE                     __end_of_vehiculo_adelante:
  1030                           
  1031                           	psect	text6
  1032  06E2                     __ptext6:	
  1033 ;; *************** function _direccional_apagar *****************
  1034 ;; Defined at:
  1035 ;;		line 62 in file "./prototipos.h"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		None
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used: 1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062  06E2                     _direccional_apagar:	
  1063                           ;psect for function _direccional_apagar
  1064                           
  1065  06E2                     l661:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _direccional_apagar: []
  1068                           
  1069                           
  1070                           ;./prototipos.h: 63:      PORTAbits.RA0 = 0;
  1071  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1072  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1073  06E4  1005               	bcf	5,0	;volatile
  1074                           
  1075                           ;./prototipos.h: 64:      PORTAbits.RA1 = 0;
  1076  06E5  1085               	bcf	5,1	;volatile
  1077  06E6                     l39:
  1078  06E6  0008               	return
  1079  06E7                     __end_of_direccional_apagar:
  1080                           
  1081                           	psect	text7
  1082  070A                     __ptext7:	
  1083 ;; *************** function _direccional *****************
  1084 ;; Defined at:
  1085 ;;		line 51 in file "./prototipos.h"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  op              2    0[COMMON] unsigned int 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         2       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0
  1102 ;;      Totals:         2       0       0       0       0
  1103 ;;Total ram usage:        2 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112  070A                     _direccional:	
  1113                           ;psect for function _direccional
  1114                           
  1115  070A                     l725:	
  1116                           ;incstack = 0
  1117                           ; Regs used in _direccional: [wreg+status,2+status,0]
  1118                           
  1119                           
  1120                           ;./prototipos.h: 52:     if (op == 1){
  1121  070A  0370               	decf	direccional@op,w
  1122  070B  0471               	iorwf	direccional@op+1,w
  1123  070C  1D03               	btfss	3,2
  1124  070D  2F0F               	goto	u91
  1125  070E  2F10               	goto	u90
  1126  070F                     u91:
  1127  070F  2F15               	goto	l34
  1128  0710                     u90:
  1129  0710                     l727:
  1130                           
  1131                           ;./prototipos.h: 53:         PORTAbits.RA0 = 1;
  1132  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0712  1405               	bsf	5,0	;volatile
  1135                           
  1136                           ;./prototipos.h: 54:         PORTAbits.RA1 = 0;
  1137  0713  1085               	bcf	5,1	;volatile
  1138                           
  1139                           ;./prototipos.h: 55:     }
  1140  0714  2F19               	goto	l36
  1141  0715                     l34:	
  1142                           ;./prototipos.h: 56:     else{
  1143                           
  1144                           
  1145                           ;./prototipos.h: 57:         PORTAbits.RA0 = 0;
  1146  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1148  0717  1005               	bcf	5,0	;volatile
  1149                           
  1150                           ;./prototipos.h: 58:         PORTAbits.RA1 = 1;
  1151  0718  1485               	bsf	5,1	;volatile
  1152  0719                     l36:
  1153  0719  0008               	return
  1154  071A                     __end_of_direccional:
  1155  007E                     btemp	set	126	;btemp
  1156  007E                     wtemp0	set	126
  1157                           
  1158                           	psect	idloc
  1159                           
  1160                           ;Config register IDLOC0 @ 0x2000
  1161                           ;	unspecified, using default values
  1162  2000                     	org	8192
  1163  2000  3FFF               	dw	16383
  1164                           
  1165                           ;Config register IDLOC1 @ 0x2001
  1166                           ;	unspecified, using default values
  1167  2001                     	org	8193
  1168  2001  3FFF               	dw	16383
  1169                           
  1170                           ;Config register IDLOC2 @ 0x2002
  1171                           ;	unspecified, using default values
  1172  2002                     	org	8194
  1173  2002  3FFF               	dw	16383
  1174                           
  1175                           ;Config register IDLOC3 @ 0x2003
  1176                           ;	unspecified, using default values
  1177  2003                     	org	8195
  1178  2003  3FFF               	dw	16383
  1179                           
  1180                           	psect	config
  1181                           
  1182                           ;Config register CONFIG1 @ 0x2007
  1183                           ;	Oscillator Selection bits
  1184                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1185                           ;	Watchdog Timer Enable bit
  1186                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1187                           ;	Power-up Timer Enable bit
  1188                           ;	PWRTE = ON, PWRT enabled
  1189                           ;	RE3/MCLR pin function select bit
  1190                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1191                           ;	Code Protection bit
  1192                           ;	CP = OFF, Program memory code protection is disabled
  1193                           ;	Data Code Protection bit
  1194                           ;	CPD = OFF, Data memory code protection is disabled
  1195                           ;	Brown Out Reset Selection bits
  1196                           ;	BOREN = OFF, BOR disabled
  1197                           ;	Internal External Switchover bit
  1198                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1199                           ;	Fail-Safe Clock Monitor Enabled bit
  1200                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1201                           ;	Low Voltage Programming Enable bit
  1202                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1203                           ;	In-Circuit Debugger Mode bit
  1204                           ;	DEBUG = 0x1, unprogrammed default
  1205  2007                     	org	8199
  1206  2007  28E4               	dw	10468
  1207                           
  1208                           ;Config register CONFIG2 @ 0x2008
  1209                           ;	Brown-out Reset Selection bit
  1210                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1211                           ;	Flash Program Memory Self Write Enable bits
  1212                           ;	WRT = OFF, Write protection off
  1213  2008                     	org	8200
  1214  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_direccional

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     426
                                              2 COMMON    11    11      0
                        _direccional
                 _direccional_apagar
                  _vehiculo_adelante
                     _vehiculo_atras
                   _vehiculo_derecha
                   _vehiculo_detener
                 _vehiculo_izquierda
 ---------------------------------------------------------------------------------
 (1) _vehiculo_izquierda                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vehiculo_detener                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vehiculo_derecha                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vehiculo_atras                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vehiculo_adelante                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _direccional_apagar                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _direccional                                          2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _direccional
   _direccional_apagar
   _vehiculo_adelante
   _vehiculo_atras
   _vehiculo_derecha
   _vehiculo_detener
   _vehiculo_izquierda

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 27 05:33:25 2022

          ??_vehiculo_atras 0070                          l22 06FB                          l31 0702  
                        l25 0709                          l34 0715                          l50 07E1  
                        l19 06ED                          l36 0719                          l28 06F4  
                        l46 07A7                          l39 06E6                          l48 07CA  
                        u90 0710                          u91 070F                main@Encoder1 0079  
              main@Encoder2 0077                         l651 0703                         l731 0720  
                       l725 070A                         l661 06E2                         l653 06EE  
                       l741 072D                         l733 0723                         l727 0710  
                       l647 06E7                         l655 06FC                         l751 0779  
                       l743 0732                         l735 0726                         l649 06F5  
                       l761 079C                         l753 0786                         l745 0744  
                       l737 0728                         l729 071A                         l771 07B9  
                       l763 07A1                         l755 078B                         l747 075A  
                       l739 072A                         l781 07D8                         l773 07BF  
                       l765 07AB                         l757 0790                         l749 0767  
                       l783 07E2                         l775 07C4                         l767 07B4  
                       l759 0796                         l785 07E7                         l777 07CE  
                       l769 07B5                         l787 07F4                         l779 07D7  
                       l789 07F6                         u100 079C                         u101 079B  
                       u110 07A1                         u111 07A0                         u120 07B4  
                       u121 07B3                         u130 07BF                         u131 07BE  
                       u140 07C4                         u141 07C3                         u150 07D7  
                       u151 07D6                         u207 077F                         u160 07E1  
                       u217 07ED                         u161 07E0                         u177 0738  
                       u187 0753                         u197 076D           ?_vehiculo_derecha 0070  
         ?_vehiculo_detener 0070           _vehiculo_adelante 06E7          ??_vehiculo_derecha 0070  
        ??_vehiculo_detener 0070          ?_vehiculo_adelante 0070         ??_vehiculo_adelante 0070  
                      _main 071A                        btemp 007E                        start 0000  
 __end_of_vehiculo_adelante 06EE                       ?_main 0070                       _ANSEL 0188  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     status 0003                       wtemp0 007E             __initialization 07FC  
              __end_of_main 07FC                      ??_main 0072          _vehiculo_izquierda 0703  
       ?_vehiculo_izquierda 0070        ??_vehiculo_izquierda 0070                      main@E1 007B  
                    main@E2 007C  __end_of_direccional_apagar 06E7     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                  __pmaintext 071A                     __ptext1 0703  
                   __ptext2 06FC                     __ptext3 06F5                     __ptext4 06EE  
                   __ptext5 06E7                     __ptext6 06E2                     __ptext7 070A  
      end_of_initialization 07FC                   _PORTAbits 0005                   _PORTBbits 0006  
                 _PORTCbits 0007                  main@E1_old 0075                  main@E2_old 0076  
             ??_direccional 0072            _vehiculo_derecha 06F5            _vehiculo_detener 06FC  
        _direccional_apagar 06E2         ?_direccional_apagar 0070         start_initialization 07FC  
      ??_direccional_apagar 0070         __end_of_direccional 071A                   ___latbits 0002  
            _vehiculo_atras 06EE      __end_of_vehiculo_atras 06F5                 _direccional 070A  
  __end_of_vehiculo_derecha 06FC    __end_of_vehiculo_detener 0703             ?_vehiculo_atras 0070  
__end_of_vehiculo_izquierda 070A               direccional@op 0070                ?_direccional 0070  
