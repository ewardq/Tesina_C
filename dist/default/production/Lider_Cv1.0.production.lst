

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 19 11:50:21 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F886 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  008F                     	;# 
   166  0090                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0093                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0097                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  0105                     	;# 
   185  0107                     	;# 
   186  0108                     	;# 
   187  0109                     	;# 
   188  010C                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  0185                     	;# 
   194  0187                     	;# 
   195  0188                     	;# 
   196  0189                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  000E                     	;# 
   214  000F                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0013                     	;# 
   219  0014                     	;# 
   220  0015                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001B                     	;# 
   229  001C                     	;# 
   230  001D                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  0081                     	;# 
   234  0085                     	;# 
   235  0086                     	;# 
   236  0087                     	;# 
   237  0089                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  008E                     	;# 
   241  008F                     	;# 
   242  0090                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0093                     	;# 
   247  0093                     	;# 
   248  0094                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  0105                     	;# 
   261  0107                     	;# 
   262  0108                     	;# 
   263  0109                     	;# 
   264  010C                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  010F                     	;# 
   269  0185                     	;# 
   270  0187                     	;# 
   271  0188                     	;# 
   272  0189                     	;# 
   273  018C                     	;# 
   274  018D                     	;# 
   275  0000                     	;# 
   276  0001                     	;# 
   277  0002                     	;# 
   278  0003                     	;# 
   279  0004                     	;# 
   280  0005                     	;# 
   281  0006                     	;# 
   282  0007                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000D                     	;# 
   288  000E                     	;# 
   289  000E                     	;# 
   290  000F                     	;# 
   291  0010                     	;# 
   292  0011                     	;# 
   293  0012                     	;# 
   294  0013                     	;# 
   295  0014                     	;# 
   296  0015                     	;# 
   297  0015                     	;# 
   298  0016                     	;# 
   299  0017                     	;# 
   300  0018                     	;# 
   301  0019                     	;# 
   302  001A                     	;# 
   303  001B                     	;# 
   304  001B                     	;# 
   305  001C                     	;# 
   306  001D                     	;# 
   307  001E                     	;# 
   308  001F                     	;# 
   309  0081                     	;# 
   310  0085                     	;# 
   311  0086                     	;# 
   312  0087                     	;# 
   313  0089                     	;# 
   314  008C                     	;# 
   315  008D                     	;# 
   316  008E                     	;# 
   317  008F                     	;# 
   318  0090                     	;# 
   319  0091                     	;# 
   320  0092                     	;# 
   321  0093                     	;# 
   322  0093                     	;# 
   323  0093                     	;# 
   324  0094                     	;# 
   325  0095                     	;# 
   326  0096                     	;# 
   327  0097                     	;# 
   328  0098                     	;# 
   329  0099                     	;# 
   330  009A                     	;# 
   331  009B                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  009F                     	;# 
   336  0105                     	;# 
   337  0107                     	;# 
   338  0108                     	;# 
   339  0109                     	;# 
   340  010C                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  010F                     	;# 
   345  0185                     	;# 
   346  0187                     	;# 
   347  0188                     	;# 
   348  0189                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  0007                     _PORTC	set	7
   352  0007                     _PORTCbits	set	7
   353  0006                     _PORTB	set	6
   354  0086                     _TRISB	set	134
   355  0087                     _TRISC	set	135
   356                           
   357                           	psect	cinit
   358  07FC                     start_initialization:	
   359                           ; #config settings
   360                           
   361  07FC                     __initialization:
   362  07FC                     end_of_initialization:	
   363                           ;End of C runtime variable initialization code
   364                           
   365  07FC                     __end_of__initialization:
   366  07FC  0183               	clrf	3
   367  07FD  120A  118A  2F8D   	ljmp	_main	;jump to C main() function
   368                           
   369                           	psect	cstackCOMMON
   370  0070                     __pcstackCOMMON:
   371  0070                     ?_motor:
   372  0070                     ??_motor:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_main:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ??_main:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  0070                     	ds	3
   384  0073                     main@A_old:
   385                           
   386                           ; 1 bytes @ 0x3
   387  0073                     	ds	1
   388  0074                     main@Encoder1:
   389                           
   390                           ; 2 bytes @ 0x4
   391  0074                     	ds	2
   392  0076                     main@LED:
   393                           
   394                           ; 1 bytes @ 0x6
   395  0076                     	ds	1
   396  0077                     main@A:
   397                           
   398                           ; 1 bytes @ 0x7
   399  0077                     	ds	1
   400                           
   401                           	psect	maintext
   402  078D                     __pmaintext:	
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 30 in file "main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  Encoder1        2    4[COMMON] unsigned int 
   413 ;;  Encoder2        2    0        unsigned int 
   414 ;;  A               1    7[COMMON] _Bool 
   415 ;;  LED             1    6[COMMON] char 
   416 ;;  A_old           1    3[COMMON] _Bool 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         5       0       0       0       0
   428 ;;      Temps:          3       0       0       0       0
   429 ;;      Totals:         8       0       0       0       0
   430 ;;Total ram usage:        8 bytes
   431 ;; Hardware stack levels required when called: 1
   432 ;; This function calls:
   433 ;;		_motor
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439  078D                     _main:	
   440                           ;psect for function _main
   441                           
   442  078D                     l631:	
   443                           ;incstack = 0
   444                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   445                           
   446                           
   447                           ;main.c: 31:     int8_t LED = 1;
   448  078D  01F6               	clrf	main@LED
   449  078E  0AF6               	incf	main@LED,f
   450  078F                     l633:
   451                           
   452                           ;main.c: 32:     TRISC = 0b11110000;
   453  078F  30F0               	movlw	240
   454  0790  1683               	bsf	3,5	;RP0=1, select bank1
   455  0791  1303               	bcf	3,6	;RP1=0, select bank1
   456  0792  0087               	movwf	7	;volatile
   457  0793                     l635:
   458                           
   459                           ;main.c: 33:     TRISB = 0x00;
   460  0793  0186               	clrf	6	;volatile
   461  0794                     l637:
   462                           
   463                           ;main.c: 35:     uint16_t Encoder1 = 0;
   464  0794  01F4               	clrf	main@Encoder1
   465  0795  01F5               	clrf	main@Encoder1+1
   466  0796                     l639:
   467  0796                     l641:
   468                           
   469                           ;main.c: 38:     _Bool A;;main.c: 39:     _Bool A_old;;main.c: 41:     PORTB = PORTB | L
      +                          ED;
   470  0796  1283               	bcf	3,5	;RP0=0, select bank0
   471  0797  1303               	bcf	3,6	;RP1=0, select bank0
   472  0798  0806               	movf	6,w	;volatile
   473  0799  3801               	iorlw	1
   474  079A  0086               	movwf	6	;volatile
   475  079B                     l643:
   476                           
   477                           ;main.c: 44:     motor();
   478  079B  120A  118A  2784  120A  118A  	fcall	_motor
   479  07A0                     l645:
   480                           
   481                           ;main.c: 54:     A = PORTCbits.RC5 ^ PORTCbits.RC4;
   482  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   483  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   484  07A2  1A07               	btfsc	7,4	;volatile
   485  07A3  2FA5               	goto	u11
   486  07A4  2FA7               	goto	u10
   487  07A5                     u11:
   488  07A5  3001               	movlw	1
   489  07A6  2FA8               	goto	u12
   490  07A7                     u10:
   491  07A7  3000               	movlw	0
   492  07A8                     u12:
   493  07A8  00F0               	movwf	??_main
   494  07A9  1A87               	btfsc	7,5	;volatile
   495  07AA  2FAC               	goto	u21
   496  07AB  2FAE               	goto	u20
   497  07AC                     u21:
   498  07AC  3001               	movlw	1
   499  07AD  2FAF               	goto	u22
   500  07AE                     u20:
   501  07AE  3000               	movlw	0
   502  07AF                     u22:
   503  07AF  0670               	xorwf	??_main,w
   504  07B0  1D03               	skipz
   505  07B1  2FB3               	goto	u31
   506  07B2  2FB5               	goto	u30
   507  07B3                     u31:
   508  07B3  3001               	movlw	1
   509  07B4  2FB6               	goto	u40
   510  07B5                     u30:
   511  07B5  3000               	movlw	0
   512  07B6                     u40:
   513  07B6  00F1               	movwf	??_main+1
   514  07B7  0871               	movf	??_main+1,w
   515  07B8  00F7               	movwf	main@A
   516  07B9                     l647:
   517                           
   518                           ;main.c: 56:     if ((A_old != A) & (A == 1)){
   519  07B9  0873               	movf	main@A_old,w
   520  07BA  0677               	xorwf	main@A,w
   521  07BB  1903               	skipnz
   522  07BC  2FBE               	goto	u51
   523  07BD  2FBF               	goto	u50
   524  07BE                     u51:
   525  07BE  2FCA               	goto	l19
   526  07BF                     u50:
   527  07BF                     l649:
   528  07BF  0377               	decf	main@A,w
   529  07C0  1D03               	btfss	3,2
   530  07C1  2FC3               	goto	u61
   531  07C2  2FC4               	goto	u60
   532  07C3                     u61:
   533  07C3  2FCA               	goto	l19
   534  07C4                     u60:
   535  07C4                     l651:
   536                           
   537                           ;main.c: 57:         Encoder1++;}
   538  07C4  3001               	movlw	1
   539  07C5  07F4               	addwf	main@Encoder1,f
   540  07C6  1803               	skipnc
   541  07C7  0AF5               	incf	main@Encoder1+1,f
   542  07C8  3000               	movlw	0
   543  07C9  07F5               	addwf	main@Encoder1+1,f
   544  07CA                     l19:
   545                           
   546                           ;main.c: 58:     A_old = A;
   547  07CA  0877               	movf	main@A,w
   548  07CB  00F0               	movwf	??_main
   549  07CC  0870               	movf	??_main,w
   550  07CD  00F3               	movwf	main@A_old
   551  07CE                     l653:
   552                           
   553                           ;main.c: 60:     if(Encoder1 == 2100)
   554  07CE  3034               	movlw	52
   555  07CF  0674               	xorwf	main@Encoder1,w
   556  07D0  3008               	movlw	8
   557  07D1  1903               	skipnz
   558  07D2  0675               	xorwf	main@Encoder1+1,w
   559  07D3  1D03               	btfss	3,2
   560  07D4  2FD6               	goto	u71
   561  07D5  2FD7               	goto	u70
   562  07D6                     u71:
   563  07D6  2FDA               	goto	l20
   564  07D7                     u70:
   565  07D7                     l655:
   566                           
   567                           ;main.c: 61:         PORTB = PORTB | LED;
   568  07D7  0876               	movf	main@LED,w
   569  07D8  0406               	iorwf	6,w	;volatile
   570  07D9  0086               	movwf	6	;volatile
   571  07DA                     l20:
   572                           
   573                           ;main.c: 63:     }while(Encoder1 != 2100);
   574  07DA  3034               	movlw	52
   575  07DB  0674               	xorwf	main@Encoder1,w
   576  07DC  3008               	movlw	8
   577  07DD  1903               	skipnz
   578  07DE  0675               	xorwf	main@Encoder1+1,w
   579  07DF  1D03               	btfss	3,2
   580  07E0  2FE2               	goto	u81
   581  07E1  2FE3               	goto	u80
   582  07E2                     u81:
   583  07E2  2FA0               	goto	l645
   584  07E3                     u80:
   585  07E3                     l21:
   586                           
   587                           ;main.c: 64:     PORTCbits.RC1 = 0;
   588  07E3  1087               	bcf	7,1	;volatile
   589  07E4                     l657:
   590                           
   591                           ;main.c: 65:     _delay((unsigned long)((500)*(4000000/4000.0)));
   592  07E4  3003               	movlw	3
   593  07E5  00F2               	movwf	??_main+2
   594  07E6  308A               	movlw	138
   595  07E7  00F1               	movwf	??_main+1
   596  07E8  3055               	movlw	85
   597  07E9  00F0               	movwf	??_main
   598  07EA                     u97:
   599  07EA  0BF0               	decfsz	??_main,f
   600  07EB  2FEA               	goto	u97
   601  07EC  0BF1               	decfsz	??_main+1,f
   602  07ED  2FEA               	goto	u97
   603  07EE  0BF2               	decfsz	??_main+2,f
   604  07EF  2FEA               	goto	u97
   605  07F0  2FF1               	nop2
   606  07F1                     l659:
   607                           
   608                           ;main.c: 66:     PORTB = PORTB & ~LED;
   609  07F1  0976               	comf	main@LED,w
   610  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   611  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   612  07F4  0506               	andwf	6,w	;volatile
   613  07F5  0086               	movwf	6	;volatile
   614  07F6                     l661:
   615                           
   616                           ;main.c: 67:     Encoder1 = 0;
   617  07F6  01F4               	clrf	main@Encoder1
   618  07F7  01F5               	clrf	main@Encoder1+1
   619                           
   620                           ;main.c: 68:     }
   621  07F8  2F9B               	goto	l643
   622  07F9  120A  118A  2800   	ljmp	start
   623  07FC                     __end_of_main:
   624                           
   625                           	psect	text1
   626  0784                     __ptext1:	
   627 ;; *************** function _motor *****************
   628 ;; Defined at:
   629 ;;		line 4 in file "motor.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  mask            1    0        char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656  0784                     _motor:	
   657                           ;psect for function _motor
   658                           
   659  0784                     l623:	
   660                           ;incstack = 0
   661                           ; Regs used in _motor: [wreg+status,2+status,0]
   662                           
   663  0784                     l625:
   664                           
   665                           ;motor.c: 6:     PORTC = PORTC | mask;
   666  0784  1283               	bcf	3,5	;RP0=0, select bank0
   667  0785  1303               	bcf	3,6	;RP1=0, select bank0
   668  0786  0807               	movf	7,w	;volatile
   669  0787  3802               	iorlw	2
   670  0788  0087               	movwf	7	;volatile
   671  0789                     l627:
   672  0789                     l629:
   673                           
   674                           ;motor.c: 8:     PORTC = PORTC & ~mask;
   675  0789  0807               	movf	7,w	;volatile
   676  078A  39FE               	andlw	254
   677  078B  0087               	movwf	7	;volatile
   678  078C                     l28:
   679  078C  0008               	return
   680  078D                     __end_of_motor:
   681  007E                     btemp	set	126	;btemp
   682  007E                     wtemp0	set	126
   683                           
   684                           	psect	idloc
   685                           
   686                           ;Config register IDLOC0 @ 0x2000
   687                           ;	unspecified, using default values
   688  2000                     	org	8192
   689  2000  3FFF               	dw	16383
   690                           
   691                           ;Config register IDLOC1 @ 0x2001
   692                           ;	unspecified, using default values
   693  2001                     	org	8193
   694  2001  3FFF               	dw	16383
   695                           
   696                           ;Config register IDLOC2 @ 0x2002
   697                           ;	unspecified, using default values
   698  2002                     	org	8194
   699  2002  3FFF               	dw	16383
   700                           
   701                           ;Config register IDLOC3 @ 0x2003
   702                           ;	unspecified, using default values
   703  2003                     	org	8195
   704  2003  3FFF               	dw	16383
   705                           
   706                           	psect	config
   707                           
   708                           ;Config register CONFIG1 @ 0x2007
   709                           ;	Oscillator Selection bits
   710                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   711                           ;	Watchdog Timer Enable bit
   712                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   713                           ;	Power-up Timer Enable bit
   714                           ;	PWRTE = ON, PWRT enabled
   715                           ;	RE3/MCLR pin function select bit
   716                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   717                           ;	Code Protection bit
   718                           ;	CP = OFF, Program memory code protection is disabled
   719                           ;	Data Code Protection bit
   720                           ;	CPD = OFF, Data memory code protection is disabled
   721                           ;	Brown Out Reset Selection bits
   722                           ;	BOREN = OFF, BOR disabled
   723                           ;	Internal External Switchover bit
   724                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   725                           ;	Fail-Safe Clock Monitor Enabled bit
   726                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   727                           ;	Low Voltage Programming Enable bit
   728                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   729                           ;	In-Circuit Debugger Mode bit
   730                           ;	DEBUG = 0x1, unprogrammed default
   731  2007                     	org	8199
   732  2007  28E4               	dw	10468
   733                           
   734                           ;Config register CONFIG2 @ 0x2008
   735                           ;	Brown-out Reset Selection bit
   736                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   737                           ;	Flash Program Memory Self Write Enable bits
   738                           ;	WRT = OFF, Write protection off
   739  2008                     	org	8200
   740  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     165
                                              0 COMMON     8     8      0
                              _motor
 ---------------------------------------------------------------------------------
 (1) _motor                                                1     1      0      30
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _motor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 19 11:50:21 2022

                     l20 07DA                       l21 07E3                       l19 07CA  
                     l28 078C                       u10 07A7                       u11 07A5  
                     u20 07AE                       u12 07A8                       u21 07AC  
                     u30 07B5                       u22 07AF                       u31 07B3  
                     u40 07B6                       u50 07BF                       u51 07BE  
                     u60 07C4                       u61 07C3                       u70 07D7  
                     u71 07D6                       u80 07E3                       u81 07E2  
                     u97 07EA             main@Encoder1 0074                      l623 0784  
                    l631 078D                      l625 0784                      l641 0796  
                    l633 078F                      l627 0789                      l651 07C4  
                    l643 079B                      l635 0793                      l629 0789  
                    l661 07F6                      l653 07CE                      l645 07A0  
                    l637 0794                      l655 07D7                      l647 07B9  
                    l639 0796                      l657 07E4                      l649 07BF  
                    l659 07F1                     _main 078D                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _motor 0784                    main@A 0077                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070                   ?_motor 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_motor 078D                  ??_motor 0070  
             __pmaintext 078D                  __ptext1 0784                  main@LED 0076  
   end_of_initialization 07FC                _PORTCbits 0007      start_initialization 07FC  
              ___latbits 0002                main@A_old 0073  
