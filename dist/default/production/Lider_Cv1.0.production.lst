

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 27 08:35:43 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F886 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0089                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  008F                     	;# 
   167  0090                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  0105                     	;# 
   186  0107                     	;# 
   187  0108                     	;# 
   188  0109                     	;# 
   189  010C                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  0185                     	;# 
   195  0187                     	;# 
   196  0188                     	;# 
   197  0189                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001D                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  0081                     	;# 
   235  0085                     	;# 
   236  0086                     	;# 
   237  0087                     	;# 
   238  0089                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  008E                     	;# 
   242  008F                     	;# 
   243  0090                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0093                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  0105                     	;# 
   262  0107                     	;# 
   263  0108                     	;# 
   264  0109                     	;# 
   265  010C                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010E                     	;# 
   269  010F                     	;# 
   270  0185                     	;# 
   271  0187                     	;# 
   272  0188                     	;# 
   273  0189                     	;# 
   274  018C                     	;# 
   275  018D                     	;# 
   276  0000                     	;# 
   277  0001                     	;# 
   278  0002                     	;# 
   279  0003                     	;# 
   280  0004                     	;# 
   281  0005                     	;# 
   282  0006                     	;# 
   283  0007                     	;# 
   284  0009                     	;# 
   285  000A                     	;# 
   286  000B                     	;# 
   287  000C                     	;# 
   288  000D                     	;# 
   289  000E                     	;# 
   290  000E                     	;# 
   291  000F                     	;# 
   292  0010                     	;# 
   293  0011                     	;# 
   294  0012                     	;# 
   295  0013                     	;# 
   296  0014                     	;# 
   297  0015                     	;# 
   298  0015                     	;# 
   299  0016                     	;# 
   300  0017                     	;# 
   301  0018                     	;# 
   302  0019                     	;# 
   303  001A                     	;# 
   304  001B                     	;# 
   305  001B                     	;# 
   306  001C                     	;# 
   307  001D                     	;# 
   308  001E                     	;# 
   309  001F                     	;# 
   310  0081                     	;# 
   311  0085                     	;# 
   312  0086                     	;# 
   313  0087                     	;# 
   314  0089                     	;# 
   315  008C                     	;# 
   316  008D                     	;# 
   317  008E                     	;# 
   318  008F                     	;# 
   319  0090                     	;# 
   320  0091                     	;# 
   321  0092                     	;# 
   322  0093                     	;# 
   323  0093                     	;# 
   324  0093                     	;# 
   325  0094                     	;# 
   326  0095                     	;# 
   327  0096                     	;# 
   328  0097                     	;# 
   329  0098                     	;# 
   330  0099                     	;# 
   331  009A                     	;# 
   332  009B                     	;# 
   333  009C                     	;# 
   334  009D                     	;# 
   335  009E                     	;# 
   336  009F                     	;# 
   337  0105                     	;# 
   338  0107                     	;# 
   339  0108                     	;# 
   340  0109                     	;# 
   341  010C                     	;# 
   342  010C                     	;# 
   343  010D                     	;# 
   344  010E                     	;# 
   345  010F                     	;# 
   346  0185                     	;# 
   347  0187                     	;# 
   348  0188                     	;# 
   349  0189                     	;# 
   350  018C                     	;# 
   351  018D                     	;# 
   352  0007                     _PORTCbits	set	7
   353  0005                     _PORTAbits	set	5
   354  0087                     _TRISC	set	135
   355  0086                     _TRISB	set	134
   356  0085                     _TRISA	set	133
   357  0188                     _ANSEL	set	392
   358                           
   359                           	psect	cinit
   360  07FC                     start_initialization:	
   361                           ; #config settings
   362                           
   363  07FC                     __initialization:
   364  07FC                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  07FC                     __end_of__initialization:
   368  07FC  0183               	clrf	3
   369  07FD  120A  118A  2F49   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	cstackCOMMON
   372  0070                     __pcstackCOMMON:
   373  0070                     ?_delay_us:
   374  0070                     ?_main:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     delay_us@microseconds:	
   378                           ; 1 bytes @ 0x0
   379                           
   380                           
   381                           ; 2 bytes @ 0x0
   382  0070                     	ds	2
   383  0072                     ??_delay_us:
   384  0072                     ?_servo_delay_us:	
   385                           ; 1 bytes @ 0x2
   386                           
   387  0072                     servo_delay_us@delay:	
   388                           ; 1 bytes @ 0x2
   389                           
   390                           
   391                           ; 2 bytes @ 0x2
   392  0072                     	ds	2
   393  0074                     ??_servo_delay_us:
   394                           
   395                           ; 1 bytes @ 0x4
   396  0074                     	ds	2
   397  0076                     ??_main:
   398                           
   399                           ; 1 bytes @ 0x6
   400  0076                     	ds	3
   401                           
   402                           	psect	maintext
   403  0749                     __pmaintext:	
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 32 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : B00/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0
   425 ;;      Temps:          3       0       0       0       0
   426 ;;      Totals:         3       0       0       0       0
   427 ;;Total ram usage:        3 bytes
   428 ;; Hardware stack levels required when called: 2
   429 ;; This function calls:
   430 ;;		_servo_delay_us
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436  0749                     _main:	
   437                           ;psect for function _main
   438                           
   439  0749                     l724:	
   440                           ;incstack = 0
   441                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   442                           
   443                           
   444                           ;main.c: 34:     TRISA = 0b00000100;
   445  0749  3004               	movlw	4
   446  074A  1683               	bsf	3,5	;RP0=1, select bank1
   447  074B  1303               	bcf	3,6	;RP1=0, select bank1
   448  074C  0085               	movwf	5	;volatile
   449                           
   450                           ;main.c: 35:     TRISB = 0b00000011;
   451  074D  3003               	movlw	3
   452  074E  0086               	movwf	6	;volatile
   453  074F                     l726:
   454                           
   455                           ;main.c: 36:     ANSEL = 0x00;
   456  074F  1683               	bsf	3,5	;RP0=1, select bank3
   457  0750  1703               	bsf	3,6	;RP1=1, select bank3
   458  0751  0188               	clrf	8	;volatile
   459  0752                     l728:
   460                           
   461                           ;main.c: 37:     TRISC = 0x00;
   462  0752  1683               	bsf	3,5	;RP0=1, select bank1
   463  0753  1303               	bcf	3,6	;RP1=0, select bank1
   464  0754  0187               	clrf	7	;volatile
   465  0755                     l730:
   466                           
   467                           ;main.c: 39:     PORTCbits.RC0 = 0;
   468  0755  1283               	bcf	3,5	;RP0=0, select bank0
   469  0756  1303               	bcf	3,6	;RP1=0, select bank0
   470  0757  1007               	bcf	7,0	;volatile
   471                           
   472                           ;main.c: 40:     _delay((unsigned long)((200)*(4000000/4000000.0)));
   473  0758  3042               	movlw	66
   474  0759  00F6               	movwf	??_main
   475  075A                     u47:
   476  075A  0BF6               	decfsz	??_main,f
   477  075B  2F5A               	goto	u47
   478  075C  0000               	nop
   479  075D                     l732:
   480                           
   481                           ;main.c: 41:     PORTCbits.RC0 = 1;
   482  075D  1283               	bcf	3,5	;RP0=0, select bank0
   483  075E  1303               	bcf	3,6	;RP1=0, select bank0
   484  075F  1407               	bsf	7,0	;volatile
   485                           
   486                           ;main.c: 42:     _delay((unsigned long)((1000)*(4000000/4000000.0)));
   487  0760  30C7               	movlw	199
   488  0761  00F6               	movwf	??_main
   489  0762                     u57:
   490  0762  2F63               	nop2
   491  0763  0BF6               	decfsz	??_main,f
   492  0764  2F62               	goto	u57
   493  0765  2F66               	nop2
   494  0766  2F67               	nop2
   495  0767                     l734:
   496                           
   497                           ;main.c: 43:     PORTCbits.RC0 = 0;
   498  0767  1283               	bcf	3,5	;RP0=0, select bank0
   499  0768  1303               	bcf	3,6	;RP1=0, select bank0
   500  0769  1007               	bcf	7,0	;volatile
   501                           
   502                           ;main.c: 44:     _delay((unsigned long)((19000)*(4000000/4000000.0)));
   503  076A  3019               	movlw	25
   504  076B  00F7               	movwf	??_main+1
   505  076C  30AB               	movlw	171
   506  076D  00F6               	movwf	??_main
   507  076E                     u67:
   508  076E  0BF6               	decfsz	??_main,f
   509  076F  2F6E               	goto	u67
   510  0770  0BF7               	decfsz	??_main+1,f
   511  0771  2F6E               	goto	u67
   512  0772  2F73               	nop2
   513                           
   514                           ;main.c: 45:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   515  0773  3006               	movlw	6
   516  0774  00F8               	movwf	??_main+2
   517  0775  3013               	movlw	19
   518  0776  00F7               	movwf	??_main+1
   519  0777  30AD               	movlw	173
   520  0778  00F6               	movwf	??_main
   521  0779                     u77:
   522  0779  0BF6               	decfsz	??_main,f
   523  077A  2F79               	goto	u77
   524  077B  0BF7               	decfsz	??_main+1,f
   525  077C  2F79               	goto	u77
   526  077D  0BF8               	decfsz	??_main+2,f
   527  077E  2F79               	goto	u77
   528  077F  2F80               	nop2
   529  0780                     l736:
   530                           
   531                           ;main.c: 48:         servo_delay_us(1000);
   532  0780  30E8               	movlw	232
   533  0781  00F2               	movwf	servo_delay_us@delay
   534  0782  3003               	movlw	3
   535  0783  00F3               	movwf	servo_delay_us@delay+1
   536  0784  120A  118A  2720  120A  118A  	fcall	_servo_delay_us
   537  0789                     l738:
   538                           
   539                           ;main.c: 49:                 servo_delay_us(1000);
   540  0789  30E8               	movlw	232
   541  078A  00F2               	movwf	servo_delay_us@delay
   542  078B  3003               	movlw	3
   543  078C  00F3               	movwf	servo_delay_us@delay+1
   544  078D  120A  118A  2720  120A  118A  	fcall	_servo_delay_us
   545  0792                     l740:
   546                           
   547                           ;main.c: 50:                         servo_delay_us(1000);
   548  0792  30E8               	movlw	232
   549  0793  00F2               	movwf	servo_delay_us@delay
   550  0794  3003               	movlw	3
   551  0795  00F3               	movwf	servo_delay_us@delay+1
   552  0796  120A  118A  2720  120A  118A  	fcall	_servo_delay_us
   553  079B                     l742:
   554                           
   555                           ;main.c: 51:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   556  079B  3006               	movlw	6
   557  079C  00F8               	movwf	??_main+2
   558  079D  3013               	movlw	19
   559  079E  00F7               	movwf	??_main+1
   560  079F  30AD               	movlw	173
   561  07A0  00F6               	movwf	??_main
   562  07A1                     u87:
   563  07A1  0BF6               	decfsz	??_main,f
   564  07A2  2FA1               	goto	u87
   565  07A3  0BF7               	decfsz	??_main+1,f
   566  07A4  2FA1               	goto	u87
   567  07A5  0BF8               	decfsz	??_main+2,f
   568  07A6  2FA1               	goto	u87
   569  07A7  2FA8               	nop2
   570                           
   571                           ;main.c: 53:         servo_delay_us(1500);
   572  07A8  30DC               	movlw	220
   573  07A9  00F2               	movwf	servo_delay_us@delay
   574  07AA  3005               	movlw	5
   575  07AB  00F3               	movwf	servo_delay_us@delay+1
   576  07AC  120A  118A  2720  120A  118A  	fcall	_servo_delay_us
   577                           
   578                           ;main.c: 54:                 servo_delay_us(1500);
   579  07B1  30DC               	movlw	220
   580  07B2  00F2               	movwf	servo_delay_us@delay
   581  07B3  3005               	movlw	5
   582  07B4  00F3               	movwf	servo_delay_us@delay+1
   583  07B5  120A  118A  2720  120A  118A  	fcall	_servo_delay_us
   584                           
   585                           ;main.c: 55:                         servo_delay_us(1500);
   586  07BA  30DC               	movlw	220
   587  07BB  00F2               	movwf	servo_delay_us@delay
   588  07BC  3005               	movlw	5
   589  07BD  00F3               	movwf	servo_delay_us@delay+1
   590  07BE  120A  118A  2720  120A  118A  	fcall	_servo_delay_us
   591  07C3                     l744:
   592                           
   593                           ;main.c: 56:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   594  07C3  3006               	movlw	6
   595  07C4  00F8               	movwf	??_main+2
   596  07C5  3013               	movlw	19
   597  07C6  00F7               	movwf	??_main+1
   598  07C7  30AD               	movlw	173
   599  07C8  00F6               	movwf	??_main
   600  07C9                     u97:
   601  07C9  0BF6               	decfsz	??_main,f
   602  07CA  2FC9               	goto	u97
   603  07CB  0BF7               	decfsz	??_main+1,f
   604  07CC  2FC9               	goto	u97
   605  07CD  0BF8               	decfsz	??_main+2,f
   606  07CE  2FC9               	goto	u97
   607  07CF  2FD0               	nop2
   608  07D0                     l746:
   609                           
   610                           ;main.c: 58:          servo_delay_us(1750);
   611  07D0  30D6               	movlw	214
   612  07D1  00F2               	movwf	servo_delay_us@delay
   613  07D2  3006               	movlw	6
   614  07D3  00F3               	movwf	servo_delay_us@delay+1
   615  07D4  120A  118A  2720  120A  118A  	fcall	_servo_delay_us
   616  07D9                     l748:
   617                           
   618                           ;main.c: 59:                 servo_delay_us(1750);
   619  07D9  30D6               	movlw	214
   620  07DA  00F2               	movwf	servo_delay_us@delay
   621  07DB  3006               	movlw	6
   622  07DC  00F3               	movwf	servo_delay_us@delay+1
   623  07DD  120A  118A  2720  120A  118A  	fcall	_servo_delay_us
   624  07E2                     l750:
   625                           
   626                           ;main.c: 60:                         servo_delay_us(1750);
   627  07E2  30D6               	movlw	214
   628  07E3  00F2               	movwf	servo_delay_us@delay
   629  07E4  3006               	movlw	6
   630  07E5  00F3               	movwf	servo_delay_us@delay+1
   631  07E6  120A  118A  2720  120A  118A  	fcall	_servo_delay_us
   632                           
   633                           ;main.c: 61:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   634  07EB  3006               	movlw	6
   635  07EC  00F8               	movwf	??_main+2
   636  07ED  3013               	movlw	19
   637  07EE  00F7               	movwf	??_main+1
   638  07EF  30AD               	movlw	173
   639  07F0  00F6               	movwf	??_main
   640  07F1                     u107:
   641  07F1  0BF6               	decfsz	??_main,f
   642  07F2  2FF1               	goto	u107
   643  07F3  0BF7               	decfsz	??_main+1,f
   644  07F4  2FF1               	goto	u107
   645  07F5  0BF8               	decfsz	??_main+2,f
   646  07F6  2FF1               	goto	u107
   647  07F7  2FF8               	nop2
   648  07F8  2F80               	goto	l736
   649  07F9  120A  118A  2800   	ljmp	start
   650  07FC                     __end_of_main:
   651                           
   652                           	psect	text1
   653  0720                     __ptext1:	
   654 ;; *************** function _servo_delay_us *****************
   655 ;; Defined at:
   656 ;;		line 77 in file "./prototipos.h"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  delay           2    2[COMMON] unsigned int 
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         2       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          2       0       0       0       0
   673 ;;      Totals:         4       0       0       0       0
   674 ;;Total ram usage:        4 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; Hardware stack levels required when called: 1
   677 ;; This function calls:
   678 ;;		_delay_us
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684  0720                     _servo_delay_us:	
   685                           ;psect for function _servo_delay_us
   686                           
   687  0720                     l716:	
   688                           ;incstack = 0
   689                           ; Regs used in _servo_delay_us: [wreg+status,2+status,0+pclath+cstack]
   690                           
   691                           
   692                           ;./prototipos.h: 78:     PORTCbits.RC0 = 1;
   693  0720  1283               	bcf	3,5	;RP0=0, select bank0
   694  0721  1303               	bcf	3,6	;RP1=0, select bank0
   695  0722  1407               	bsf	7,0	;volatile
   696  0723                     l718:
   697                           
   698                           ;./prototipos.h: 79:     delay_us(delay);
   699  0723  0873               	movf	servo_delay_us@delay+1,w
   700  0724  00F1               	movwf	delay_us@microseconds+1
   701  0725  0872               	movf	servo_delay_us@delay,w
   702  0726  00F0               	movwf	delay_us@microseconds
   703  0727  120A  118A  2711  120A  118A  	fcall	_delay_us
   704  072C                     l720:
   705                           
   706                           ;./prototipos.h: 80:     PORTCbits.RC0 = 0;
   707  072C  1283               	bcf	3,5	;RP0=0, select bank0
   708  072D  1303               	bcf	3,6	;RP1=0, select bank0
   709  072E  1007               	bcf	7,0	;volatile
   710                           
   711                           ;./prototipos.h: 81:     delay_us(2000 - delay);
   712  072F  30D0               	movlw	208
   713  0730  00F4               	movwf	??_servo_delay_us
   714  0731  3007               	movlw	7
   715  0732  00F5               	movwf	??_servo_delay_us+1
   716  0733  0872               	movf	servo_delay_us@delay,w
   717  0734  0274               	subwf	??_servo_delay_us,w
   718  0735  00F0               	movwf	delay_us@microseconds
   719  0736  0873               	movf	servo_delay_us@delay+1,w
   720  0737  1C03               	skipc
   721  0738  0A73               	incf	servo_delay_us@delay+1,w
   722  0739  0275               	subwf	??_servo_delay_us+1,w
   723  073A  00F1               	movwf	delay_us@microseconds+1
   724  073B  120A  118A  2711  120A  118A  	fcall	_delay_us
   725  0740                     l722:
   726                           
   727                           ;./prototipos.h: 82:     _delay((unsigned long)((18000)*(4000000/4000000.0)));
   728  0740  3018               	movlw	24
   729  0741  00F5               	movwf	??_servo_delay_us+1
   730  0742  305F               	movlw	95
   731  0743  00F4               	movwf	??_servo_delay_us
   732  0744                     u117:
   733  0744  0BF4               	decfsz	??_servo_delay_us,f
   734  0745  2F44               	goto	u117
   735  0746  0BF5               	decfsz	??_servo_delay_us+1,f
   736  0747  2F44               	goto	u117
   737  0748                     l46:
   738  0748  0008               	return
   739  0749                     __end_of_servo_delay_us:
   740                           
   741                           	psect	text2
   742  0711                     __ptext2:	
   743 ;; *************** function _delay_us *****************
   744 ;; Defined at:
   745 ;;		line 70 in file "./prototipos.h"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  microseconds    2    0[COMMON] unsigned int 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         2       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0
   762 ;;      Totals:         2       0       0       0       0
   763 ;;Total ram usage:        2 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_servo_delay_us
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772  0711                     _delay_us:	
   773                           ;psect for function _delay_us
   774                           
   775  0711                     l710:	
   776                           ;incstack = 0
   777                           ; Regs used in _delay_us: [wreg+status,2+status,0]
   778                           
   779                           
   780                           ;./prototipos.h: 71:    while(microseconds > 0){
   781  0711  2F19               	goto	l714
   782  0712                     l41:
   783                           
   784                           ;./prototipos.h: 72:        _delay((unsigned long)((1)*(4000000/4000000.0)));
   785  0712  0000               	nop
   786  0713                     l712:
   787                           
   788                           ;./prototipos.h: 73:       microseconds--;
   789  0713  3001               	movlw	1
   790  0714  02F0               	subwf	delay_us@microseconds,f
   791  0715  3000               	movlw	0
   792  0716  1C03               	skipc
   793  0717  03F1               	decf	delay_us@microseconds+1,f
   794  0718  02F1               	subwf	delay_us@microseconds+1,f
   795  0719                     l714:
   796                           
   797                           ;./prototipos.h: 71:    while(microseconds > 0){
   798  0719  0870               	movf	delay_us@microseconds,w
   799  071A  0471               	iorwf	delay_us@microseconds+1,w
   800  071B  1D03               	btfss	3,2
   801  071C  2F1E               	goto	u31
   802  071D  2F1F               	goto	u30
   803  071E                     u31:
   804  071E  2F12               	goto	l41
   805  071F                     u30:
   806  071F                     l43:
   807  071F  0008               	return
   808  0720                     __end_of_delay_us:
   809  007E                     btemp	set	126	;btemp
   810  007E                     wtemp0	set	126
   811                           
   812                           	psect	idloc
   813                           
   814                           ;Config register IDLOC0 @ 0x2000
   815                           ;	unspecified, using default values
   816  2000                     	org	8192
   817  2000  3FFF               	dw	16383
   818                           
   819                           ;Config register IDLOC1 @ 0x2001
   820                           ;	unspecified, using default values
   821  2001                     	org	8193
   822  2001  3FFF               	dw	16383
   823                           
   824                           ;Config register IDLOC2 @ 0x2002
   825                           ;	unspecified, using default values
   826  2002                     	org	8194
   827  2002  3FFF               	dw	16383
   828                           
   829                           ;Config register IDLOC3 @ 0x2003
   830                           ;	unspecified, using default values
   831  2003                     	org	8195
   832  2003  3FFF               	dw	16383
   833                           
   834                           	psect	config
   835                           
   836                           ;Config register CONFIG1 @ 0x2007
   837                           ;	Oscillator Selection bits
   838                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   839                           ;	Watchdog Timer Enable bit
   840                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   841                           ;	Power-up Timer Enable bit
   842                           ;	PWRTE = ON, PWRT enabled
   843                           ;	RE3/MCLR pin function select bit
   844                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   845                           ;	Code Protection bit
   846                           ;	CP = OFF, Program memory code protection is disabled
   847                           ;	Data Code Protection bit
   848                           ;	CPD = OFF, Data memory code protection is disabled
   849                           ;	Brown Out Reset Selection bits
   850                           ;	BOREN = OFF, BOR disabled
   851                           ;	Internal External Switchover bit
   852                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   853                           ;	Fail-Safe Clock Monitor Enabled bit
   854                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   855                           ;	Low Voltage Programming Enable bit
   856                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   857                           ;	In-Circuit Debugger Mode bit
   858                           ;	DEBUG = 0x1, unprogrammed default
   859  2007                     	org	8199
   860  2007  28E4               	dw	10468
   861                           
   862                           ;Config register CONFIG2 @ 0x2008
   863                           ;	Brown-out Reset Selection bit
   864                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   865                           ;	Flash Program Memory Self Write Enable bits
   866                           ;	WRT = OFF, Write protection off
   867  2008                     	org	8200
   868  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_servo_delay_us
    _servo_delay_us->_delay_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     903
                                              6 COMMON     3     3      0
                     _servo_delay_us
 ---------------------------------------------------------------------------------
 (1) _servo_delay_us                                       4     2      2     903
                                              2 COMMON     4     2      2
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _delay_us                                             2     0      2     175
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servo_delay_us
     _delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 27 08:35:43 2022

                     l41 0712                       l43 071F                       l46 0748  
                     u30 071F                       u31 071E                       u47 075A  
                     u57 0762                       u67 076E                       u77 0779  
                     u87 07A1                       u97 07C9                      l710 0711  
                    l712 0713                      l720 072C                      l714 0719  
                    l722 0740                      l730 0755                      l716 0720  
                    l740 0792                      l732 075D                      l724 0749  
                    l718 0723                      l750 07E2                      l742 079B  
                    l734 0767                      l726 074F                      l744 07C3  
                    l736 0780                      l728 0752                      l746 07D0  
                    l738 0789                      l748 07D9                      u107 07F1  
                    u117 0744                     _main 0749                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC         ??_servo_delay_us 0074                   ??_main 0076  
       __end_of_delay_us 0720  __end_of__initialization 07FC           __pcstackCOMMON 0070  
   delay_us@microseconds 0070               __pmaintext 0749                ?_delay_us 0070  
                __ptext1 0720                  __ptext2 0711               ??_delay_us 0072  
   end_of_initialization 07FC                _PORTAbits 0005                _PORTCbits 0007  
    start_initialization 07FC                ___latbits 0002      servo_delay_us@delay 0072  
         _servo_delay_us 0720   __end_of_servo_delay_us 0749                 _delay_us 0711  
        ?_servo_delay_us 0072  
