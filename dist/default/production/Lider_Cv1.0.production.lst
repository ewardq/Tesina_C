

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 19 12:04:11 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.40
    13                           ; Generated 17/11/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F886 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  0089                     	;# 
   162  008C                     	;# 
   163  008D                     	;# 
   164  008E                     	;# 
   165  008F                     	;# 
   166  0090                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0093                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0097                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  0105                     	;# 
   185  0107                     	;# 
   186  0108                     	;# 
   187  0109                     	;# 
   188  010C                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  0185                     	;# 
   194  0187                     	;# 
   195  0188                     	;# 
   196  0189                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  000E                     	;# 
   214  000F                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0013                     	;# 
   219  0014                     	;# 
   220  0015                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001B                     	;# 
   229  001C                     	;# 
   230  001D                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  0081                     	;# 
   234  0085                     	;# 
   235  0086                     	;# 
   236  0087                     	;# 
   237  0089                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  008E                     	;# 
   241  008F                     	;# 
   242  0090                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0093                     	;# 
   247  0093                     	;# 
   248  0094                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  0105                     	;# 
   261  0107                     	;# 
   262  0108                     	;# 
   263  0109                     	;# 
   264  010C                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  010F                     	;# 
   269  0185                     	;# 
   270  0187                     	;# 
   271  0188                     	;# 
   272  0189                     	;# 
   273  018C                     	;# 
   274  018D                     	;# 
   275  0000                     	;# 
   276  0001                     	;# 
   277  0002                     	;# 
   278  0003                     	;# 
   279  0004                     	;# 
   280  0005                     	;# 
   281  0006                     	;# 
   282  0007                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000D                     	;# 
   288  000E                     	;# 
   289  000E                     	;# 
   290  000F                     	;# 
   291  0010                     	;# 
   292  0011                     	;# 
   293  0012                     	;# 
   294  0013                     	;# 
   295  0014                     	;# 
   296  0015                     	;# 
   297  0015                     	;# 
   298  0016                     	;# 
   299  0017                     	;# 
   300  0018                     	;# 
   301  0019                     	;# 
   302  001A                     	;# 
   303  001B                     	;# 
   304  001B                     	;# 
   305  001C                     	;# 
   306  001D                     	;# 
   307  001E                     	;# 
   308  001F                     	;# 
   309  0081                     	;# 
   310  0085                     	;# 
   311  0086                     	;# 
   312  0087                     	;# 
   313  0089                     	;# 
   314  008C                     	;# 
   315  008D                     	;# 
   316  008E                     	;# 
   317  008F                     	;# 
   318  0090                     	;# 
   319  0091                     	;# 
   320  0092                     	;# 
   321  0093                     	;# 
   322  0093                     	;# 
   323  0093                     	;# 
   324  0094                     	;# 
   325  0095                     	;# 
   326  0096                     	;# 
   327  0097                     	;# 
   328  0098                     	;# 
   329  0099                     	;# 
   330  009A                     	;# 
   331  009B                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  009F                     	;# 
   336  0105                     	;# 
   337  0107                     	;# 
   338  0108                     	;# 
   339  0109                     	;# 
   340  010C                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010E                     	;# 
   344  010F                     	;# 
   345  0185                     	;# 
   346  0187                     	;# 
   347  0188                     	;# 
   348  0189                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  0007                     _PORTC	set	7
   352  0007                     _PORTCbits	set	7
   353  0006                     _PORTB	set	6
   354  0086                     _TRISB	set	134
   355  0087                     _TRISC	set	135
   356                           
   357                           	psect	cinit
   358  07FC                     start_initialization:	
   359                           ; #config settings
   360                           
   361  07FC                     __initialization:
   362  07FC                     end_of_initialization:	
   363                           ;End of C runtime variable initialization code
   364                           
   365  07FC                     __end_of__initialization:
   366  07FC  0183               	clrf	3
   367  07FD  120A  118A  2F7F   	ljmp	_main	;jump to C main() function
   368                           
   369                           	psect	cstackCOMMON
   370  0070                     __pcstackCOMMON:
   371  0070                     ?_motor:
   372  0070                     ??_motor:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_main:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ??_main:	
   379                           ; 1 bytes @ 0x0
   380                           
   381                           
   382                           ; 1 bytes @ 0x0
   383  0070                     	ds	3
   384  0073                     main@A_old:
   385                           
   386                           ; 1 bytes @ 0x3
   387  0073                     	ds	1
   388  0074                     main@Encoder1:
   389                           
   390                           ; 2 bytes @ 0x4
   391  0074                     	ds	2
   392  0076                     main@LED:
   393                           
   394                           ; 1 bytes @ 0x6
   395  0076                     	ds	1
   396  0077                     main@A:
   397                           
   398                           ; 1 bytes @ 0x7
   399  0077                     	ds	1
   400                           
   401                           	psect	maintext
   402  077F                     __pmaintext:	
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 30 in file "main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  Encoder1        2    4[COMMON] unsigned int 
   413 ;;  Encoder2        2    0        unsigned int 
   414 ;;  A               1    7[COMMON] _Bool 
   415 ;;  LED             1    6[COMMON] char 
   416 ;;  A_old           1    3[COMMON] _Bool 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         5       0       0       0       0
   428 ;;      Temps:          3       0       0       0       0
   429 ;;      Totals:         8       0       0       0       0
   430 ;;Total ram usage:        8 bytes
   431 ;; Hardware stack levels required when called: 1
   432 ;; This function calls:
   433 ;;		_motor
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439  077F                     _main:	
   440                           ;psect for function _main
   441                           
   442  077F                     l631:	
   443                           ;incstack = 0
   444                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   445                           
   446                           
   447                           ;main.c: 31:     int8_t LED = 1;
   448  077F  01F6               	clrf	main@LED
   449  0780  0AF6               	incf	main@LED,f
   450  0781                     l633:
   451                           
   452                           ;main.c: 32:     TRISC = 0b11110000;
   453  0781  30F0               	movlw	240
   454  0782  1683               	bsf	3,5	;RP0=1, select bank1
   455  0783  1303               	bcf	3,6	;RP1=0, select bank1
   456  0784  0087               	movwf	7	;volatile
   457  0785                     l635:
   458                           
   459                           ;main.c: 33:     TRISB = 0x00;
   460  0785  0186               	clrf	6	;volatile
   461  0786                     l637:
   462                           
   463                           ;main.c: 35:     uint16_t Encoder1 = 0;
   464  0786  01F4               	clrf	main@Encoder1
   465  0787  01F5               	clrf	main@Encoder1+1
   466  0788                     l639:
   467  0788                     l641:
   468                           
   469                           ;main.c: 38:     _Bool A;;main.c: 39:     _Bool A_old;;main.c: 41:     PORTB = PORTB | L
      +                          ED;
   470  0788  1283               	bcf	3,5	;RP0=0, select bank0
   471  0789  1303               	bcf	3,6	;RP1=0, select bank0
   472  078A  0806               	movf	6,w	;volatile
   473  078B  3801               	iorlw	1
   474  078C  0086               	movwf	6	;volatile
   475  078D                     l643:
   476                           
   477                           ;main.c: 44:     motor();
   478  078D  120A  118A  2776  120A  118A  	fcall	_motor
   479  0792                     l645:
   480                           
   481                           ;main.c: 54:     A = PORTCbits.RC5 ^ PORTCbits.RC4;
   482  0792  1283               	bcf	3,5	;RP0=0, select bank0
   483  0793  1303               	bcf	3,6	;RP1=0, select bank0
   484  0794  1A07               	btfsc	7,4	;volatile
   485  0795  2F97               	goto	u11
   486  0796  2F99               	goto	u10
   487  0797                     u11:
   488  0797  3001               	movlw	1
   489  0798  2F9A               	goto	u12
   490  0799                     u10:
   491  0799  3000               	movlw	0
   492  079A                     u12:
   493  079A  00F0               	movwf	??_main
   494  079B  1A87               	btfsc	7,5	;volatile
   495  079C  2F9E               	goto	u21
   496  079D  2FA0               	goto	u20
   497  079E                     u21:
   498  079E  3001               	movlw	1
   499  079F  2FA1               	goto	u22
   500  07A0                     u20:
   501  07A0  3000               	movlw	0
   502  07A1                     u22:
   503  07A1  0670               	xorwf	??_main,w
   504  07A2  1D03               	skipz
   505  07A3  2FA5               	goto	u31
   506  07A4  2FA7               	goto	u30
   507  07A5                     u31:
   508  07A5  3001               	movlw	1
   509  07A6  2FA8               	goto	u40
   510  07A7                     u30:
   511  07A7  3000               	movlw	0
   512  07A8                     u40:
   513  07A8  00F1               	movwf	??_main+1
   514  07A9  0871               	movf	??_main+1,w
   515  07AA  00F7               	movwf	main@A
   516  07AB                     l647:
   517                           
   518                           ;main.c: 56:     if ((A_old != A) & (A == 1)){
   519  07AB  0873               	movf	main@A_old,w
   520  07AC  0677               	xorwf	main@A,w
   521  07AD  1903               	skipnz
   522  07AE  2FB0               	goto	u51
   523  07AF  2FB1               	goto	u50
   524  07B0                     u51:
   525  07B0  2FBC               	goto	l653
   526  07B1                     u50:
   527  07B1                     l649:
   528  07B1  0377               	decf	main@A,w
   529  07B2  1D03               	btfss	3,2
   530  07B3  2FB5               	goto	u61
   531  07B4  2FB6               	goto	u60
   532  07B5                     u61:
   533  07B5  2FBC               	goto	l653
   534  07B6                     u60:
   535  07B6                     l651:
   536                           
   537                           ;main.c: 57:         Encoder1++;}
   538  07B6  3001               	movlw	1
   539  07B7  07F4               	addwf	main@Encoder1,f
   540  07B8  1803               	skipnc
   541  07B9  0AF5               	incf	main@Encoder1+1,f
   542  07BA  3000               	movlw	0
   543  07BB  07F5               	addwf	main@Encoder1+1,f
   544  07BC                     l653:
   545                           
   546                           ;main.c: 58:     A_old = A+1;
   547  07BC  0877               	movf	main@A,w
   548  07BD  3E01               	addlw	1
   549  07BE  00F0               	movwf	??_main
   550  07BF  3000               	movlw	0
   551  07C0  1803               	skipnc
   552  07C1  3001               	movlw	1
   553  07C2  00F1               	movwf	??_main+1
   554  07C3  0870               	movf	??_main,w
   555  07C4  0471               	iorwf	??_main+1,w
   556  07C5  1D03               	btfss	3,2
   557  07C6  2FC8               	goto	u71
   558  07C7  2FCA               	goto	u70
   559  07C8                     u71:
   560  07C8  3001               	movlw	1
   561  07C9  2FCB               	goto	u80
   562  07CA                     u70:
   563  07CA  3000               	movlw	0
   564  07CB                     u80:
   565  07CB  00F2               	movwf	??_main+2
   566  07CC  0872               	movf	??_main+2,w
   567  07CD  00F3               	movwf	main@A_old
   568  07CE                     l655:
   569                           
   570                           ;main.c: 60:     if(Encoder1 == 2100)
   571  07CE  3034               	movlw	52
   572  07CF  0674               	xorwf	main@Encoder1,w
   573  07D0  3008               	movlw	8
   574  07D1  1903               	skipnz
   575  07D2  0675               	xorwf	main@Encoder1+1,w
   576  07D3  1D03               	btfss	3,2
   577  07D4  2FD6               	goto	u91
   578  07D5  2FD7               	goto	u90
   579  07D6                     u91:
   580  07D6  2FDA               	goto	l20
   581  07D7                     u90:
   582  07D7                     l657:
   583                           
   584                           ;main.c: 61:         PORTB = PORTB | LED;
   585  07D7  0876               	movf	main@LED,w
   586  07D8  0406               	iorwf	6,w	;volatile
   587  07D9  0086               	movwf	6	;volatile
   588  07DA                     l20:
   589                           
   590                           ;main.c: 63:     }while(Encoder1 != 2100);
   591  07DA  3034               	movlw	52
   592  07DB  0674               	xorwf	main@Encoder1,w
   593  07DC  3008               	movlw	8
   594  07DD  1903               	skipnz
   595  07DE  0675               	xorwf	main@Encoder1+1,w
   596  07DF  1D03               	btfss	3,2
   597  07E0  2FE2               	goto	u101
   598  07E1  2FE3               	goto	u100
   599  07E2                     u101:
   600  07E2  2F92               	goto	l645
   601  07E3                     u100:
   602  07E3                     l21:
   603                           
   604                           ;main.c: 64:     PORTCbits.RC1 = 0;
   605  07E3  1087               	bcf	7,1	;volatile
   606  07E4                     l659:
   607                           
   608                           ;main.c: 65:     _delay((unsigned long)((500)*(4000000/4000.0)));
   609  07E4  3003               	movlw	3
   610  07E5  00F2               	movwf	??_main+2
   611  07E6  308A               	movlw	138
   612  07E7  00F1               	movwf	??_main+1
   613  07E8  3055               	movlw	85
   614  07E9  00F0               	movwf	??_main
   615  07EA                     u117:
   616  07EA  0BF0               	decfsz	??_main,f
   617  07EB  2FEA               	goto	u117
   618  07EC  0BF1               	decfsz	??_main+1,f
   619  07ED  2FEA               	goto	u117
   620  07EE  0BF2               	decfsz	??_main+2,f
   621  07EF  2FEA               	goto	u117
   622  07F0  2FF1               	nop2
   623  07F1                     l661:
   624                           
   625                           ;main.c: 66:     PORTB = PORTB & ~LED;
   626  07F1  0976               	comf	main@LED,w
   627  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   628  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   629  07F4  0506               	andwf	6,w	;volatile
   630  07F5  0086               	movwf	6	;volatile
   631  07F6                     l663:
   632                           
   633                           ;main.c: 67:     Encoder1 = 0;
   634  07F6  01F4               	clrf	main@Encoder1
   635  07F7  01F5               	clrf	main@Encoder1+1
   636                           
   637                           ;main.c: 68:     }
   638  07F8  2F8D               	goto	l643
   639  07F9  120A  118A  2800   	ljmp	start
   640  07FC                     __end_of_main:
   641                           
   642                           	psect	text1
   643  0776                     __ptext1:	
   644 ;; *************** function _motor *****************
   645 ;; Defined at:
   646 ;;		line 4 in file "motor.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  mask            1    0        char 
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673  0776                     _motor:	
   674                           ;psect for function _motor
   675                           
   676  0776                     l623:	
   677                           ;incstack = 0
   678                           ; Regs used in _motor: [wreg+status,2+status,0]
   679                           
   680  0776                     l625:
   681                           
   682                           ;motor.c: 6:     PORTC = PORTC | mask;
   683  0776  1283               	bcf	3,5	;RP0=0, select bank0
   684  0777  1303               	bcf	3,6	;RP1=0, select bank0
   685  0778  0807               	movf	7,w	;volatile
   686  0779  3802               	iorlw	2
   687  077A  0087               	movwf	7	;volatile
   688  077B                     l627:
   689  077B                     l629:
   690                           
   691                           ;motor.c: 8:     PORTC = PORTC & ~mask;
   692  077B  0807               	movf	7,w	;volatile
   693  077C  39FE               	andlw	254
   694  077D  0087               	movwf	7	;volatile
   695  077E                     l28:
   696  077E  0008               	return
   697  077F                     __end_of_motor:
   698  007E                     btemp	set	126	;btemp
   699  007E                     wtemp0	set	126
   700                           
   701                           	psect	idloc
   702                           
   703                           ;Config register IDLOC0 @ 0x2000
   704                           ;	unspecified, using default values
   705  2000                     	org	8192
   706  2000  3FFF               	dw	16383
   707                           
   708                           ;Config register IDLOC1 @ 0x2001
   709                           ;	unspecified, using default values
   710  2001                     	org	8193
   711  2001  3FFF               	dw	16383
   712                           
   713                           ;Config register IDLOC2 @ 0x2002
   714                           ;	unspecified, using default values
   715  2002                     	org	8194
   716  2002  3FFF               	dw	16383
   717                           
   718                           ;Config register IDLOC3 @ 0x2003
   719                           ;	unspecified, using default values
   720  2003                     	org	8195
   721  2003  3FFF               	dw	16383
   722                           
   723                           	psect	config
   724                           
   725                           ;Config register CONFIG1 @ 0x2007
   726                           ;	Oscillator Selection bits
   727                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   728                           ;	Watchdog Timer Enable bit
   729                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   730                           ;	Power-up Timer Enable bit
   731                           ;	PWRTE = ON, PWRT enabled
   732                           ;	RE3/MCLR pin function select bit
   733                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   734                           ;	Code Protection bit
   735                           ;	CP = OFF, Program memory code protection is disabled
   736                           ;	Data Code Protection bit
   737                           ;	CPD = OFF, Data memory code protection is disabled
   738                           ;	Brown Out Reset Selection bits
   739                           ;	BOREN = OFF, BOR disabled
   740                           ;	Internal External Switchover bit
   741                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   742                           ;	Fail-Safe Clock Monitor Enabled bit
   743                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   744                           ;	Low Voltage Programming Enable bit
   745                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   746                           ;	In-Circuit Debugger Mode bit
   747                           ;	DEBUG = 0x1, unprogrammed default
   748  2007                     	org	8199
   749  2007  28E4               	dw	10468
   750                           
   751                           ;Config register CONFIG2 @ 0x2008
   752                           ;	Brown-out Reset Selection bit
   753                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   754                           ;	Flash Program Memory Self Write Enable bits
   755                           ;	WRT = OFF, Write protection off
   756  2008                     	org	8200
   757  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     165
                                              0 COMMON     8     8      0
                              _motor
 ---------------------------------------------------------------------------------
 (1) _motor                                                1     1      0      30
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _motor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 19 12:04:11 2022

                     l20 07DA                       l21 07E3                       l28 077E  
                     u10 0799                       u11 0797                       u20 07A0  
                     u12 079A                       u21 079E                       u30 07A7  
                     u22 07A1                       u31 07A5                       u40 07A8  
                     u50 07B1                       u51 07B0                       u60 07B6  
                     u61 07B5                       u70 07CA                       u71 07C8  
                     u80 07CB                       u90 07D7                       u91 07D6  
           main@Encoder1 0074                      l623 0776                      l631 077F  
                    l625 0776                      l641 0788                      l633 0781  
                    l627 077B                      l651 07B6                      l643 078D  
                    l635 0785                      l629 077B                      l661 07F1  
                    l653 07BC                      l645 0792                      l637 0786  
                    l663 07F6                      l655 07CE                      l647 07AB  
                    l639 0788                      l657 07D7                      l649 07B1  
                    l659 07E4                      u100 07E3                      u101 07E2  
                    u117 07EA                     _main 077F                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _motor 0776                    main@A 0077                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070                   ?_motor 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_motor 077F                  ??_motor 0070  
             __pmaintext 077F                  __ptext1 0776                  main@LED 0076  
   end_of_initialization 07FC                _PORTCbits 0007      start_initialization 07FC  
              ___latbits 0002                main@A_old 0073  
